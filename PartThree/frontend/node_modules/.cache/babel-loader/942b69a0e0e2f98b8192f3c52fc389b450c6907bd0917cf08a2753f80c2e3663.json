{"ast":null,"code":"// src/select.anatomy.ts\nimport { createAnatomy } from \"@zag-js/anatomy\";\nvar anatomy = createAnatomy(\"select\").parts(\"label\", \"positioner\", \"trigger\", \"indicator\", \"clearTrigger\", \"item\", \"itemText\", \"itemIndicator\", \"itemGroup\", \"itemGroupLabel\", \"list\", \"content\", \"root\", \"control\", \"valueText\");\nvar parts = anatomy.build();\n\n// src/select.collection.ts\nimport { Collection } from \"@zag-js/collection\";\nimport { ref } from \"@zag-js/core\";\nvar collection = options => {\n  return ref(new Collection(options));\n};\ncollection.empty = () => {\n  return ref(new Collection({\n    items: []\n  }));\n};\n\n// src/select.connect.ts\nimport { getEventKey, isLeftClick } from \"@zag-js/dom-event\";\nimport { ariaAttr, dataAttr, getByTypeahead, isEditableElement, isSelfTarget, isValidTabEvent, visuallyHiddenStyle } from \"@zag-js/dom-query\";\nimport { getPlacementStyles } from \"@zag-js/popper\";\n\n// src/select.dom.ts\nimport { createScope } from \"@zag-js/dom-query\";\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `select:${ctx.id}`,\n  getContentId: ctx => ctx.ids?.content ?? `select:${ctx.id}:content`,\n  getTriggerId: ctx => ctx.ids?.trigger ?? `select:${ctx.id}:trigger`,\n  getClearTriggerId: ctx => ctx.ids?.clearTrigger ?? `select:${ctx.id}:clear-trigger`,\n  getLabelId: ctx => ctx.ids?.label ?? `select:${ctx.id}:label`,\n  getControlId: ctx => ctx.ids?.control ?? `select:${ctx.id}:control`,\n  getItemId: (ctx, id) => ctx.ids?.item?.(id) ?? `select:${ctx.id}:option:${id}`,\n  getHiddenSelectId: ctx => ctx.ids?.hiddenSelect ?? `select:${ctx.id}:select`,\n  getPositionerId: ctx => ctx.ids?.positioner ?? `select:${ctx.id}:positioner`,\n  getItemGroupId: (ctx, id) => ctx.ids?.itemGroup?.(id) ?? `select:${ctx.id}:optgroup:${id}`,\n  getItemGroupLabelId: (ctx, id) => ctx.ids?.itemGroupLabel?.(id) ?? `select:${ctx.id}:optgroup-label:${id}`,\n  getHiddenSelectEl: ctx => dom.getById(ctx, dom.getHiddenSelectId(ctx)),\n  getContentEl: ctx => dom.getById(ctx, dom.getContentId(ctx)),\n  getControlEl: ctx => dom.getById(ctx, dom.getControlId(ctx)),\n  getTriggerEl: ctx => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getClearTriggerEl: ctx => dom.getById(ctx, dom.getClearTriggerId(ctx)),\n  getPositionerEl: ctx => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getHighlightedOptionEl(ctx) {\n    if (!ctx.highlightedValue) return null;\n    return dom.getById(ctx, dom.getItemId(ctx, ctx.highlightedValue));\n  }\n});\n\n// src/select.connect.ts\nfunction connect(state, send, normalize) {\n  const disabled = state.context.isDisabled;\n  const invalid = state.context.invalid;\n  const readOnly = state.context.readOnly;\n  const interactive = state.context.isInteractive;\n  const composite = state.context.composite;\n  const open = state.hasTag(\"open\");\n  const focused = state.matches(\"focused\");\n  const highlightedValue = state.context.highlightedValue;\n  const highlightedItem = state.context.highlightedItem;\n  const selectedItems = state.context.selectedItems;\n  const isTypingAhead = state.context.isTypingAhead;\n  const collection2 = state.context.collection;\n  const ariaActiveDescendant = highlightedValue ? dom.getItemId(state.context, highlightedValue) : void 0;\n  function getItemState(props2) {\n    const _disabled = collection2.getItemDisabled(props2.item);\n    const value = collection2.getItemValue(props2.item);\n    return {\n      value,\n      disabled: Boolean(disabled || _disabled),\n      highlighted: highlightedValue === value,\n      selected: state.context.value.includes(value)\n    };\n  }\n  const popperStyles = getPlacementStyles({\n    ...state.context.positioning,\n    placement: state.context.currentPlacement\n  });\n  return {\n    open,\n    focused,\n    empty: state.context.value.length === 0,\n    highlightedItem,\n    highlightedValue,\n    selectedItems,\n    hasSelectedItems: state.context.hasSelectedItems,\n    value: state.context.value,\n    valueAsString: state.context.valueAsString,\n    collection: collection2,\n    setCollection(collection3) {\n      send({\n        type: \"COLLECTION.SET\",\n        value: collection3\n      });\n    },\n    reposition(options = {}) {\n      send({\n        type: \"POSITIONING.SET\",\n        options\n      });\n    },\n    focus() {\n      dom.getTriggerEl(state.context)?.focus({\n        preventScroll: true\n      });\n    },\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    selectValue(value) {\n      send({\n        type: \"ITEM.SELECT\",\n        value\n      });\n    },\n    setValue(value) {\n      send({\n        type: \"VALUE.SET\",\n        value\n      });\n    },\n    selectAll() {\n      send({\n        type: \"VALUE.SET\",\n        value: collection2.getValues()\n      });\n    },\n    highlightValue(value) {\n      send({\n        type: \"HIGHLIGHTED_VALUE.SET\",\n        value\n      });\n    },\n    clearValue(value) {\n      if (value) {\n        send({\n          type: \"ITEM.CLEAR\",\n          value\n        });\n      } else {\n        send({\n          type: \"VALUE.CLEAR\"\n        });\n      }\n    },\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        ...parts.label.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n        htmlFor: dom.getHiddenSelectId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          dom.getTriggerEl(state.context)?.focus({\n            preventScroll: true\n          });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": dataAttr(focused),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        id: dom.getTriggerId(state.context),\n        disabled,\n        dir: state.context.dir,\n        type: \"button\",\n        role: \"combobox\",\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-expanded\": open,\n        \"aria-haspopup\": \"listbox\",\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-invalid\": invalid,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        ...parts.trigger.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n        \"data-placement\": state.context.currentPlacement,\n        \"data-placeholder-shown\": dataAttr(!state.context.hasSelectedItems),\n        onPointerDown(event) {\n          if (!isLeftClick(event)) return;\n          if (!interactive) return;\n          event.currentTarget.dataset.pointerType = event.pointerType;\n          if (disabled || event.pointerType === \"touch\") return;\n          send({\n            type: \"TRIGGER.CLICK\"\n          });\n        },\n        onClick(event) {\n          if (!interactive || event.button) return;\n          if (event.currentTarget.dataset.pointerType === \"touch\") {\n            send({\n              type: \"TRIGGER.CLICK\"\n            });\n          }\n        },\n        onFocus() {\n          send(\"TRIGGER.FOCUS\");\n        },\n        onBlur() {\n          send(\"TRIGGER.BLUR\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowUp() {\n              send({\n                type: \"TRIGGER.ARROW_UP\"\n              });\n            },\n            ArrowDown(event2) {\n              send({\n                type: event2.altKey ? \"OPEN\" : \"TRIGGER.ARROW_DOWN\"\n              });\n            },\n            ArrowLeft() {\n              send({\n                type: \"TRIGGER.ARROW_LEFT\"\n              });\n            },\n            ArrowRight() {\n              send({\n                type: \"TRIGGER.ARROW_RIGHT\"\n              });\n            },\n            Home() {\n              send({\n                type: \"TRIGGER.HOME\"\n              });\n            },\n            End() {\n              send({\n                type: \"TRIGGER.END\"\n              });\n            },\n            Enter() {\n              send({\n                type: \"TRIGGER.ENTER\"\n              });\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({\n                  type: \"TRIGGER.TYPEAHEAD\",\n                  key: event2.key\n                });\n              } else {\n                send({\n                  type: \"TRIGGER.ENTER\"\n                });\n              }\n            }\n          };\n          const exec = keyMap[getEventKey(event, state.context)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            return;\n          }\n          if (getByTypeahead.isValidEvent(event)) {\n            send({\n              type: \"TRIGGER.TYPEAHEAD\",\n              key: event.key\n            });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly)\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        id: dom.getItemId(state.context, itemState.value),\n        role: \"option\",\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        \"data-value\": itemState.value,\n        \"aria-selected\": itemState.selected,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n        \"data-disabled\": dataAttr(itemState.disabled),\n        \"aria-disabled\": ariaAttr(itemState.disabled),\n        onPointerMove(event) {\n          if (itemState.disabled || event.pointerType !== \"mouse\") return;\n          if (itemState.value === state.context.highlightedValue) return;\n          send({\n            type: \"ITEM.POINTER_MOVE\",\n            value: itemState.value\n          });\n        },\n        onPointerUp() {\n          if (itemState.disabled) return;\n          send({\n            type: \"ITEM.CLICK\",\n            src: \"pointerup\",\n            value: itemState.value\n          });\n        },\n        onPointerLeave(event) {\n          if (itemState.disabled) return;\n          if (props2.persistFocus) return;\n          if (event.pointerType !== \"mouse\") return;\n          const isArrowKey = [\"CONTENT.ARROW_UP\", \"CONTENT.ARROW_DOWN\"].includes(state.event.type);\n          if (isArrowKey) return;\n          send({\n            type: \"ITEM.POINTER_LEAVE\"\n          });\n        },\n        onTouchEnd(event) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-disabled\": dataAttr(itemState.disabled),\n        \"data-highlighted\": dataAttr(itemState.highlighted)\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        \"aria-hidden\": true,\n        ...parts.itemIndicator.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        hidden: !itemState.selected\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      const {\n        htmlFor\n      } = props2;\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        id: dom.getItemGroupLabelId(state.context, htmlFor),\n        role: \"group\",\n        dir: state.context.dir\n      });\n    },\n    getItemGroupProps(props2) {\n      const {\n        id\n      } = props2;\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        id: dom.getItemGroupId(state.context, id),\n        \"aria-labelledby\": dom.getItemGroupLabelId(state.context, id),\n        dir: state.context.dir\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        id: dom.getClearTriggerId(state.context),\n        type: \"button\",\n        \"aria-label\": \"Clear value\",\n        \"data-invalid\": dataAttr(invalid),\n        disabled,\n        hidden: !state.context.hasSelectedItems,\n        dir: state.context.dir,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"CLEAR.CLICK\");\n        }\n      });\n    },\n    getHiddenSelectProps() {\n      return normalize.select({\n        name: state.context.name,\n        form: state.context.form,\n        disabled,\n        multiple: state.context.multiple,\n        required: state.context.required,\n        \"aria-hidden\": true,\n        id: dom.getHiddenSelectId(state.context),\n        defaultValue: state.context.multiple ? state.context.value : state.context.value[0],\n        style: visuallyHiddenStyle,\n        tabIndex: -1,\n        // Some browser extensions will focus the hidden select.\n        // Let's forward the focus to the trigger.\n        onFocus() {\n          dom.getTriggerEl(state.context)?.focus({\n            preventScroll: true\n          });\n        },\n        \"aria-labelledby\": dom.getLabelId(state.context)\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        hidden: !open,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context),\n        role: composite ? \"listbox\" : \"dialog\",\n        ...parts.content.attrs,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": state.context.currentPlacement,\n        \"data-activedescendant\": ariaActiveDescendant,\n        \"aria-activedescendant\": composite ? ariaActiveDescendant : void 0,\n        \"aria-multiselectable\": state.context.multiple && composite ? true : void 0,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        tabIndex: 0,\n        onKeyDown(event) {\n          if (!interactive) return;\n          if (!isSelfTarget(event)) return;\n          if (event.key === \"Tab\") {\n            const valid = isValidTabEvent(event);\n            if (!valid) {\n              event.preventDefault();\n              return;\n            }\n          }\n          const keyMap = {\n            ArrowUp() {\n              send({\n                type: \"CONTENT.ARROW_UP\"\n              });\n            },\n            ArrowDown() {\n              send({\n                type: \"CONTENT.ARROW_DOWN\"\n              });\n            },\n            Home() {\n              send({\n                type: \"CONTENT.HOME\"\n              });\n            },\n            End() {\n              send({\n                type: \"CONTENT.END\"\n              });\n            },\n            Enter() {\n              send({\n                type: \"ITEM.CLICK\",\n                src: \"keydown.enter\"\n              });\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({\n                  type: \"CONTENT.TYPEAHEAD\",\n                  key: event2.key\n                });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            }\n          };\n          const exec = keyMap[getEventKey(event)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            return;\n          }\n          if (isEditableElement(event.target)) {\n            return;\n          }\n          if (getByTypeahead.isValidEvent(event)) {\n            send({\n              type: \"CONTENT.TYPEAHEAD\",\n              key: event.key\n            });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        tabIndex: 0,\n        role: !composite ? \"listbox\" : void 0,\n        \"aria-labelledby\": dom.getTriggerId(state.context),\n        \"aria-activedescendant\": !composite ? ariaActiveDescendant : void 0,\n        \"aria-multiselectable\": !composite && state.context.multiple ? true : void 0\n      });\n    }\n  };\n}\n\n// src/select.machine.ts\nimport { createMachine, guards } from \"@zag-js/core\";\nimport { trackDismissableElement } from \"@zag-js/dismissable\";\nimport { getByTypeahead as getByTypeahead2, getInitialFocus, observeAttributes, raf, scrollIntoView } from \"@zag-js/dom-query\";\nimport { trackFormControl } from \"@zag-js/form-utils\";\nimport { getPlacement } from \"@zag-js/popper\";\nimport { addOrRemove, compact, isEqual } from \"@zag-js/utils\";\nvar {\n  and,\n  not,\n  or\n} = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"select\",\n    context: {\n      value: [],\n      highlightedValue: null,\n      loopFocus: false,\n      closeOnSelect: !ctx.multiple,\n      disabled: false,\n      readOnly: false,\n      composite: true,\n      ...ctx,\n      highlightedItem: null,\n      selectedItems: [],\n      valueAsString: \"\",\n      collection: ctx.collection ?? collection.empty(),\n      typeahead: getByTypeahead2.defaultOptions,\n      fieldsetDisabled: false,\n      restoreFocus: true,\n      positioning: {\n        placement: \"bottom-start\",\n        gutter: 8,\n        ...ctx.positioning\n      }\n    },\n    computed: {\n      hasSelectedItems: ctx2 => ctx2.value.length > 0,\n      isTypingAhead: ctx2 => ctx2.typeahead.keysSoFar !== \"\",\n      isDisabled: ctx2 => !!ctx2.disabled || ctx2.fieldsetDisabled,\n      isInteractive: ctx2 => !(ctx2.isDisabled || ctx2.readOnly)\n    },\n    initial: ctx.open ? \"open\" : \"idle\",\n    created: [\"syncCollection\"],\n    entry: [\"syncSelectElement\"],\n    watch: {\n      open: [\"toggleVisibility\"],\n      value: [\"syncSelectedItems\", \"syncSelectElement\"],\n      highlightedValue: [\"syncHighlightedItem\"],\n      collection: [\"syncCollection\"]\n    },\n    on: {\n      \"HIGHLIGHTED_VALUE.SET\": {\n        actions: [\"setHighlightedItem\"]\n      },\n      \"ITEM.SELECT\": {\n        actions: [\"selectItem\"]\n      },\n      \"ITEM.CLEAR\": {\n        actions: [\"clearItem\"]\n      },\n      \"VALUE.SET\": {\n        actions: [\"setSelectedItems\"]\n      },\n      \"VALUE.CLEAR\": {\n        actions: [\"clearSelectedItems\"]\n      },\n      \"CLEAR.CLICK\": {\n        actions: [\"clearSelectedItems\", \"focusTriggerEl\"]\n      },\n      \"COLLECTION.SET\": {\n        actions: [\"setCollection\"]\n      }\n    },\n    activities: [\"trackFormControlState\"],\n    states: {\n      idle: {\n        tags: [\"closed\"],\n        on: {\n          \"CONTROLLED.OPEN\": [{\n            guard: \"isTriggerClickEvent\",\n            target: \"open\",\n            actions: [\"highlightFirstSelectedItem\"]\n          }, {\n            target: \"open\"\n          }],\n          \"TRIGGER.CLICK\": [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"highlightFirstSelectedItem\"]\n          }],\n          \"TRIGGER.FOCUS\": {\n            target: \"focused\"\n          },\n          OPEN: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }]\n        }\n      },\n      focused: {\n        tags: [\"closed\"],\n        entry: [\"focusTriggerEl\"],\n        on: {\n          \"CONTROLLED.OPEN\": [{\n            guard: \"isTriggerClickEvent\",\n            target: \"open\",\n            actions: [\"highlightFirstSelectedItem\"]\n          }, {\n            guard: \"isTriggerArrowUpEvent\",\n            target: \"open\",\n            actions: [\"highlightComputedLastItem\"]\n          }, {\n            guard: or(\"isTriggerArrowDownEvent\", \"isTriggerEnterEvent\"),\n            target: \"open\",\n            actions: [\"highlightComputedFirstItem\"]\n          }, {\n            target: \"open\"\n          }],\n          OPEN: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }],\n          \"TRIGGER.BLUR\": {\n            target: \"idle\"\n          },\n          \"TRIGGER.CLICK\": [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"highlightFirstSelectedItem\"]\n          }],\n          \"TRIGGER.ENTER\": [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"highlightComputedFirstItem\"]\n          }],\n          \"TRIGGER.ARROW_UP\": [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"highlightComputedLastItem\"]\n          }],\n          \"TRIGGER.ARROW_DOWN\": [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"highlightComputedFirstItem\"]\n          }],\n          \"TRIGGER.ARROW_LEFT\": [{\n            guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n            actions: [\"selectPreviousItem\"]\n          }, {\n            guard: not(\"multiple\"),\n            actions: [\"selectLastItem\"]\n          }],\n          \"TRIGGER.ARROW_RIGHT\": [{\n            guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n            actions: [\"selectNextItem\"]\n          }, {\n            guard: not(\"multiple\"),\n            actions: [\"selectFirstItem\"]\n          }],\n          \"TRIGGER.HOME\": {\n            guard: not(\"multiple\"),\n            actions: [\"selectFirstItem\"]\n          },\n          \"TRIGGER.END\": {\n            guard: not(\"multiple\"),\n            actions: [\"selectLastItem\"]\n          },\n          \"TRIGGER.TYPEAHEAD\": {\n            guard: not(\"multiple\"),\n            actions: [\"selectMatchingItem\"]\n          }\n        }\n      },\n      open: {\n        tags: [\"open\"],\n        entry: [\"setInitialFocus\"],\n        exit: [\"scrollContentToTop\"],\n        activities: [\"trackDismissableElement\", \"computePlacement\", \"scrollToHighlightedItem\"],\n        on: {\n          \"CONTROLLED.CLOSE\": [{\n            guard: \"shouldRestoreFocus\",\n            target: \"focused\",\n            actions: [\"clearHighlightedItem\"]\n          }, {\n            target: \"idle\",\n            actions: [\"clearHighlightedItem\"]\n          }],\n          CLOSE: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          }, {\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"clearHighlightedItem\"]\n          }],\n          \"TRIGGER.CLICK\": [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          }, {\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"clearHighlightedItem\"]\n          }],\n          \"ITEM.CLICK\": [{\n            guard: and(\"closeOnSelect\", \"isOpenControlled\"),\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\"]\n          }, {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\", \"clearHighlightedItem\"]\n          }, {\n            actions: [\"selectHighlightedItem\"]\n          }],\n          \"CONTENT.INTERACT_OUTSIDE\": [\n          // == group 1 ==\n          {\n            guard: and(\"shouldRestoreFocus\", \"isOpenControlled\"),\n            actions: [\"invokeOnClose\"]\n          }, {\n            guard: \"shouldRestoreFocus\",\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"clearHighlightedItem\"]\n          },\n          // == group 2 ==\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          }, {\n            target: \"idle\",\n            actions: [\"invokeOnClose\", \"clearHighlightedItem\"]\n          }],\n          \"CONTENT.HOME\": {\n            actions: [\"highlightFirstItem\"]\n          },\n          \"CONTENT.END\": {\n            actions: [\"highlightLastItem\"]\n          },\n          \"CONTENT.ARROW_DOWN\": [{\n            guard: and(\"hasHighlightedItem\", \"loop\", \"isLastItemHighlighted\"),\n            actions: [\"highlightFirstItem\"]\n          }, {\n            guard: \"hasHighlightedItem\",\n            actions: [\"highlightNextItem\"]\n          }, {\n            actions: [\"highlightFirstItem\"]\n          }],\n          \"CONTENT.ARROW_UP\": [{\n            guard: and(\"hasHighlightedItem\", \"loop\", \"isFirstItemHighlighted\"),\n            actions: [\"highlightLastItem\"]\n          }, {\n            guard: \"hasHighlightedItem\",\n            actions: [\"highlightPreviousItem\"]\n          }, {\n            actions: [\"highlightLastItem\"]\n          }],\n          \"CONTENT.TYPEAHEAD\": {\n            actions: [\"highlightMatchingItem\"]\n          },\n          \"ITEM.POINTER_MOVE\": {\n            actions: [\"highlightItem\"]\n          },\n          \"ITEM.POINTER_LEAVE\": {\n            actions: [\"clearHighlightedItem\"]\n          },\n          \"POSITIONING.SET\": {\n            actions: [\"reposition\"]\n          }\n        }\n      }\n    }\n  }, {\n    guards: {\n      loop: ctx2 => !!ctx2.loopFocus,\n      multiple: ctx2 => !!ctx2.multiple,\n      hasSelectedItems: ctx2 => !!ctx2.hasSelectedItems,\n      hasHighlightedItem: ctx2 => ctx2.highlightedValue != null,\n      isFirstItemHighlighted: ctx2 => ctx2.highlightedValue === ctx2.collection.firstValue,\n      isLastItemHighlighted: ctx2 => ctx2.highlightedValue === ctx2.collection.lastValue,\n      closeOnSelect: (ctx2, evt) => !!(evt.closeOnSelect ?? ctx2.closeOnSelect),\n      shouldRestoreFocus: ctx2 => !!ctx2.restoreFocus,\n      // guard assertions (for controlled mode)\n      isOpenControlled: ctx2 => !!ctx2[\"open.controlled\"],\n      isTriggerClickEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.CLICK\",\n      isTriggerEnterEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ENTER\",\n      isTriggerArrowUpEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ARROW_UP\",\n      isTriggerArrowDownEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ARROW_DOWN\"\n    },\n    activities: {\n      trackFormControlState(ctx2, _evt, {\n        initialContext\n      }) {\n        return trackFormControl(dom.getHiddenSelectEl(ctx2), {\n          onFieldsetDisabledChange(disabled) {\n            ctx2.fieldsetDisabled = disabled;\n          },\n          onFormReset() {\n            set.selectedItems(ctx2, initialContext.value);\n          }\n        });\n      },\n      trackDismissableElement(ctx2, _evt, {\n        send\n      }) {\n        const contentEl = () => dom.getContentEl(ctx2);\n        return trackDismissableElement(contentEl, {\n          defer: true,\n          exclude: [dom.getTriggerEl(ctx2), dom.getClearTriggerEl(ctx2)],\n          onFocusOutside: ctx2.onFocusOutside,\n          onPointerDownOutside: ctx2.onPointerDownOutside,\n          onInteractOutside(event) {\n            ctx2.onInteractOutside?.(event);\n            ctx2.restoreFocus = !event.detail.focusable;\n          },\n          onDismiss() {\n            send({\n              type: \"CONTENT.INTERACT_OUTSIDE\"\n            });\n          }\n        });\n      },\n      computePlacement(ctx2) {\n        ctx2.currentPlacement = ctx2.positioning.placement;\n        const triggerEl = () => dom.getTriggerEl(ctx2);\n        const positionerEl = () => dom.getPositionerEl(ctx2);\n        return getPlacement(triggerEl, positionerEl, {\n          defer: true,\n          ...ctx2.positioning,\n          onComplete(data) {\n            ctx2.currentPlacement = data.placement;\n          }\n        });\n      },\n      scrollToHighlightedItem(ctx2, _evt, {\n        getState\n      }) {\n        const exec = immediate => {\n          if (ctx2.highlightedValue == null) return;\n          const state = getState();\n          if (state.event.type.includes(\"POINTER\")) return;\n          const optionEl = dom.getHighlightedOptionEl(ctx2);\n          const contentEl2 = dom.getContentEl(ctx2);\n          if (ctx2.scrollToIndexFn) {\n            const highlightedIndex = ctx2.collection.indexOf(ctx2.highlightedValue);\n            ctx2.scrollToIndexFn({\n              index: highlightedIndex,\n              immediate\n            });\n            return;\n          }\n          scrollIntoView(optionEl, {\n            rootEl: contentEl2,\n            block: \"nearest\"\n          });\n        };\n        raf(() => exec(true));\n        const contentEl = () => dom.getContentEl(ctx2);\n        return observeAttributes(contentEl, {\n          defer: true,\n          attributes: [\"data-activedescendant\"],\n          callback() {\n            exec(false);\n          }\n        });\n      }\n    },\n    actions: {\n      reposition(ctx2, evt) {\n        const positionerEl = () => dom.getPositionerEl(ctx2);\n        getPlacement(dom.getTriggerEl(ctx2), positionerEl, {\n          ...ctx2.positioning,\n          ...evt.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            ctx2.currentPlacement = data.placement;\n          }\n        });\n      },\n      toggleVisibility(ctx2, evt, {\n        send\n      }) {\n        send({\n          type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: evt\n        });\n      },\n      highlightPreviousItem(ctx2) {\n        if (ctx2.highlightedValue == null) return;\n        const value = ctx2.collection.getPreviousValue(ctx2.highlightedValue);\n        set.highlightedItem(ctx2, value);\n      },\n      highlightNextItem(ctx2) {\n        if (ctx2.highlightedValue == null) return;\n        const value = ctx2.collection.getNextValue(ctx2.highlightedValue);\n        set.highlightedItem(ctx2, value);\n      },\n      highlightFirstItem(ctx2) {\n        const value = ctx2.collection.firstValue;\n        set.highlightedItem(ctx2, value);\n      },\n      highlightLastItem(ctx2) {\n        const value = ctx2.collection.lastValue;\n        set.highlightedItem(ctx2, value);\n      },\n      setInitialFocus(ctx2) {\n        raf(() => {\n          const element = getInitialFocus({\n            root: dom.getContentEl(ctx2)\n          });\n          element?.focus({\n            preventScroll: true\n          });\n        });\n      },\n      focusTriggerEl(ctx2) {\n        raf(() => {\n          dom.getTriggerEl(ctx2)?.focus({\n            preventScroll: true\n          });\n        });\n      },\n      selectHighlightedItem(ctx2, evt) {\n        const value = evt.value ?? ctx2.highlightedValue;\n        if (value == null) return;\n        set.selectedItem(ctx2, value);\n      },\n      highlightComputedFirstItem(ctx2) {\n        const value = ctx2.hasSelectedItems ? ctx2.collection.sort(ctx2.value)[0] : ctx2.collection.firstValue;\n        set.highlightedItem(ctx2, value);\n      },\n      highlightComputedLastItem(ctx2) {\n        const value = ctx2.hasSelectedItems ? ctx2.collection.sort(ctx2.value)[0] : ctx2.collection.lastValue;\n        set.highlightedItem(ctx2, value);\n      },\n      highlightFirstSelectedItem(ctx2) {\n        if (!ctx2.hasSelectedItems) return;\n        const [value] = ctx2.collection.sort(ctx2.value);\n        set.highlightedItem(ctx2, value);\n      },\n      highlightItem(ctx2, evt) {\n        set.highlightedItem(ctx2, evt.value);\n      },\n      highlightMatchingItem(ctx2, evt) {\n        const value = ctx2.collection.search(evt.key, {\n          state: ctx2.typeahead,\n          currentValue: ctx2.highlightedValue\n        });\n        if (value == null) return;\n        set.highlightedItem(ctx2, value);\n      },\n      setHighlightedItem(ctx2, evt) {\n        set.highlightedItem(ctx2, evt.value);\n      },\n      clearHighlightedItem(ctx2) {\n        set.highlightedItem(ctx2, null, true);\n      },\n      selectItem(ctx2, evt) {\n        set.selectedItem(ctx2, evt.value);\n      },\n      clearItem(ctx2, evt) {\n        const value = ctx2.value.filter(v => v !== evt.value);\n        set.selectedItems(ctx2, value);\n      },\n      setSelectedItems(ctx2, evt) {\n        set.selectedItems(ctx2, evt.value);\n      },\n      clearSelectedItems(ctx2) {\n        set.selectedItems(ctx2, []);\n      },\n      selectPreviousItem(ctx2) {\n        const value = ctx2.collection.getPreviousValue(ctx2.value[0]);\n        set.selectedItem(ctx2, value);\n      },\n      selectNextItem(ctx2) {\n        const value = ctx2.collection.getNextValue(ctx2.value[0]);\n        set.selectedItem(ctx2, value);\n      },\n      selectFirstItem(ctx2) {\n        const value = ctx2.collection.firstValue;\n        set.selectedItem(ctx2, value);\n      },\n      selectLastItem(ctx2) {\n        const value = ctx2.collection.lastValue;\n        set.selectedItem(ctx2, value);\n      },\n      selectMatchingItem(ctx2, evt) {\n        const value = ctx2.collection.search(evt.key, {\n          state: ctx2.typeahead,\n          currentValue: ctx2.value[0]\n        });\n        if (value == null) return;\n        set.selectedItem(ctx2, value);\n      },\n      scrollContentToTop(ctx2) {\n        if (ctx2.scrollToIndexFn) {\n          ctx2.scrollToIndexFn({\n            index: 0,\n            immediate: true\n          });\n        } else {\n          dom.getContentEl(ctx2)?.scrollTo(0, 0);\n        }\n      },\n      invokeOnOpen(ctx2) {\n        ctx2.onOpenChange?.({\n          open: true\n        });\n      },\n      invokeOnClose(ctx2) {\n        ctx2.onOpenChange?.({\n          open: false\n        });\n      },\n      syncSelectElement(ctx2) {\n        const selectEl = dom.getHiddenSelectEl(ctx2);\n        if (!selectEl) return;\n        if (ctx2.value.length === 0 && !ctx2.multiple) {\n          selectEl.selectedIndex = -1;\n          return;\n        }\n        for (const option of selectEl.options) {\n          option.selected = ctx2.value.includes(option.value);\n        }\n      },\n      setCollection(ctx2, evt) {\n        ctx2.collection = evt.value;\n      },\n      syncCollection(ctx2) {\n        const selectedItems = ctx2.collection.findMany(ctx2.value);\n        const valueAsString = ctx2.collection.stringifyItems(selectedItems);\n        ctx2.highlightedItem = ctx2.collection.find(ctx2.highlightedValue);\n        ctx2.selectedItems = selectedItems;\n        ctx2.valueAsString = valueAsString;\n      },\n      syncSelectedItems(ctx2) {\n        sync.valueChange(ctx2);\n      },\n      syncHighlightedItem(ctx2) {\n        sync.highlightChange(ctx2);\n      }\n    }\n  });\n}\nfunction dispatchChangeEvent(ctx) {\n  raf(() => {\n    const node = dom.getHiddenSelectEl(ctx);\n    if (!node) return;\n    const win = dom.getWin(ctx);\n    const changeEvent = new win.Event(\"change\", {\n      bubbles: true,\n      composed: true\n    });\n    node.dispatchEvent(changeEvent);\n  });\n}\nvar sync = {\n  valueChange: ctx => {\n    const prevSelectedItems = ctx.selectedItems;\n    ctx.selectedItems = ctx.value.map(value => {\n      const foundItem = prevSelectedItems.find(item => ctx.collection.getItemValue(item) === value);\n      if (foundItem) return foundItem;\n      return ctx.collection.find(value);\n    });\n    ctx.valueAsString = ctx.collection.stringifyItems(ctx.selectedItems);\n  },\n  highlightChange: ctx => {\n    ctx.highlightedItem = ctx.collection.find(ctx.highlightedValue);\n  }\n};\nvar invoke = {\n  valueChange: ctx => {\n    sync.valueChange(ctx);\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value),\n      items: Array.from(ctx.selectedItems)\n    });\n    dispatchChangeEvent(ctx);\n  },\n  highlightChange: ctx => {\n    sync.highlightChange(ctx);\n    ctx.onHighlightChange?.({\n      highlightedValue: ctx.highlightedValue,\n      highlightedItem: ctx.highlightedItem,\n      highlightedIndex: ctx.collection.indexOf(ctx.highlightedValue)\n    });\n  }\n};\nvar set = {\n  selectedItem: (ctx, value, force = false) => {\n    if (isEqual(ctx.value, value)) return;\n    if (value == null && !force) return;\n    if (value == null && force) {\n      ctx.value = [];\n      invoke.valueChange(ctx);\n      return;\n    }\n    ctx.value = ctx.multiple ? addOrRemove(ctx.value, value) : [value];\n    invoke.valueChange(ctx);\n  },\n  selectedItems: (ctx, value) => {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.valueChange(ctx);\n  },\n  highlightedItem: (ctx, value, force = false) => {\n    if (isEqual(ctx.highlightedValue, value)) return;\n    if (value == null && !force) return;\n    ctx.highlightedValue = value ?? null;\n    invoke.highlightChange(ctx);\n  }\n};\n\n// src/select.props.ts\nimport { createProps } from \"@zag-js/types\";\nimport { createSplitProps } from \"@zag-js/utils\";\nvar props = createProps()([\"closeOnSelect\", \"collection\", \"dir\", \"disabled\", \"form\", \"getRootNode\", \"highlightedValue\", \"id\", \"ids\", \"invalid\", \"loopFocus\", \"multiple\", \"name\", \"onFocusOutside\", \"onHighlightChange\", \"onInteractOutside\", \"onOpenChange\", \"onPointerDownOutside\", \"onValueChange\", \"open.controlled\", \"open\", \"composite\", \"positioning\", \"required\", \"readOnly\", \"scrollToIndexFn\", \"value\"]);\nvar splitProps = createSplitProps(props);\nvar itemProps = createProps()([\"item\", \"persistFocus\"]);\nvar splitItemProps = createSplitProps(itemProps);\nvar itemGroupProps = createProps()([\"id\"]);\nvar splitItemGroupProps = createSplitProps(itemGroupProps);\nvar itemGroupLabelProps = createProps()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = createSplitProps(itemGroupLabelProps);\nexport { anatomy, collection, connect, itemGroupLabelProps, itemGroupProps, itemProps, machine, props, splitItemGroupLabelProps, splitItemGroupProps, splitItemProps, splitProps };","map":{"version":3,"names":["createAnatomy","anatomy","parts","build","Collection","ref","collection","options","empty","items","getEventKey","isLeftClick","ariaAttr","dataAttr","getByTypeahead","isEditableElement","isSelfTarget","isValidTabEvent","visuallyHiddenStyle","getPlacementStyles","createScope","dom","getRootId","ctx","ids","root","id","getContentId","content","getTriggerId","trigger","getClearTriggerId","clearTrigger","getLabelId","label","getControlId","control","getItemId","item","getHiddenSelectId","hiddenSelect","getPositionerId","positioner","getItemGroupId","itemGroup","getItemGroupLabelId","itemGroupLabel","getHiddenSelectEl","getById","getContentEl","getControlEl","getTriggerEl","getClearTriggerEl","getPositionerEl","getHighlightedOptionEl","highlightedValue","connect","state","send","normalize","disabled","context","isDisabled","invalid","readOnly","interactive","isInteractive","composite","open","hasTag","focused","matches","highlightedItem","selectedItems","isTypingAhead","collection2","ariaActiveDescendant","getItemState","props2","_disabled","getItemDisabled","value","getItemValue","Boolean","highlighted","selected","includes","popperStyles","positioning","placement","currentPlacement","length","hasSelectedItems","valueAsString","setCollection","collection3","type","reposition","focus","preventScroll","setOpen","nextOpen","selectValue","setValue","selectAll","getValues","highlightValue","clearValue","getRootProps","element","attrs","dir","getLabelProps","htmlFor","onClick","event","defaultPrevented","getControlProps","getValueTextProps","valueText","getTriggerProps","button","role","onPointerDown","currentTarget","dataset","pointerType","onFocus","onBlur","onKeyDown","keyMap","ArrowUp","ArrowDown","event2","altKey","ArrowLeft","ArrowRight","Home","End","Enter","Space","key","exec","preventDefault","isValidEvent","getIndicatorProps","indicator","getItemProps","itemState","onPointerMove","onPointerUp","src","onPointerLeave","persistFocus","isArrowKey","onTouchEnd","stopPropagation","getItemTextProps","itemText","getItemIndicatorProps","itemIndicator","hidden","getItemGroupLabelProps","getItemGroupProps","getClearTriggerProps","getHiddenSelectProps","select","name","form","multiple","required","defaultValue","style","tabIndex","getPositionerProps","floating","getContentProps","valid","target","getListProps","list","createMachine","guards","trackDismissableElement","getByTypeahead2","getInitialFocus","observeAttributes","raf","scrollIntoView","trackFormControl","getPlacement","addOrRemove","compact","isEqual","and","not","or","machine","userContext","loopFocus","closeOnSelect","typeahead","defaultOptions","fieldsetDisabled","restoreFocus","gutter","computed","ctx2","keysSoFar","initial","created","entry","watch","on","actions","activities","states","idle","tags","guard","OPEN","exit","CLOSE","loop","hasHighlightedItem","isFirstItemHighlighted","firstValue","isLastItemHighlighted","lastValue","evt","shouldRestoreFocus","isOpenControlled","isTriggerClickEvent","_ctx","previousEvent","isTriggerEnterEvent","isTriggerArrowUpEvent","isTriggerArrowDownEvent","trackFormControlState","_evt","initialContext","onFieldsetDisabledChange","onFormReset","set","contentEl","defer","exclude","onFocusOutside","onPointerDownOutside","onInteractOutside","detail","focusable","onDismiss","computePlacement","triggerEl","positionerEl","onComplete","data","scrollToHighlightedItem","getState","immediate","optionEl","contentEl2","scrollToIndexFn","highlightedIndex","indexOf","index","rootEl","block","attributes","callback","listeners","toggleVisibility","highlightPreviousItem","getPreviousValue","highlightNextItem","getNextValue","highlightFirstItem","highlightLastItem","setInitialFocus","focusTriggerEl","selectHighlightedItem","selectedItem","highlightComputedFirstItem","sort","highlightComputedLastItem","highlightFirstSelectedItem","highlightItem","highlightMatchingItem","search","currentValue","setHighlightedItem","clearHighlightedItem","selectItem","clearItem","filter","v","setSelectedItems","clearSelectedItems","selectPreviousItem","selectNextItem","selectFirstItem","selectLastItem","selectMatchingItem","scrollContentToTop","scrollTo","invokeOnOpen","onOpenChange","invokeOnClose","syncSelectElement","selectEl","selectedIndex","option","syncCollection","findMany","stringifyItems","find","syncSelectedItems","sync","valueChange","syncHighlightedItem","highlightChange","dispatchChangeEvent","node","win","getWin","changeEvent","Event","bubbles","composed","dispatchEvent","prevSelectedItems","map","foundItem","invoke","onValueChange","Array","from","onHighlightChange","force","createProps","createSplitProps","props","splitProps","itemProps","splitItemProps","itemGroupProps","splitItemGroupProps","itemGroupLabelProps","splitItemGroupLabelProps"],"sources":["C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\select\\src\\select.anatomy.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\select\\src\\select.collection.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\select\\src\\select.connect.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\select\\src\\select.dom.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\select\\src\\select.machine.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\select\\src\\select.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"select\").parts(\n  \"label\",\n  \"positioner\",\n  \"trigger\",\n  \"indicator\",\n  \"clearTrigger\",\n  \"item\",\n  \"itemText\",\n  \"itemIndicator\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"list\",\n  \"content\",\n  \"root\",\n  \"control\",\n  \"valueText\",\n)\nexport const parts = anatomy.build()\n","import { Collection, type CollectionItem, type CollectionOptions } from \"@zag-js/collection\"\nimport { ref } from \"@zag-js/core\"\n\nexport const collection = <T extends CollectionItem>(options: CollectionOptions<T>): Collection<T> => {\n  return ref(new Collection(options))\n}\n\ncollection.empty = (): Collection<CollectionItem> => {\n  return ref(new Collection<CollectionItem>({ items: [] }))\n}\n","import { getEventKey, isLeftClick, type EventKeyMap } from \"@zag-js/dom-event\"\nimport {\n  ariaAttr,\n  dataAttr,\n  getByTypeahead,\n  isEditableElement,\n  isSelfTarget,\n  isValidTabEvent,\n  visuallyHiddenStyle,\n} from \"@zag-js/dom-query\"\nimport { getPlacementStyles } from \"@zag-js/popper\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./select.anatomy\"\nimport { dom } from \"./select.dom\"\nimport type { CollectionItem, ItemProps, ItemState, MachineApi, Send, State } from \"./select.types\"\n\nexport function connect<T extends PropTypes, V extends CollectionItem = CollectionItem>(\n  state: State,\n  send: Send,\n  normalize: NormalizeProps<T>,\n): MachineApi<T, V> {\n  const disabled = state.context.isDisabled\n  const invalid = state.context.invalid\n  const readOnly = state.context.readOnly\n  const interactive = state.context.isInteractive\n  const composite = state.context.composite\n\n  const open = state.hasTag(\"open\")\n  const focused = state.matches(\"focused\")\n\n  const highlightedValue = state.context.highlightedValue\n  const highlightedItem = state.context.highlightedItem\n  const selectedItems = state.context.selectedItems\n  const isTypingAhead = state.context.isTypingAhead\n  const collection = state.context.collection\n\n  const ariaActiveDescendant = highlightedValue ? dom.getItemId(state.context, highlightedValue) : undefined\n\n  function getItemState(props: ItemProps): ItemState {\n    const _disabled = collection.getItemDisabled(props.item)\n    const value = collection.getItemValue(props.item)!\n    return {\n      value,\n      disabled: Boolean(disabled || _disabled),\n      highlighted: highlightedValue === value,\n      selected: state.context.value.includes(value),\n    }\n  }\n\n  const popperStyles = getPlacementStyles({\n    ...state.context.positioning,\n    placement: state.context.currentPlacement,\n  })\n\n  return {\n    open: open,\n    focused: focused,\n    empty: state.context.value.length === 0,\n    highlightedItem,\n    highlightedValue,\n    selectedItems,\n    hasSelectedItems: state.context.hasSelectedItems,\n    value: state.context.value,\n    valueAsString: state.context.valueAsString,\n    collection,\n    setCollection(collection) {\n      send({ type: \"COLLECTION.SET\", value: collection })\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options })\n    },\n    focus() {\n      dom.getTriggerEl(state.context)?.focus({ preventScroll: true })\n    },\n    setOpen(nextOpen) {\n      if (nextOpen === open) return\n      send(nextOpen ? \"OPEN\" : \"CLOSE\")\n    },\n    selectValue(value) {\n      send({ type: \"ITEM.SELECT\", value })\n    },\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value })\n    },\n    selectAll() {\n      send({ type: \"VALUE.SET\", value: collection.getValues() })\n    },\n    highlightValue(value) {\n      send({ type: \"HIGHLIGHTED_VALUE.SET\", value })\n    },\n    clearValue(value) {\n      if (value) {\n        send({ type: \"ITEM.CLEAR\", value })\n      } else {\n        send({ type: \"VALUE.CLEAR\" })\n      }\n    },\n\n    getItemState,\n\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n      })\n    },\n\n    getLabelProps() {\n      return normalize.label({\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        ...parts.label.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n        htmlFor: dom.getHiddenSelectId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return\n          if (disabled) return\n          dom.getTriggerEl(state.context)?.focus({ preventScroll: true })\n        },\n      })\n    },\n\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": dataAttr(focused),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n      })\n    },\n\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n      })\n    },\n\n    getTriggerProps() {\n      return normalize.button({\n        id: dom.getTriggerId(state.context),\n        disabled: disabled,\n        dir: state.context.dir,\n        type: \"button\",\n        role: \"combobox\",\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-expanded\": open,\n        \"aria-haspopup\": \"listbox\",\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-invalid\": invalid,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        ...parts.trigger.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n        \"data-placement\": state.context.currentPlacement,\n        \"data-placeholder-shown\": dataAttr(!state.context.hasSelectedItems),\n        onPointerDown(event) {\n          if (!isLeftClick(event)) return\n          if (!interactive) return\n          event.currentTarget.dataset.pointerType = event.pointerType\n          if (disabled || event.pointerType === \"touch\") return\n          send({ type: \"TRIGGER.CLICK\" })\n        },\n        onClick(event) {\n          if (!interactive || event.button) return\n          if (event.currentTarget.dataset.pointerType === \"touch\") {\n            send({ type: \"TRIGGER.CLICK\" })\n          }\n        },\n        onFocus() {\n          send(\"TRIGGER.FOCUS\")\n        },\n        onBlur() {\n          send(\"TRIGGER.BLUR\")\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return\n          if (!interactive) return\n\n          const keyMap: EventKeyMap = {\n            ArrowUp() {\n              send({ type: \"TRIGGER.ARROW_UP\" })\n            },\n            ArrowDown(event) {\n              send({ type: event.altKey ? \"OPEN\" : \"TRIGGER.ARROW_DOWN\" })\n            },\n            ArrowLeft() {\n              send({ type: \"TRIGGER.ARROW_LEFT\" })\n            },\n            ArrowRight() {\n              send({ type: \"TRIGGER.ARROW_RIGHT\" })\n            },\n            Home() {\n              send({ type: \"TRIGGER.HOME\" })\n            },\n            End() {\n              send({ type: \"TRIGGER.END\" })\n            },\n            Enter() {\n              send({ type: \"TRIGGER.ENTER\" })\n            },\n            Space(event) {\n              if (isTypingAhead) {\n                send({ type: \"TRIGGER.TYPEAHEAD\", key: event.key })\n              } else {\n                send({ type: \"TRIGGER.ENTER\" })\n              }\n            },\n          }\n\n          const exec = keyMap[getEventKey(event, state.context)]\n\n          if (exec) {\n            exec(event)\n            event.preventDefault()\n            return\n          }\n\n          if (getByTypeahead.isValidEvent(event)) {\n            send({ type: \"TRIGGER.TYPEAHEAD\", key: event.key })\n            event.preventDefault()\n          }\n        },\n      })\n    },\n\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n      })\n    },\n\n    getItemProps(props) {\n      const itemState = getItemState(props)\n\n      return normalize.element({\n        id: dom.getItemId(state.context, itemState.value),\n        role: \"option\",\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        \"data-value\": itemState.value,\n        \"aria-selected\": itemState.selected,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n        \"data-disabled\": dataAttr(itemState.disabled),\n        \"aria-disabled\": ariaAttr(itemState.disabled),\n        onPointerMove(event) {\n          if (itemState.disabled || event.pointerType !== \"mouse\") return\n          if (itemState.value === state.context.highlightedValue) return\n          send({ type: \"ITEM.POINTER_MOVE\", value: itemState.value })\n        },\n        onPointerUp() {\n          if (itemState.disabled) return\n          send({ type: \"ITEM.CLICK\", src: \"pointerup\", value: itemState.value })\n        },\n        onPointerLeave(event) {\n          if (itemState.disabled) return\n          if (props.persistFocus) return\n          if (event.pointerType !== \"mouse\") return\n          const isArrowKey = [\"CONTENT.ARROW_UP\", \"CONTENT.ARROW_DOWN\"].includes(state.event.type)\n          if (isArrowKey) return\n          send({ type: \"ITEM.POINTER_LEAVE\" })\n        },\n        onTouchEnd(event) {\n          // prevent clicking elements behind content\n          event.preventDefault()\n          event.stopPropagation()\n        },\n      })\n    },\n\n    getItemTextProps(props) {\n      const itemState = getItemState(props)\n      return normalize.element({\n        ...parts.itemText.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-disabled\": dataAttr(itemState.disabled),\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n      })\n    },\n\n    getItemIndicatorProps(props) {\n      const itemState = getItemState(props)\n      return normalize.element({\n        \"aria-hidden\": true,\n        ...parts.itemIndicator.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        hidden: !itemState.selected,\n      })\n    },\n\n    getItemGroupLabelProps(props) {\n      const { htmlFor } = props\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        id: dom.getItemGroupLabelId(state.context, htmlFor),\n        role: \"group\",\n        dir: state.context.dir,\n      })\n    },\n\n    getItemGroupProps(props) {\n      const { id } = props\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        id: dom.getItemGroupId(state.context, id),\n        \"aria-labelledby\": dom.getItemGroupLabelId(state.context, id),\n        dir: state.context.dir,\n      })\n    },\n\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        id: dom.getClearTriggerId(state.context),\n        type: \"button\",\n        \"aria-label\": \"Clear value\",\n        \"data-invalid\": dataAttr(invalid),\n        disabled: disabled,\n        hidden: !state.context.hasSelectedItems,\n        dir: state.context.dir,\n        onClick(event) {\n          if (event.defaultPrevented) return\n          send(\"CLEAR.CLICK\")\n        },\n      })\n    },\n\n    getHiddenSelectProps() {\n      return normalize.select({\n        name: state.context.name,\n        form: state.context.form,\n        disabled: disabled,\n        multiple: state.context.multiple,\n        required: state.context.required,\n        \"aria-hidden\": true,\n        id: dom.getHiddenSelectId(state.context),\n        defaultValue: state.context.multiple ? state.context.value : state.context.value[0],\n        style: visuallyHiddenStyle,\n        tabIndex: -1,\n        // Some browser extensions will focus the hidden select.\n        // Let's forward the focus to the trigger.\n        onFocus() {\n          dom.getTriggerEl(state.context)?.focus({ preventScroll: true })\n        },\n        \"aria-labelledby\": dom.getLabelId(state.context),\n      })\n    },\n\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: popperStyles.floating,\n      })\n    },\n\n    getContentProps() {\n      return normalize.element({\n        hidden: !open,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context),\n        role: composite ? \"listbox\" : \"dialog\",\n        ...parts.content.attrs,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": state.context.currentPlacement,\n        \"data-activedescendant\": ariaActiveDescendant,\n        \"aria-activedescendant\": composite ? ariaActiveDescendant : undefined,\n        \"aria-multiselectable\": state.context.multiple && composite ? true : undefined,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        tabIndex: 0,\n        onKeyDown(event) {\n          if (!interactive) return\n          if (!isSelfTarget(event)) return\n\n          // select should not be navigated using tab key so we prevent it\n          // but, we want to allow tabbing within the content when composing\n          // with widgets like tabs or trees\n          if (event.key === \"Tab\") {\n            const valid = isValidTabEvent(event)\n            if (!valid) {\n              event.preventDefault()\n              return\n            }\n          }\n\n          const keyMap: EventKeyMap = {\n            ArrowUp() {\n              send({ type: \"CONTENT.ARROW_UP\" })\n            },\n            ArrowDown() {\n              send({ type: \"CONTENT.ARROW_DOWN\" })\n            },\n            Home() {\n              send({ type: \"CONTENT.HOME\" })\n            },\n            End() {\n              send({ type: \"CONTENT.END\" })\n            },\n            Enter() {\n              send({ type: \"ITEM.CLICK\", src: \"keydown.enter\" })\n            },\n            Space(event) {\n              if (isTypingAhead) {\n                send({ type: \"CONTENT.TYPEAHEAD\", key: event.key })\n              } else {\n                keyMap.Enter?.(event)\n              }\n            },\n          }\n\n          const exec = keyMap[getEventKey(event)]\n\n          if (exec) {\n            exec(event)\n            event.preventDefault()\n            return\n          }\n\n          if (isEditableElement(event.target)) {\n            return\n          }\n\n          if (getByTypeahead.isValidEvent(event)) {\n            send({ type: \"CONTENT.TYPEAHEAD\", key: event.key })\n            event.preventDefault()\n          }\n        },\n      })\n    },\n\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        tabIndex: 0,\n        role: !composite ? \"listbox\" : undefined,\n        \"aria-labelledby\": dom.getTriggerId(state.context),\n        \"aria-activedescendant\": !composite ? ariaActiveDescendant : undefined,\n        \"aria-multiselectable\": !composite && state.context.multiple ? true : undefined,\n      })\n    },\n  }\n}\n","import { createScope } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./select.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `select:${ctx.id}`,\n  getContentId: (ctx: Ctx) => ctx.ids?.content ?? `select:${ctx.id}:content`,\n  getTriggerId: (ctx: Ctx) => ctx.ids?.trigger ?? `select:${ctx.id}:trigger`,\n  getClearTriggerId: (ctx: Ctx) => ctx.ids?.clearTrigger ?? `select:${ctx.id}:clear-trigger`,\n  getLabelId: (ctx: Ctx) => ctx.ids?.label ?? `select:${ctx.id}:label`,\n  getControlId: (ctx: Ctx) => ctx.ids?.control ?? `select:${ctx.id}:control`,\n  getItemId: (ctx: Ctx, id: string | number) => ctx.ids?.item?.(id) ?? `select:${ctx.id}:option:${id}`,\n  getHiddenSelectId: (ctx: Ctx) => ctx.ids?.hiddenSelect ?? `select:${ctx.id}:select`,\n  getPositionerId: (ctx: Ctx) => ctx.ids?.positioner ?? `select:${ctx.id}:positioner`,\n  getItemGroupId: (ctx: Ctx, id: string | number) => ctx.ids?.itemGroup?.(id) ?? `select:${ctx.id}:optgroup:${id}`,\n  getItemGroupLabelId: (ctx: Ctx, id: string | number) =>\n    ctx.ids?.itemGroupLabel?.(id) ?? `select:${ctx.id}:optgroup-label:${id}`,\n\n  getHiddenSelectEl: (ctx: Ctx) => dom.getById<HTMLSelectElement>(ctx, dom.getHiddenSelectId(ctx)),\n  getContentEl: (ctx: Ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getControlEl: (ctx: Ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getTriggerEl: (ctx: Ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getClearTriggerEl: (ctx: Ctx) => dom.getById(ctx, dom.getClearTriggerId(ctx)),\n  getPositionerEl: (ctx: Ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getHighlightedOptionEl(ctx: Ctx) {\n    if (!ctx.highlightedValue) return null\n    return dom.getById(ctx, dom.getItemId(ctx, ctx.highlightedValue))\n  },\n})\n","import { createMachine, guards } from \"@zag-js/core\"\nimport { trackDismissableElement } from \"@zag-js/dismissable\"\nimport { getByTypeahead, getInitialFocus, observeAttributes, raf, scrollIntoView } from \"@zag-js/dom-query\"\nimport { trackFormControl } from \"@zag-js/form-utils\"\nimport { getPlacement } from \"@zag-js/popper\"\nimport { addOrRemove, compact, isEqual } from \"@zag-js/utils\"\nimport { collection } from \"./select.collection\"\nimport { dom } from \"./select.dom\"\nimport type { CollectionItem, MachineContext, MachineState, UserDefinedContext } from \"./select.types\"\n\nconst { and, not, or } = guards\n\nexport function machine<T extends CollectionItem>(userContext: UserDefinedContext<T>) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"select\",\n      context: {\n        value: [],\n        highlightedValue: null,\n        loopFocus: false,\n        closeOnSelect: !ctx.multiple,\n        disabled: false,\n        readOnly: false,\n        composite: true,\n        ...ctx,\n        highlightedItem: null,\n        selectedItems: [],\n        valueAsString: \"\",\n        collection: ctx.collection ?? collection.empty(),\n        typeahead: getByTypeahead.defaultOptions,\n        fieldsetDisabled: false,\n        restoreFocus: true,\n        positioning: {\n          placement: \"bottom-start\",\n          gutter: 8,\n          ...ctx.positioning,\n        },\n      },\n\n      computed: {\n        hasSelectedItems: (ctx) => ctx.value.length > 0,\n        isTypingAhead: (ctx) => ctx.typeahead.keysSoFar !== \"\",\n        isDisabled: (ctx) => !!ctx.disabled || ctx.fieldsetDisabled,\n        isInteractive: (ctx) => !(ctx.isDisabled || ctx.readOnly),\n      },\n\n      initial: ctx.open ? \"open\" : \"idle\",\n\n      created: [\"syncCollection\"],\n\n      entry: [\"syncSelectElement\"],\n\n      watch: {\n        open: [\"toggleVisibility\"],\n        value: [\"syncSelectedItems\", \"syncSelectElement\"],\n        highlightedValue: [\"syncHighlightedItem\"],\n        collection: [\"syncCollection\"],\n      },\n\n      on: {\n        \"HIGHLIGHTED_VALUE.SET\": {\n          actions: [\"setHighlightedItem\"],\n        },\n        \"ITEM.SELECT\": {\n          actions: [\"selectItem\"],\n        },\n        \"ITEM.CLEAR\": {\n          actions: [\"clearItem\"],\n        },\n        \"VALUE.SET\": {\n          actions: [\"setSelectedItems\"],\n        },\n        \"VALUE.CLEAR\": {\n          actions: [\"clearSelectedItems\"],\n        },\n        \"CLEAR.CLICK\": {\n          actions: [\"clearSelectedItems\", \"focusTriggerEl\"],\n        },\n        \"COLLECTION.SET\": {\n          actions: [\"setCollection\"],\n        },\n      },\n\n      activities: [\"trackFormControlState\"],\n\n      states: {\n        idle: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": [\n              {\n                guard: \"isTriggerClickEvent\",\n                target: \"open\",\n                actions: [\"highlightFirstSelectedItem\"],\n              },\n              {\n                target: \"open\",\n              },\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"highlightFirstSelectedItem\"],\n              },\n            ],\n            \"TRIGGER.FOCUS\": {\n              target: \"focused\",\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"],\n              },\n            ],\n          },\n        },\n\n        focused: {\n          tags: [\"closed\"],\n          entry: [\"focusTriggerEl\"],\n          on: {\n            \"CONTROLLED.OPEN\": [\n              {\n                guard: \"isTriggerClickEvent\",\n                target: \"open\",\n                actions: [\"highlightFirstSelectedItem\"],\n              },\n              {\n                guard: \"isTriggerArrowUpEvent\",\n                target: \"open\",\n                actions: [\"highlightComputedLastItem\"],\n              },\n              {\n                guard: or(\"isTriggerArrowDownEvent\", \"isTriggerEnterEvent\"),\n                target: \"open\",\n                actions: [\"highlightComputedFirstItem\"],\n              },\n              {\n                target: \"open\",\n              },\n            ],\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"],\n              },\n            ],\n            \"TRIGGER.BLUR\": {\n              target: \"idle\",\n            },\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"highlightFirstSelectedItem\"],\n              },\n            ],\n            \"TRIGGER.ENTER\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"highlightComputedFirstItem\"],\n              },\n            ],\n            \"TRIGGER.ARROW_UP\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"highlightComputedLastItem\"],\n              },\n            ],\n            \"TRIGGER.ARROW_DOWN\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"highlightComputedFirstItem\"],\n              },\n            ],\n            \"TRIGGER.ARROW_LEFT\": [\n              {\n                guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n                actions: [\"selectPreviousItem\"],\n              },\n              {\n                guard: not(\"multiple\"),\n                actions: [\"selectLastItem\"],\n              },\n            ],\n            \"TRIGGER.ARROW_RIGHT\": [\n              {\n                guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n                actions: [\"selectNextItem\"],\n              },\n              {\n                guard: not(\"multiple\"),\n                actions: [\"selectFirstItem\"],\n              },\n            ],\n            \"TRIGGER.HOME\": {\n              guard: not(\"multiple\"),\n              actions: [\"selectFirstItem\"],\n            },\n            \"TRIGGER.END\": {\n              guard: not(\"multiple\"),\n              actions: [\"selectLastItem\"],\n            },\n            \"TRIGGER.TYPEAHEAD\": {\n              guard: not(\"multiple\"),\n              actions: [\"selectMatchingItem\"],\n            },\n          },\n        },\n\n        open: {\n          tags: [\"open\"],\n          entry: [\"setInitialFocus\"],\n          exit: [\"scrollContentToTop\"],\n          activities: [\"trackDismissableElement\", \"computePlacement\", \"scrollToHighlightedItem\"],\n          on: {\n            \"CONTROLLED.CLOSE\": [\n              {\n                guard: \"shouldRestoreFocus\",\n                target: \"focused\",\n                actions: [\"clearHighlightedItem\"],\n              },\n              {\n                target: \"idle\",\n                actions: [\"clearHighlightedItem\"],\n              },\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"],\n              },\n              {\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"clearHighlightedItem\"],\n              },\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"],\n              },\n              {\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"clearHighlightedItem\"],\n              },\n            ],\n            \"ITEM.CLICK\": [\n              {\n                guard: and(\"closeOnSelect\", \"isOpenControlled\"),\n                actions: [\"selectHighlightedItem\", \"invokeOnClose\"],\n              },\n              {\n                guard: \"closeOnSelect\",\n                target: \"focused\",\n                actions: [\"selectHighlightedItem\", \"invokeOnClose\", \"clearHighlightedItem\"],\n              },\n              {\n                actions: [\"selectHighlightedItem\"],\n              },\n            ],\n            \"CONTENT.INTERACT_OUTSIDE\": [\n              // == group 1 ==\n              {\n                guard: and(\"shouldRestoreFocus\", \"isOpenControlled\"),\n                actions: [\"invokeOnClose\"],\n              },\n              {\n                guard: \"shouldRestoreFocus\",\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"clearHighlightedItem\"],\n              },\n\n              // == group 2 ==\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"],\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\", \"clearHighlightedItem\"],\n              },\n            ],\n            \"CONTENT.HOME\": {\n              actions: [\"highlightFirstItem\"],\n            },\n            \"CONTENT.END\": {\n              actions: [\"highlightLastItem\"],\n            },\n            \"CONTENT.ARROW_DOWN\": [\n              {\n                guard: and(\"hasHighlightedItem\", \"loop\", \"isLastItemHighlighted\"),\n                actions: [\"highlightFirstItem\"],\n              },\n              {\n                guard: \"hasHighlightedItem\",\n                actions: [\"highlightNextItem\"],\n              },\n              {\n                actions: [\"highlightFirstItem\"],\n              },\n            ],\n            \"CONTENT.ARROW_UP\": [\n              {\n                guard: and(\"hasHighlightedItem\", \"loop\", \"isFirstItemHighlighted\"),\n                actions: [\"highlightLastItem\"],\n              },\n              {\n                guard: \"hasHighlightedItem\",\n                actions: [\"highlightPreviousItem\"],\n              },\n              {\n                actions: [\"highlightLastItem\"],\n              },\n            ],\n            \"CONTENT.TYPEAHEAD\": {\n              actions: [\"highlightMatchingItem\"],\n            },\n            \"ITEM.POINTER_MOVE\": {\n              actions: [\"highlightItem\"],\n            },\n            \"ITEM.POINTER_LEAVE\": {\n              actions: [\"clearHighlightedItem\"],\n            },\n            \"POSITIONING.SET\": {\n              actions: [\"reposition\"],\n            },\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        loop: (ctx) => !!ctx.loopFocus,\n        multiple: (ctx) => !!ctx.multiple,\n        hasSelectedItems: (ctx) => !!ctx.hasSelectedItems,\n        hasHighlightedItem: (ctx) => ctx.highlightedValue != null,\n        isFirstItemHighlighted: (ctx) => ctx.highlightedValue === ctx.collection.firstValue,\n        isLastItemHighlighted: (ctx) => ctx.highlightedValue === ctx.collection.lastValue,\n        closeOnSelect: (ctx, evt) => !!(evt.closeOnSelect ?? ctx.closeOnSelect),\n        shouldRestoreFocus: (ctx) => !!ctx.restoreFocus,\n        // guard assertions (for controlled mode)\n        isOpenControlled: (ctx) => !!ctx[\"open.controlled\"],\n        isTriggerClickEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.CLICK\",\n        isTriggerEnterEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ENTER\",\n        isTriggerArrowUpEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ARROW_UP\",\n        isTriggerArrowDownEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ARROW_DOWN\",\n      },\n      activities: {\n        trackFormControlState(ctx, _evt, { initialContext }) {\n          return trackFormControl(dom.getHiddenSelectEl(ctx), {\n            onFieldsetDisabledChange(disabled) {\n              ctx.fieldsetDisabled = disabled\n            },\n            onFormReset() {\n              set.selectedItems(ctx, initialContext.value)\n            },\n          })\n        },\n        trackDismissableElement(ctx, _evt, { send }) {\n          const contentEl = () => dom.getContentEl(ctx)\n          return trackDismissableElement(contentEl, {\n            defer: true,\n            exclude: [dom.getTriggerEl(ctx), dom.getClearTriggerEl(ctx)],\n            onFocusOutside: ctx.onFocusOutside,\n            onPointerDownOutside: ctx.onPointerDownOutside,\n            onInteractOutside(event) {\n              ctx.onInteractOutside?.(event)\n              ctx.restoreFocus = !event.detail.focusable\n            },\n            onDismiss() {\n              send({ type: \"CONTENT.INTERACT_OUTSIDE\" })\n            },\n          })\n        },\n        computePlacement(ctx) {\n          ctx.currentPlacement = ctx.positioning.placement\n          const triggerEl = () => dom.getTriggerEl(ctx)\n          const positionerEl = () => dom.getPositionerEl(ctx)\n          return getPlacement(triggerEl, positionerEl, {\n            defer: true,\n            ...ctx.positioning,\n            onComplete(data) {\n              ctx.currentPlacement = data.placement\n            },\n          })\n        },\n        scrollToHighlightedItem(ctx, _evt, { getState }) {\n          const exec = (immediate: boolean) => {\n            if (ctx.highlightedValue == null) return\n            const state = getState()\n\n            // don't scroll into view if we're using the pointer\n            if (state.event.type.includes(\"POINTER\")) return\n\n            const optionEl = dom.getHighlightedOptionEl(ctx)\n            const contentEl = dom.getContentEl(ctx)\n\n            if (ctx.scrollToIndexFn) {\n              const highlightedIndex = ctx.collection.indexOf(ctx.highlightedValue)\n              ctx.scrollToIndexFn({ index: highlightedIndex, immediate })\n              return\n            }\n\n            scrollIntoView(optionEl, { rootEl: contentEl, block: \"nearest\" })\n          }\n\n          raf(() => exec(true))\n\n          const contentEl = () => dom.getContentEl(ctx)\n          return observeAttributes(contentEl, {\n            defer: true,\n            attributes: [\"data-activedescendant\"],\n            callback() {\n              exec(false)\n            },\n          })\n        },\n      },\n      actions: {\n        reposition(ctx, evt) {\n          const positionerEl = () => dom.getPositionerEl(ctx)\n          getPlacement(dom.getTriggerEl(ctx), positionerEl, {\n            ...ctx.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx.currentPlacement = data.placement\n            },\n          })\n        },\n        toggleVisibility(ctx, evt, { send }) {\n          send({ type: ctx.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt })\n        },\n        highlightPreviousItem(ctx) {\n          if (ctx.highlightedValue == null) return\n          const value = ctx.collection.getPreviousValue(ctx.highlightedValue)\n          set.highlightedItem(ctx, value)\n        },\n        highlightNextItem(ctx) {\n          if (ctx.highlightedValue == null) return\n          const value = ctx.collection.getNextValue(ctx.highlightedValue)\n          set.highlightedItem(ctx, value)\n        },\n        highlightFirstItem(ctx) {\n          const value = ctx.collection.firstValue\n          set.highlightedItem(ctx, value)\n        },\n        highlightLastItem(ctx) {\n          const value = ctx.collection.lastValue\n          set.highlightedItem(ctx, value)\n        },\n        setInitialFocus(ctx) {\n          raf(() => {\n            const element = getInitialFocus({\n              root: dom.getContentEl(ctx),\n            })\n            element?.focus({ preventScroll: true })\n          })\n        },\n        focusTriggerEl(ctx) {\n          raf(() => {\n            dom.getTriggerEl(ctx)?.focus({ preventScroll: true })\n          })\n        },\n        selectHighlightedItem(ctx, evt) {\n          const value = evt.value ?? ctx.highlightedValue\n          if (value == null) return\n          set.selectedItem(ctx, value)\n        },\n        highlightComputedFirstItem(ctx) {\n          const value = ctx.hasSelectedItems ? ctx.collection.sort(ctx.value)[0] : ctx.collection.firstValue\n          set.highlightedItem(ctx, value)\n        },\n        highlightComputedLastItem(ctx) {\n          const value = ctx.hasSelectedItems ? ctx.collection.sort(ctx.value)[0] : ctx.collection.lastValue\n          set.highlightedItem(ctx, value)\n        },\n        highlightFirstSelectedItem(ctx) {\n          if (!ctx.hasSelectedItems) return\n          const [value] = ctx.collection.sort(ctx.value)\n          set.highlightedItem(ctx, value)\n        },\n        highlightItem(ctx, evt) {\n          set.highlightedItem(ctx, evt.value)\n        },\n        highlightMatchingItem(ctx, evt) {\n          const value = ctx.collection.search(evt.key, {\n            state: ctx.typeahead,\n            currentValue: ctx.highlightedValue,\n          })\n\n          if (value == null) return\n          set.highlightedItem(ctx, value)\n        },\n        setHighlightedItem(ctx, evt) {\n          set.highlightedItem(ctx, evt.value)\n        },\n        clearHighlightedItem(ctx) {\n          set.highlightedItem(ctx, null, true)\n        },\n        selectItem(ctx, evt) {\n          set.selectedItem(ctx, evt.value)\n        },\n        clearItem(ctx, evt) {\n          const value = ctx.value.filter((v) => v !== evt.value)\n          set.selectedItems(ctx, value)\n        },\n        setSelectedItems(ctx, evt) {\n          set.selectedItems(ctx, evt.value)\n        },\n        clearSelectedItems(ctx) {\n          set.selectedItems(ctx, [])\n        },\n        selectPreviousItem(ctx) {\n          const value = ctx.collection.getPreviousValue(ctx.value[0])\n          set.selectedItem(ctx, value)\n        },\n        selectNextItem(ctx) {\n          const value = ctx.collection.getNextValue(ctx.value[0])\n          set.selectedItem(ctx, value)\n        },\n        selectFirstItem(ctx) {\n          const value = ctx.collection.firstValue\n          set.selectedItem(ctx, value)\n        },\n        selectLastItem(ctx) {\n          const value = ctx.collection.lastValue\n          set.selectedItem(ctx, value)\n        },\n        selectMatchingItem(ctx, evt) {\n          const value = ctx.collection.search(evt.key, {\n            state: ctx.typeahead,\n            currentValue: ctx.value[0],\n          })\n          if (value == null) return\n          set.selectedItem(ctx, value)\n        },\n        scrollContentToTop(ctx) {\n          if (ctx.scrollToIndexFn) {\n            ctx.scrollToIndexFn({ index: 0, immediate: true })\n          } else {\n            dom.getContentEl(ctx)?.scrollTo(0, 0)\n          }\n        },\n        invokeOnOpen(ctx) {\n          ctx.onOpenChange?.({ open: true })\n        },\n        invokeOnClose(ctx) {\n          ctx.onOpenChange?.({ open: false })\n        },\n        syncSelectElement(ctx) {\n          const selectEl = dom.getHiddenSelectEl(ctx)\n          if (!selectEl) return\n\n          if (ctx.value.length === 0 && !ctx.multiple) {\n            selectEl.selectedIndex = -1\n            return\n          }\n\n          for (const option of selectEl.options) {\n            option.selected = ctx.value.includes(option.value)\n          }\n        },\n        setCollection(ctx, evt) {\n          ctx.collection = evt.value\n        },\n        syncCollection(ctx) {\n          const selectedItems = ctx.collection.findMany(ctx.value)\n          const valueAsString = ctx.collection.stringifyItems(selectedItems)\n\n          ctx.highlightedItem = ctx.collection.find(ctx.highlightedValue)\n          ctx.selectedItems = selectedItems\n          ctx.valueAsString = valueAsString\n        },\n        syncSelectedItems(ctx) {\n          sync.valueChange(ctx)\n        },\n        syncHighlightedItem(ctx) {\n          sync.highlightChange(ctx)\n        },\n      },\n    },\n  )\n}\n\nfunction dispatchChangeEvent(ctx: MachineContext) {\n  raf(() => {\n    const node = dom.getHiddenSelectEl(ctx)\n    if (!node) return\n    const win = dom.getWin(ctx)\n    const changeEvent = new win.Event(\"change\", { bubbles: true, composed: true })\n    node.dispatchEvent(changeEvent)\n  })\n}\n\nconst sync = {\n  valueChange: (ctx: MachineContext) => {\n    const prevSelectedItems = ctx.selectedItems\n    ctx.selectedItems = ctx.value.map((value) => {\n      const foundItem = prevSelectedItems.find((item) => ctx.collection.getItemValue(item) === value)\n      if (foundItem) return foundItem\n      return ctx.collection.find(value)\n    })\n    ctx.valueAsString = ctx.collection.stringifyItems(ctx.selectedItems)\n  },\n\n  highlightChange: (ctx: MachineContext) => {\n    ctx.highlightedItem = ctx.collection.find(ctx.highlightedValue)\n  },\n}\n\nconst invoke = {\n  valueChange: (ctx: MachineContext) => {\n    sync.valueChange(ctx)\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value),\n      items: Array.from(ctx.selectedItems),\n    })\n    dispatchChangeEvent(ctx)\n  },\n  highlightChange: (ctx: MachineContext) => {\n    sync.highlightChange(ctx)\n    ctx.onHighlightChange?.({\n      highlightedValue: ctx.highlightedValue,\n      highlightedItem: ctx.highlightedItem,\n      highlightedIndex: ctx.collection.indexOf(ctx.highlightedValue),\n    })\n  },\n}\n\nconst set = {\n  selectedItem: (ctx: MachineContext, value: string | null | undefined, force = false) => {\n    if (isEqual(ctx.value, value)) return\n\n    if (value == null && !force) return\n\n    if (value == null && force) {\n      ctx.value = []\n      invoke.valueChange(ctx)\n      return\n    }\n\n    ctx.value = ctx.multiple ? addOrRemove(ctx.value, value!) : [value!]\n    invoke.valueChange(ctx)\n  },\n  selectedItems: (ctx: MachineContext, value: string[]) => {\n    if (isEqual(ctx.value, value)) return\n\n    ctx.value = value\n    invoke.valueChange(ctx)\n  },\n  highlightedItem: (ctx: MachineContext, value: string | null | undefined, force = false) => {\n    if (isEqual(ctx.highlightedValue, value)) return\n\n    if (value == null && !force) return\n    ctx.highlightedValue = value ?? null\n\n    invoke.highlightChange(ctx)\n  },\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { ItemGroupLabelProps, ItemGroupProps, ItemProps, UserDefinedContext } from \"./select.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"closeOnSelect\",\n  \"collection\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"loopFocus\",\n  \"multiple\",\n  \"name\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"open.controlled\",\n  \"open\",\n  \"composite\",\n  \"positioning\",\n  \"required\",\n  \"readOnly\",\n  \"scrollToIndexFn\",\n  \"value\",\n])\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n\nexport const itemProps = createProps<ItemProps>()([\"item\", \"persistFocus\"])\nexport const splitItemProps = createSplitProps<ItemProps>(itemProps)\n\nexport const itemGroupProps = createProps<ItemGroupProps>()([\"id\"])\nexport const splitItemGroupProps = createSplitProps<ItemGroupProps>(itemGroupProps)\n\nexport const itemGroupLabelProps = createProps<ItemGroupLabelProps>()([\"htmlFor\"])\nexport const splitItemGroupLabelProps = createSplitProps<ItemGroupLabelProps>(itemGroupLabelProps)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
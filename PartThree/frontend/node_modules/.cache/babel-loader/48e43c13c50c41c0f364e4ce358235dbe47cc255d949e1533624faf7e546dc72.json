{"ast":null,"code":"// src/menu.anatomy.ts\nimport { createAnatomy } from \"@zag-js/anatomy\";\nvar anatomy = createAnatomy(\"menu\").parts(\"arrow\", \"arrowTip\", \"content\", \"contextTrigger\", \"indicator\", \"item\", \"itemGroup\", \"itemGroupLabel\", \"itemIndicator\", \"itemText\", \"positioner\", \"separator\", \"trigger\", \"triggerItem\");\nvar parts = anatomy.build();\n\n// src/menu.connect.ts\nimport { mergeProps } from \"@zag-js/core\";\nimport { clickIfLink, getEventKey, getEventPoint, isContextMenuEvent, isModifierKey, isPrintableKey } from \"@zag-js/dom-event\";\nimport { dataAttr, getEventTarget, isDownloadingEvent, isEditableElement, isOpeningInNewTab, isSelfTarget, isValidTabEvent } from \"@zag-js/dom-query\";\nimport { getPlacementStyles } from \"@zag-js/popper\";\n\n// src/menu.dom.ts\nimport { isHTMLElement, nextById, prevById, queryAll, getByTypeahead, createScope } from \"@zag-js/dom-query\";\nimport { first, last } from \"@zag-js/utils\";\nvar dom = createScope({\n  getTriggerId: ctx => ctx.ids?.trigger ?? `menu:${ctx.id}:trigger`,\n  getContextTriggerId: ctx => ctx.ids?.contextTrigger ?? `menu:${ctx.id}:ctx-trigger`,\n  getContentId: ctx => ctx.ids?.content ?? `menu:${ctx.id}:content`,\n  getArrowId: ctx => ctx.ids?.arrow ?? `menu:${ctx.id}:arrow`,\n  getPositionerId: ctx => ctx.ids?.positioner ?? `menu:${ctx.id}:popper`,\n  getGroupId: (ctx, id) => ctx.ids?.group?.(id) ?? `menu:${ctx.id}:group:${id}`,\n  getGroupLabelId: (ctx, id) => ctx.ids?.groupLabel?.(id) ?? `menu:${ctx.id}:group-label:${id}`,\n  getContentEl: ctx => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: ctx => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getTriggerEl: ctx => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getHighlightedItemEl: ctx => ctx.highlightedValue ? dom.getById(ctx, ctx.highlightedValue) : null,\n  getArrowEl: ctx => dom.getById(ctx, dom.getArrowId(ctx)),\n  getElements: ctx => {\n    const ownerId = CSS.escape(dom.getContentId(ctx));\n    const selector = `[role^=\"menuitem\"][data-ownedby=${ownerId}]:not([data-disabled])`;\n    return queryAll(dom.getContentEl(ctx), selector);\n  },\n  getFirstEl: ctx => first(dom.getElements(ctx)),\n  getLastEl: ctx => last(dom.getElements(ctx)),\n  getNextEl: (ctx, loop) => nextById(dom.getElements(ctx), ctx.highlightedValue, loop ?? ctx.loopFocus),\n  getPrevEl: (ctx, loop) => prevById(dom.getElements(ctx), ctx.highlightedValue, loop ?? ctx.loopFocus),\n  getElemByKey: (ctx, key) => getByTypeahead(dom.getElements(ctx), {\n    state: ctx.typeaheadState,\n    key,\n    activeId: ctx.highlightedValue\n  }),\n  isTargetDisabled: v => {\n    return isHTMLElement(v) && (v.dataset.disabled === \"\" || v.hasAttribute(\"disabled\"));\n  },\n  isTriggerItem: el => {\n    return !!el?.getAttribute(\"role\")?.startsWith(\"menuitem\") && !!el?.hasAttribute(\"aria-controls\");\n  },\n  getOptionFromItemEl(el) {\n    return {\n      id: el.id,\n      name: el.dataset.name,\n      value: el.dataset.value,\n      valueText: el.dataset.valueText,\n      type: el.dataset.type\n    };\n  }\n});\n\n// src/menu.connect.ts\nfunction connect(state, send, normalize) {\n  const isSubmenu = state.context.isSubmenu;\n  const isTypingAhead = state.context.isTypingAhead;\n  const composite = state.context.composite;\n  const open = state.hasTag(\"open\");\n  const popperStyles = getPlacementStyles({\n    ...state.context.positioning,\n    placement: state.context.anchorPoint ? \"bottom\" : state.context.currentPlacement\n  });\n  function getItemState(props2) {\n    return {\n      disabled: !!props2.disabled,\n      highlighted: state.context.highlightedValue === props2.value\n    };\n  }\n  function getOptionItemProps(props2) {\n    const valueText = props2.valueText ?? props2.value;\n    return {\n      ...props2,\n      id: props2.value,\n      valueText\n    };\n  }\n  function getOptionItemState(props2) {\n    const itemState = getItemState(getOptionItemProps(props2));\n    return {\n      ...itemState,\n      checked: !!props2.checked\n    };\n  }\n  function getItemProps(props2) {\n    const {\n      value: id,\n      closeOnSelect,\n      valueText\n    } = props2;\n    const itemState = getItemState(props2);\n    return normalize.element({\n      ...parts.item.attrs,\n      id,\n      role: \"menuitem\",\n      \"aria-disabled\": itemState.disabled,\n      \"data-disabled\": dataAttr(itemState.disabled),\n      \"data-ownedby\": dom.getContentId(state.context),\n      \"data-highlighted\": dataAttr(itemState.highlighted),\n      \"data-valuetext\": valueText,\n      onDragStart(event) {\n        const isLink = event.currentTarget.matches(\"a[href]\");\n        if (isLink) event.preventDefault();\n      },\n      onPointerMove(event) {\n        if (itemState.disabled) return;\n        if (event.pointerType !== \"mouse\") return;\n        const target = event.currentTarget;\n        if (itemState.highlighted) return;\n        send({\n          type: \"ITEM_POINTERMOVE\",\n          id,\n          target,\n          closeOnSelect\n        });\n      },\n      onPointerLeave(event) {\n        if (itemState.disabled) return;\n        if (event.pointerType !== \"mouse\") return;\n        const pointerMoved = state.previousEvent.type.includes(\"POINTER\");\n        if (!pointerMoved) return;\n        const target = event.currentTarget;\n        send({\n          type: \"ITEM_POINTERLEAVE\",\n          id,\n          target,\n          closeOnSelect\n        });\n      },\n      onPointerDown(event) {\n        if (itemState.disabled) return;\n        const target = event.currentTarget;\n        send({\n          type: \"ITEM_POINTERDOWN\",\n          target,\n          id,\n          closeOnSelect\n        });\n      },\n      onClick(event) {\n        if (isDownloadingEvent(event)) return;\n        if (isOpeningInNewTab(event)) return;\n        if (itemState.disabled) return;\n        const target = event.currentTarget;\n        send({\n          type: \"ITEM_CLICK\",\n          target,\n          id,\n          closeOnSelect\n        });\n      }\n    });\n  }\n  return {\n    highlightedValue: state.context.highlightedValue,\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    setHighlightedValue(value) {\n      send({\n        type: \"HIGHLIGHTED.SET\",\n        id: value\n      });\n    },\n    setParent(parent) {\n      send({\n        type: \"PARENT.SET\",\n        value: parent,\n        id: parent.state.context.id\n      });\n    },\n    setChild(child) {\n      send({\n        type: \"CHILD.SET\",\n        value: child,\n        id: child.state.context.id\n      });\n    },\n    reposition(options = {}) {\n      send({\n        type: \"POSITIONING.SET\",\n        options\n      });\n    },\n    getContextTriggerProps() {\n      return normalize.element({\n        ...parts.contextTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getContextTriggerId(state.context),\n        onPointerDown(event) {\n          if (event.pointerType === \"mouse\") return;\n          const point = getEventPoint(event);\n          send({\n            type: \"CONTEXT_MENU_START\",\n            point\n          });\n        },\n        onPointerCancel(event) {\n          if (event.pointerType === \"mouse\") return;\n          send(\"CONTEXT_MENU_CANCEL\");\n        },\n        onPointerMove(event) {\n          if (event.pointerType === \"mouse\") return;\n          send(\"CONTEXT_MENU_CANCEL\");\n        },\n        onPointerUp(event) {\n          if (event.pointerType === \"mouse\") return;\n          send(\"CONTEXT_MENU_CANCEL\");\n        },\n        onContextMenu(event) {\n          const point = getEventPoint(event);\n          send({\n            type: \"CONTEXT_MENU\",\n            point\n          });\n          event.preventDefault();\n        },\n        style: {\n          WebkitTouchCallout: \"none\",\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\"\n        }\n      });\n    },\n    getTriggerItemProps(childApi) {\n      return mergeProps(getItemProps({\n        value: childApi.getTriggerProps().id\n      }), childApi.getTriggerProps());\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...(isSubmenu ? parts.triggerItem.attrs : parts.trigger.attrs),\n        \"data-placement\": state.context.currentPlacement,\n        type: \"button\",\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        \"data-uid\": state.context.id,\n        \"aria-haspopup\": composite ? \"menu\" : \"dialog\",\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-expanded\": open || void 0,\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerMove(event) {\n          if (event.pointerType !== \"mouse\") return;\n          const disabled = dom.isTargetDisabled(event.currentTarget);\n          if (disabled || !isSubmenu) return;\n          send({\n            type: \"TRIGGER_POINTERMOVE\",\n            target: event.currentTarget\n          });\n        },\n        onPointerLeave(event) {\n          if (dom.isTargetDisabled(event.currentTarget)) return;\n          if (event.pointerType !== \"mouse\") return;\n          if (!isSubmenu) return;\n          const point = getEventPoint(event);\n          send({\n            type: \"TRIGGER_POINTERLEAVE\",\n            target: event.currentTarget,\n            point\n          });\n        },\n        onPointerDown(event) {\n          if (dom.isTargetDisabled(event.currentTarget)) return;\n          if (isContextMenuEvent(event)) return;\n          event.preventDefault();\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (dom.isTargetDisabled(event.currentTarget)) return;\n          send({\n            type: \"TRIGGER_CLICK\",\n            target: event.currentTarget\n          });\n        },\n        onBlur() {\n          send(\"TRIGGER_BLUR\");\n        },\n        onFocus() {\n          send(\"TRIGGER_FOCUS\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          const keyMap = {\n            ArrowDown() {\n              send(\"ARROW_DOWN\");\n            },\n            ArrowUp() {\n              send(\"ARROW_UP\");\n            },\n            Enter() {\n              send({\n                type: \"ARROW_DOWN\",\n                src: \"enter\"\n              });\n            },\n            Space() {\n              send({\n                type: \"ARROW_DOWN\",\n                src: \"space\"\n              });\n            }\n          };\n          const key = getEventKey(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: popperStyles.floating\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: dom.getContentId(state.context),\n        \"aria-label\": state.context[\"aria-label\"],\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: composite ? \"menu\" : \"dialog\",\n        tabIndex: 0,\n        dir: state.context.dir,\n        \"aria-activedescendant\": state.context.highlightedValue ?? void 0,\n        \"aria-labelledby\": dom.getTriggerId(state.context),\n        \"data-placement\": state.context.currentPlacement,\n        onPointerEnter(event) {\n          if (event.pointerType !== \"mouse\") return;\n          send(\"MENU_POINTERENTER\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!isSelfTarget(event)) return;\n          const target = getEventTarget(event);\n          const sameMenu = target?.closest(\"[role=menu]\") === event.currentTarget || target === event.currentTarget;\n          if (!sameMenu) return;\n          if (event.key === \"Tab\") {\n            const valid = isValidTabEvent(event);\n            if (!valid) {\n              event.preventDefault();\n              return;\n            }\n          }\n          const item = dom.getHighlightedItemEl(state.context);\n          const keyMap = {\n            ArrowDown() {\n              send(\"ARROW_DOWN\");\n            },\n            ArrowUp() {\n              send(\"ARROW_UP\");\n            },\n            ArrowLeft() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowRight() {\n              send(\"ARROW_RIGHT\");\n            },\n            Enter() {\n              send(\"ENTER\");\n              clickIfLink(item);\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({\n                  type: \"TYPEAHEAD\",\n                  key: event2.key\n                });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            }\n          };\n          const key = getEventKey(event, {\n            dir: state.context.dir\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.stopPropagation();\n            event.preventDefault();\n            return;\n          }\n          if (!state.context.typeahead) return;\n          if (!isPrintableKey(event)) return;\n          if (isModifierKey(event)) return;\n          if (isEditableElement(target)) return;\n          send({\n            type: \"TYPEAHEAD\",\n            key: event.key\n          });\n          event.preventDefault();\n        }\n      });\n    },\n    getSeparatorProps() {\n      return normalize.element({\n        ...parts.separator.attrs,\n        role: \"separator\",\n        dir: state.context.dir,\n        \"aria-orientation\": \"horizontal\"\n      });\n    },\n    getItemState,\n    getItemProps,\n    getOptionItemState,\n    getOptionItemProps(props2) {\n      const {\n        type,\n        disabled,\n        onCheckedChange,\n        closeOnSelect\n      } = props2;\n      const option = getOptionItemProps(props2);\n      const itemState = getOptionItemState(props2);\n      return {\n        ...getItemProps(option),\n        ...normalize.element({\n          \"data-type\": type,\n          ...parts.item.attrs,\n          dir: state.context.dir,\n          \"data-value\": option.value,\n          role: `menuitem${type}`,\n          \"aria-checked\": !!itemState.checked,\n          \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n          onClick(event) {\n            if (disabled) return;\n            if (isDownloadingEvent(event)) return;\n            if (isOpeningInNewTab(event)) return;\n            const target = event.currentTarget;\n            send({\n              type: \"ITEM_CLICK\",\n              target,\n              option,\n              closeOnSelect\n            });\n            onCheckedChange?.(!itemState.checked);\n          }\n        })\n      };\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getOptionItemState(props2);\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(itemState.disabled),\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n        \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n        hidden: !itemState.checked\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getOptionItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(itemState.disabled),\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n        \"data-state\": itemState.checked ? \"checked\" : \"unchecked\"\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      return normalize.element({\n        id: dom.getGroupLabelId(state.context, props2.htmlFor),\n        dir: state.context.dir,\n        ...parts.itemGroupLabel.attrs\n      });\n    },\n    getItemGroupProps(props2) {\n      return normalize.element({\n        id: dom.getGroupId(state.context, props2.id),\n        ...parts.itemGroup.attrs,\n        dir: state.context.dir,\n        \"aria-labelledby\": dom.getGroupLabelId(state.context, props2.id),\n        role: \"group\"\n      });\n    }\n  };\n}\n\n// src/menu.machine.ts\nimport { createMachine, guards, ref } from \"@zag-js/core\";\nimport { trackDismissableElement } from \"@zag-js/dismissable\";\nimport { addDomEvent } from \"@zag-js/dom-event\";\nimport { contains, getByTypeahead as getByTypeahead2, getInitialFocus, isEditableElement as isEditableElement2, observeAttributes, raf, scrollIntoView } from \"@zag-js/dom-query\";\nimport { getPlacement, getPlacementSide } from \"@zag-js/popper\";\nimport { getElementPolygon, isPointInPolygon } from \"@zag-js/rect-utils\";\nimport { cast, compact, isEqual } from \"@zag-js/utils\";\nvar {\n  not,\n  and,\n  or\n} = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"menu\",\n    initial: ctx.open ? \"open\" : \"idle\",\n    context: {\n      highlightedValue: null,\n      loopFocus: false,\n      anchorPoint: null,\n      closeOnSelect: true,\n      typeahead: true,\n      composite: true,\n      ...ctx,\n      positioning: {\n        placement: \"bottom-start\",\n        gutter: 8,\n        ...ctx.positioning\n      },\n      intentPolygon: null,\n      parent: null,\n      lastHighlightedValue: null,\n      children: cast(ref({})),\n      suspendPointer: false,\n      restoreFocus: true,\n      typeaheadState: getByTypeahead2.defaultOptions\n    },\n    computed: {\n      isSubmenu: ctx2 => ctx2.parent !== null,\n      isRtl: ctx2 => ctx2.dir === \"rtl\",\n      isTypingAhead: ctx2 => ctx2.typeaheadState.keysSoFar !== \"\"\n    },\n    watch: {\n      isSubmenu: \"setSubmenuPlacement\",\n      anchorPoint: \"reposition\",\n      open: \"toggleVisibility\"\n    },\n    on: {\n      \"PARENT.SET\": {\n        actions: \"setParentMenu\"\n      },\n      \"CHILD.SET\": {\n        actions: \"setChildMenu\"\n      },\n      OPEN: [{\n        guard: \"isOpenControlled\",\n        actions: \"invokeOnOpen\"\n      }, {\n        target: \"open\",\n        actions: \"invokeOnOpen\"\n      }],\n      OPEN_AUTOFOCUS: [{\n        guard: \"isOpenControlled\",\n        actions: [\"invokeOnOpen\"]\n      }, {\n        internal: true,\n        target: \"open\",\n        actions: [\"highlightFirstItem\", \"invokeOnOpen\"]\n      }],\n      CLOSE: [{\n        guard: \"isOpenControlled\",\n        actions: \"invokeOnClose\"\n      }, {\n        target: \"closed\",\n        actions: \"invokeOnClose\"\n      }],\n      \"HIGHLIGHTED.RESTORE\": {\n        actions: \"restoreHighlightedItem\"\n      },\n      \"HIGHLIGHTED.SET\": {\n        actions: \"setHighlightedItem\"\n      }\n    },\n    states: {\n      idle: {\n        tags: [\"closed\"],\n        on: {\n          \"CONTROLLED.OPEN\": \"open\",\n          \"CONTROLLED.CLOSE\": \"closed\",\n          CONTEXT_MENU_START: {\n            target: \"opening:contextmenu\",\n            actions: \"setAnchorPoint\"\n          },\n          CONTEXT_MENU: [{\n            guard: \"isOpenControlled\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          }],\n          TRIGGER_CLICK: [{\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnOpen\"\n          }, {\n            target: \"open\",\n            actions: \"invokeOnOpen\"\n          }],\n          TRIGGER_FOCUS: {\n            guard: not(\"isSubmenu\"),\n            target: \"closed\"\n          },\n          TRIGGER_POINTERMOVE: {\n            guard: \"isSubmenu\",\n            target: \"opening\"\n          }\n        }\n      },\n      \"opening:contextmenu\": {\n        tags: [\"closed\"],\n        after: {\n          LONG_PRESS_DELAY: [{\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnOpen\"\n          }, {\n            target: \"open\",\n            actions: \"invokeOnOpen\"\n          }]\n        },\n        on: {\n          \"CONTROLLED.OPEN\": \"open\",\n          \"CONTROLLED.CLOSE\": \"closed\",\n          CONTEXT_MENU_CANCEL: [{\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnClose\"\n          }, {\n            target: \"closed\",\n            actions: \"invokeOnClose\"\n          }]\n        }\n      },\n      opening: {\n        tags: [\"closed\"],\n        after: {\n          SUBMENU_OPEN_DELAY: [{\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnOpen\"\n          }, {\n            target: \"open\",\n            actions: \"invokeOnOpen\"\n          }]\n        },\n        on: {\n          \"CONTROLLED.OPEN\": \"open\",\n          \"CONTROLLED.CLOSE\": \"closed\",\n          BLUR: [{\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnClose\"\n          }, {\n            target: \"closed\",\n            actions: \"invokeOnClose\"\n          }],\n          TRIGGER_POINTERLEAVE: [{\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnClose\"\n          }, {\n            target: \"closed\",\n            actions: \"invokeOnClose\"\n          }]\n        }\n      },\n      closing: {\n        tags: [\"open\"],\n        activities: [\"trackPointerMove\", \"trackInteractOutside\"],\n        after: {\n          SUBMENU_CLOSE_DELAY: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          }, {\n            target: \"closed\",\n            actions: [\"focusParentMenu\", \"restoreParentHiglightedItem\", \"invokeOnClose\"]\n          }]\n        },\n        on: {\n          \"CONTROLLED.OPEN\": \"open\",\n          \"CONTROLLED.CLOSE\": {\n            target: \"closed\",\n            actions: [\"focusParentMenu\", \"restoreParentHiglightedItem\"]\n          },\n          // don't invoke on open here since the menu is still open (we're only keeping it open)\n          MENU_POINTERENTER: {\n            target: \"open\",\n            actions: \"clearIntentPolygon\"\n          },\n          POINTER_MOVED_AWAY_FROM_SUBMENU: [{\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnClose\"\n          }, {\n            target: \"closed\",\n            actions: [\"focusParentMenu\", \"restoreParentHiglightedItem\"]\n          }]\n        }\n      },\n      closed: {\n        tags: [\"closed\"],\n        entry: [\"clearHighlightedItem\", \"focusTrigger\", \"resumePointer\"],\n        on: {\n          \"CONTROLLED.OPEN\": [{\n            guard: or(\"isOpenAutoFocusEvent\", \"isArrowDownEvent\"),\n            target: \"open\",\n            actions: \"highlightFirstItem\"\n          }, {\n            guard: \"isArrowUpEvent\",\n            target: \"open\",\n            actions: \"highlightLastItem\"\n          }, {\n            target: \"open\"\n          }],\n          CONTEXT_MENU_START: {\n            target: \"opening:contextmenu\",\n            actions: \"setAnchorPoint\"\n          },\n          CONTEXT_MENU: [{\n            guard: \"isOpenControlled\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          }],\n          TRIGGER_CLICK: [{\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnOpen\"\n          }, {\n            target: \"open\",\n            actions: \"invokeOnOpen\"\n          }],\n          TRIGGER_POINTERMOVE: {\n            guard: \"isTriggerItem\",\n            target: \"opening\"\n          },\n          TRIGGER_BLUR: \"idle\",\n          ARROW_DOWN: [{\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnOpen\"\n          }, {\n            target: \"open\",\n            actions: [\"highlightFirstItem\", \"invokeOnOpen\"]\n          }],\n          ARROW_UP: [{\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnOpen\"\n          }, {\n            target: \"open\",\n            actions: [\"highlightLastItem\", \"invokeOnOpen\"]\n          }]\n        }\n      },\n      open: {\n        tags: [\"open\"],\n        activities: [\"trackInteractOutside\", \"trackPositioning\", \"scrollToHighlightedItem\"],\n        entry: [\"focusMenu\", \"resumePointer\"],\n        on: {\n          \"CONTROLLED.CLOSE\": [{\n            target: \"closed\",\n            guard: \"isArrowLeftEvent\",\n            actions: [\"focusParentMenu\"]\n          }, {\n            target: \"closed\"\n          }],\n          TRIGGER_CLICK: [{\n            guard: and(not(\"isTriggerItem\"), \"isOpenControlled\"),\n            actions: \"invokeOnClose\"\n          }, {\n            guard: not(\"isTriggerItem\"),\n            target: \"closed\",\n            actions: \"invokeOnClose\"\n          }],\n          ARROW_UP: {\n            actions: [\"highlightPrevItem\", \"focusMenu\"]\n          },\n          ARROW_DOWN: {\n            actions: [\"highlightNextItem\", \"focusMenu\"]\n          },\n          ARROW_LEFT: [{\n            guard: and(\"isSubmenu\", \"isOpenControlled\"),\n            actions: \"invokeOnClose\"\n          }, {\n            guard: \"isSubmenu\",\n            target: \"closed\",\n            actions: [\"focusParentMenu\", \"invokeOnClose\"]\n          }],\n          HOME: {\n            actions: [\"highlightFirstItem\", \"focusMenu\"]\n          },\n          END: {\n            actions: [\"highlightLastItem\", \"focusMenu\"]\n          },\n          ARROW_RIGHT: {\n            guard: \"isTriggerItemHighlighted\",\n            actions: \"openSubmenu\"\n          },\n          ENTER: [{\n            guard: \"isTriggerItemHighlighted\",\n            actions: \"openSubmenu\"\n          }, {\n            actions: \"clickHighlightedItem\"\n          }],\n          ITEM_POINTERMOVE: [{\n            guard: not(\"suspendPointer\"),\n            actions: [\"setHighlightedItem\", \"focusMenu\"]\n          }, {\n            actions: \"setLastHighlightedItem\"\n          }],\n          ITEM_POINTERLEAVE: {\n            guard: and(not(\"suspendPointer\"), not(\"isTriggerItem\")),\n            actions: \"clearHighlightedItem\"\n          },\n          ITEM_CLICK: [\n          // == grouped ==\n          {\n            guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\"), \"closeOnSelect\", \"isOpenControlled\"),\n            actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"]\n          }, {\n            guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\"), \"closeOnSelect\"),\n            target: \"closed\",\n            actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"]\n          },\n          //\n          {\n            guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\")),\n            actions: [\"invokeOnSelect\", \"setOptionState\"]\n          }, {\n            actions: \"setHighlightedItem\"\n          }],\n          TRIGGER_POINTERLEAVE: {\n            target: \"closing\",\n            actions: \"setIntentPolygon\"\n          },\n          ITEM_POINTERDOWN: {\n            actions: \"setHighlightedItem\"\n          },\n          TYPEAHEAD: {\n            actions: \"highlightMatchedItem\"\n          },\n          FOCUS_MENU: {\n            actions: \"focusMenu\"\n          },\n          \"POSITIONING.SET\": {\n            actions: \"reposition\"\n          }\n        }\n      }\n    }\n  }, {\n    delays: {\n      LONG_PRESS_DELAY: 700,\n      SUBMENU_OPEN_DELAY: 100,\n      SUBMENU_CLOSE_DELAY: 100\n    },\n    guards: {\n      closeOnSelect: (ctx2, evt) => !!(evt?.closeOnSelect ?? ctx2.closeOnSelect),\n      // whether the trigger is also a menu item\n      isTriggerItem: (_ctx, evt) => dom.isTriggerItem(evt.target),\n      // whether the trigger item is the active item\n      isTriggerItemHighlighted: (ctx2, evt) => {\n        const target = evt.target ?? dom.getHighlightedItemEl(ctx2);\n        return !!target?.hasAttribute(\"aria-controls\");\n      },\n      isSubmenu: ctx2 => ctx2.isSubmenu,\n      suspendPointer: ctx2 => ctx2.suspendPointer,\n      isHighlightedItemEditable: ctx2 => isEditableElement2(dom.getHighlightedItemEl(ctx2)),\n      isWithinPolygon: (ctx2, evt) => {\n        if (!ctx2.intentPolygon) return false;\n        return isPointInPolygon(ctx2.intentPolygon, evt.point);\n      },\n      // guard assertions (for controlled mode)\n      isOpenControlled: ctx2 => !!ctx2[\"open.controlled\"],\n      isArrowLeftEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_LEFT\",\n      isArrowUpEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_UP\",\n      isArrowDownEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_DOWN\",\n      isOpenAutoFocusEvent: (_ctx, evt) => evt.previousEvent?.type === \"OPEN_AUTOFOCUS\"\n    },\n    activities: {\n      trackPositioning(ctx2) {\n        if (ctx2.anchorPoint) return;\n        ctx2.currentPlacement = ctx2.positioning.placement;\n        const getPositionerEl = () => dom.getPositionerEl(ctx2);\n        return getPlacement(dom.getTriggerEl(ctx2), getPositionerEl, {\n          ...ctx2.positioning,\n          defer: true,\n          onComplete(data) {\n            ctx2.currentPlacement = data.placement;\n          }\n        });\n      },\n      trackInteractOutside(ctx2, _evt, {\n        send\n      }) {\n        const getContentEl = () => dom.getContentEl(ctx2);\n        return trackDismissableElement(getContentEl, {\n          defer: true,\n          exclude: [dom.getTriggerEl(ctx2)],\n          onInteractOutside: ctx2.onInteractOutside,\n          onFocusOutside: ctx2.onFocusOutside,\n          onEscapeKeyDown(event) {\n            ctx2.onEscapeKeyDown?.(event);\n            if (ctx2.isSubmenu) event.preventDefault();\n            closeRootMenu(ctx2);\n          },\n          onPointerDownOutside(event) {\n            ctx2.restoreFocus = !event.detail.focusable;\n            ctx2.onPointerDownOutside?.(event);\n          },\n          onDismiss() {\n            send({\n              type: \"CLOSE\",\n              src: \"interact-outside\"\n            });\n          }\n        });\n      },\n      trackPointerMove(ctx2, _evt, {\n        guards: guards2,\n        send\n      }) {\n        const {\n          isWithinPolygon\n        } = guards2;\n        ctx2.parent.state.context.suspendPointer = true;\n        const doc = dom.getDoc(ctx2);\n        return addDomEvent(doc, \"pointermove\", e => {\n          const point = {\n            x: e.clientX,\n            y: e.clientY\n          };\n          const isMovingToSubmenu = isWithinPolygon(ctx2, {\n            point\n          });\n          if (!isMovingToSubmenu) {\n            send(\"POINTER_MOVED_AWAY_FROM_SUBMENU\");\n            ctx2.parent.state.context.suspendPointer = false;\n          }\n        });\n      },\n      scrollToHighlightedItem(ctx2, _evt, {\n        getState\n      }) {\n        const exec = () => {\n          const state = getState();\n          if (state.event.type.startsWith(\"ITEM_POINTER\")) return;\n          const itemEl = dom.getHighlightedItemEl(ctx2);\n          const contentEl2 = dom.getContentEl(ctx2);\n          scrollIntoView(itemEl, {\n            rootEl: contentEl2,\n            block: \"nearest\"\n          });\n        };\n        raf(() => exec());\n        const contentEl = () => dom.getContentEl(ctx2);\n        return observeAttributes(contentEl, {\n          defer: true,\n          attributes: [\"aria-activedescendant\"],\n          callback: exec\n        });\n      }\n    },\n    actions: {\n      setAnchorPoint(ctx2, evt) {\n        ctx2.anchorPoint = evt.point;\n      },\n      setSubmenuPlacement(ctx2) {\n        if (!ctx2.isSubmenu) return;\n        ctx2.positioning.placement = ctx2.isRtl ? \"left-start\" : \"right-start\";\n        ctx2.positioning.gutter = 0;\n      },\n      reposition(ctx2, evt) {\n        const getPositionerEl = () => dom.getPositionerEl(ctx2);\n        const getAnchorRect = ctx2.anchorPoint ? () => ({\n          width: 0,\n          height: 0,\n          ...ctx2.anchorPoint\n        }) : void 0;\n        getPlacement(dom.getTriggerEl(ctx2), getPositionerEl, {\n          ...ctx2.positioning,\n          defer: true,\n          getAnchorRect,\n          ...(evt.options ?? {}),\n          listeners: false,\n          onComplete(data) {\n            ctx2.currentPlacement = data.placement;\n          }\n        });\n      },\n      setOptionState(_ctx, evt) {\n        if (!evt.option) return;\n        const {\n          checked,\n          onCheckedChange,\n          type\n        } = evt.option;\n        if (type === \"radio\") {\n          onCheckedChange?.(true);\n        } else if (type === \"checkbox\") {\n          onCheckedChange?.(!checked);\n        }\n      },\n      clickHighlightedItem(ctx2, _evt) {\n        const itemEl = dom.getHighlightedItemEl(ctx2);\n        if (!itemEl || itemEl.dataset.disabled) return;\n        queueMicrotask(() => itemEl.click());\n      },\n      setIntentPolygon(ctx2, evt) {\n        const menu = dom.getContentEl(ctx2);\n        const placement = ctx2.currentPlacement;\n        if (!menu || !placement) return;\n        const rect = menu.getBoundingClientRect();\n        const polygon = getElementPolygon(rect, placement);\n        if (!polygon) return;\n        const rightSide = getPlacementSide(placement) === \"right\";\n        const bleed = rightSide ? -5 : 5;\n        ctx2.intentPolygon = [{\n          ...evt.point,\n          x: evt.point.x + bleed\n        }, ...polygon];\n      },\n      clearIntentPolygon(ctx2) {\n        ctx2.intentPolygon = null;\n      },\n      resumePointer(ctx2) {\n        if (!ctx2.parent) return;\n        ctx2.parent.state.context.suspendPointer = false;\n      },\n      setHighlightedItem(ctx2, evt) {\n        set.highlighted(ctx2, evt.id);\n      },\n      clearHighlightedItem(ctx2) {\n        set.highlighted(ctx2, null);\n      },\n      focusMenu(ctx2) {\n        raf(() => {\n          const contentEl = dom.getContentEl(ctx2);\n          const initialFocusEl = getInitialFocus({\n            root: contentEl,\n            enabled: !contains(contentEl, dom.getActiveElement(ctx2)),\n            filter(node) {\n              return !node.role?.startsWith(\"menuitem\");\n            }\n          });\n          initialFocusEl?.focus({\n            preventScroll: true\n          });\n        });\n      },\n      highlightFirstItem(ctx2) {\n        const first2 = dom.getFirstEl(ctx2);\n        if (!first2) return;\n        set.highlighted(ctx2, first2.id);\n      },\n      highlightLastItem(ctx2) {\n        const last2 = dom.getLastEl(ctx2);\n        if (!last2) return;\n        set.highlighted(ctx2, last2.id);\n      },\n      highlightNextItem(ctx2, evt) {\n        const next = dom.getNextEl(ctx2, evt.loop);\n        set.highlighted(ctx2, next?.id ?? null);\n      },\n      highlightPrevItem(ctx2, evt) {\n        const prev = dom.getPrevEl(ctx2, evt.loop);\n        set.highlighted(ctx2, prev?.id ?? null);\n      },\n      invokeOnSelect(ctx2) {\n        if (!ctx2.highlightedValue) return;\n        ctx2.onSelect?.({\n          value: ctx2.highlightedValue\n        });\n      },\n      focusTrigger(ctx2) {\n        if (ctx2.isSubmenu || ctx2.anchorPoint || !ctx2.restoreFocus) return;\n        queueMicrotask(() => dom.getTriggerEl(ctx2)?.focus({\n          preventScroll: true\n        }));\n      },\n      highlightMatchedItem(ctx2, evt) {\n        const node = dom.getElemByKey(ctx2, evt.key);\n        if (!node) return;\n        set.highlighted(ctx2, node.id);\n      },\n      setParentMenu(ctx2, evt) {\n        ctx2.parent = ref(evt.value);\n      },\n      setChildMenu(ctx2, evt) {\n        ctx2.children[evt.id] = ref(evt.value);\n      },\n      closeRootMenu(ctx2) {\n        closeRootMenu(ctx2);\n      },\n      openSubmenu(ctx2) {\n        const item = dom.getHighlightedItemEl(ctx2);\n        const id = item?.getAttribute(\"data-uid\");\n        const child = id ? ctx2.children[id] : null;\n        child?.send(\"OPEN_AUTOFOCUS\");\n      },\n      focusParentMenu(ctx2) {\n        ctx2.parent?.send(\"FOCUS_MENU\");\n      },\n      setLastHighlightedItem(ctx2, evt) {\n        ctx2.lastHighlightedValue = evt.id;\n      },\n      restoreHighlightedItem(ctx2) {\n        if (!ctx2.lastHighlightedValue) return;\n        set.highlighted(ctx2, ctx2.lastHighlightedValue);\n        ctx2.lastHighlightedValue = null;\n      },\n      restoreParentHiglightedItem(ctx2) {\n        ctx2.parent?.send(\"HIGHLIGHTED.RESTORE\");\n      },\n      invokeOnOpen(ctx2) {\n        ctx2.onOpenChange?.({\n          open: true\n        });\n      },\n      invokeOnClose(ctx2) {\n        ctx2.onOpenChange?.({\n          open: false\n        });\n      },\n      toggleVisibility(ctx2, evt, {\n        send\n      }) {\n        send({\n          type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: evt\n        });\n      }\n    }\n  });\n}\nfunction closeRootMenu(ctx) {\n  let parent = ctx.parent;\n  while (parent && parent.state.context.isSubmenu) {\n    parent = parent.state.context.parent;\n  }\n  parent?.send(\"CLOSE\");\n}\nvar set = {\n  highlighted(ctx, value) {\n    if (isEqual(ctx.highlightedValue, value)) return;\n    ctx.highlightedValue = value;\n    ctx.onHighlightChange?.({\n      highlightedValue: value\n    });\n  }\n};\n\n// src/menu.props.ts\nimport { createProps } from \"@zag-js/types\";\nimport { createSplitProps } from \"@zag-js/utils\";\nvar props = createProps()([\"anchorPoint\", \"aria-label\", \"closeOnSelect\", \"dir\", \"getRootNode\", \"highlightedValue\", \"id\", \"ids\", \"loopFocus\", \"onFocusOutside\", \"onInteractOutside\", \"onOpenChange\", \"onPointerDownOutside\", \"onEscapeKeyDown\", \"onSelect\", \"onHighlightChange\", \"open\", \"open.controlled\", \"positioning\", \"typeahead\", \"composite\"]);\nvar splitProps = createSplitProps(props);\nvar itemProps = createProps()([\"closeOnSelect\", \"disabled\", \"value\", \"valueText\"]);\nvar splitItemProps = createSplitProps(itemProps);\nvar itemGroupLabelProps = createProps()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = createSplitProps(itemGroupLabelProps);\nvar itemGroupProps = createProps()([\"id\"]);\nvar splitItemGroupProps = createSplitProps(itemGroupProps);\nvar optionItemProps = createProps()([\"disabled\", \"valueText\", \"closeOnSelect\", \"type\", \"value\", \"checked\", \"onCheckedChange\"]);\nvar splitOptionItemProps = createSplitProps(optionItemProps);\nexport { anatomy, connect, itemGroupLabelProps, itemGroupProps, itemProps, machine, optionItemProps, props, splitItemGroupLabelProps, splitItemGroupProps, splitItemProps, splitOptionItemProps, splitProps };","map":{"version":3,"names":["createAnatomy","anatomy","parts","build","mergeProps","clickIfLink","getEventKey","getEventPoint","isContextMenuEvent","isModifierKey","isPrintableKey","dataAttr","getEventTarget","isDownloadingEvent","isEditableElement","isOpeningInNewTab","isSelfTarget","isValidTabEvent","getPlacementStyles","isHTMLElement","nextById","prevById","queryAll","getByTypeahead","createScope","first","last","dom","getTriggerId","ctx","ids","trigger","id","getContextTriggerId","contextTrigger","getContentId","content","getArrowId","arrow","getPositionerId","positioner","getGroupId","group","getGroupLabelId","groupLabel","getContentEl","getById","getPositionerEl","getTriggerEl","getHighlightedItemEl","highlightedValue","getArrowEl","getElements","ownerId","CSS","escape","selector","getFirstEl","getLastEl","getNextEl","loop","loopFocus","getPrevEl","getElemByKey","key","state","typeaheadState","activeId","isTargetDisabled","v","dataset","disabled","hasAttribute","isTriggerItem","el","getAttribute","startsWith","getOptionFromItemEl","name","value","valueText","type","connect","send","normalize","isSubmenu","context","isTypingAhead","composite","open","hasTag","popperStyles","positioning","placement","anchorPoint","currentPlacement","getItemState","props2","highlighted","getOptionItemProps","getOptionItemState","itemState","checked","getItemProps","closeOnSelect","element","item","attrs","role","onDragStart","event","isLink","currentTarget","matches","preventDefault","onPointerMove","pointerType","target","onPointerLeave","pointerMoved","previousEvent","includes","onPointerDown","onClick","setOpen","nextOpen","setHighlightedValue","setParent","parent","setChild","child","reposition","options","getContextTriggerProps","dir","point","onPointerCancel","onPointerUp","onContextMenu","style","WebkitTouchCallout","WebkitUserSelect","userSelect","getTriggerItemProps","childApi","getTriggerProps","button","triggerItem","defaultPrevented","onBlur","onFocus","onKeyDown","keyMap","ArrowDown","ArrowUp","Enter","src","Space","exec","getIndicatorProps","indicator","getPositionerProps","floating","getArrowProps","getArrowTipProps","arrowTip","getContentProps","hidden","tabIndex","onPointerEnter","sameMenu","closest","valid","ArrowLeft","ArrowRight","event2","Home","End","stopPropagation","typeahead","getSeparatorProps","separator","onCheckedChange","option","getItemIndicatorProps","itemIndicator","getItemTextProps","itemText","getItemGroupLabelProps","htmlFor","itemGroupLabel","getItemGroupProps","itemGroup","createMachine","guards","ref","trackDismissableElement","addDomEvent","contains","getByTypeahead2","getInitialFocus","isEditableElement2","observeAttributes","raf","scrollIntoView","getPlacement","getPlacementSide","getElementPolygon","isPointInPolygon","cast","compact","isEqual","not","and","or","machine","userContext","initial","gutter","intentPolygon","lastHighlightedValue","children","suspendPointer","restoreFocus","defaultOptions","computed","ctx2","isRtl","keysSoFar","watch","on","actions","OPEN","guard","OPEN_AUTOFOCUS","internal","CLOSE","states","idle","tags","CONTEXT_MENU_START","CONTEXT_MENU","TRIGGER_CLICK","TRIGGER_FOCUS","TRIGGER_POINTERMOVE","after","LONG_PRESS_DELAY","CONTEXT_MENU_CANCEL","opening","SUBMENU_OPEN_DELAY","BLUR","TRIGGER_POINTERLEAVE","closing","activities","SUBMENU_CLOSE_DELAY","MENU_POINTERENTER","POINTER_MOVED_AWAY_FROM_SUBMENU","closed","entry","TRIGGER_BLUR","ARROW_DOWN","ARROW_UP","ARROW_LEFT","HOME","END","ARROW_RIGHT","ENTER","ITEM_POINTERMOVE","ITEM_POINTERLEAVE","ITEM_CLICK","ITEM_POINTERDOWN","TYPEAHEAD","FOCUS_MENU","delays","evt","_ctx","isTriggerItemHighlighted","isHighlightedItemEditable","isWithinPolygon","isOpenControlled","isArrowLeftEvent","isArrowUpEvent","isArrowDownEvent","isOpenAutoFocusEvent","trackPositioning","defer","onComplete","data","trackInteractOutside","_evt","exclude","onInteractOutside","onFocusOutside","onEscapeKeyDown","closeRootMenu","onPointerDownOutside","detail","focusable","onDismiss","trackPointerMove","guards2","doc","getDoc","e","x","clientX","y","clientY","isMovingToSubmenu","scrollToHighlightedItem","getState","itemEl","contentEl2","rootEl","block","contentEl","attributes","callback","setAnchorPoint","setSubmenuPlacement","getAnchorRect","width","height","listeners","setOptionState","clickHighlightedItem","queueMicrotask","click","setIntentPolygon","menu","rect","getBoundingClientRect","polygon","rightSide","bleed","clearIntentPolygon","resumePointer","setHighlightedItem","set","clearHighlightedItem","focusMenu","initialFocusEl","root","enabled","getActiveElement","filter","node","focus","preventScroll","highlightFirstItem","first2","highlightLastItem","last2","highlightNextItem","next","highlightPrevItem","prev","invokeOnSelect","onSelect","focusTrigger","highlightMatchedItem","setParentMenu","setChildMenu","openSubmenu","focusParentMenu","setLastHighlightedItem","restoreHighlightedItem","restoreParentHiglightedItem","invokeOnOpen","onOpenChange","invokeOnClose","toggleVisibility","onHighlightChange","createProps","createSplitProps","props","splitProps","itemProps","splitItemProps","itemGroupLabelProps","splitItemGroupLabelProps","itemGroupProps","splitItemGroupProps","optionItemProps","splitOptionItemProps"],"sources":["C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\menu\\src\\menu.anatomy.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\menu\\src\\menu.connect.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\menu\\src\\menu.dom.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\menu\\src\\menu.machine.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\menu\\src\\menu.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"menu\").parts(\n  \"arrow\",\n  \"arrowTip\",\n  \"content\",\n  \"contextTrigger\",\n  \"indicator\",\n  \"item\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"itemIndicator\",\n  \"itemText\",\n  \"positioner\",\n  \"separator\",\n  \"trigger\",\n  \"triggerItem\",\n)\nexport const parts = anatomy.build()\n","import { mergeProps } from \"@zag-js/core\"\nimport {\n  clickIfLink,\n  getEventKey,\n  getEventPoint,\n  isContextMenuEvent,\n  isModifierKey,\n  isPrintableKey,\n  type EventKeyMap,\n} from \"@zag-js/dom-event\"\nimport {\n  dataAttr,\n  getEventTarget,\n  isDownloadingEvent,\n  isEditableElement,\n  isOpeningInNewTab,\n  isSelfTarget,\n  isValidTabEvent,\n} from \"@zag-js/dom-query\"\nimport { getPlacementStyles } from \"@zag-js/popper\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./menu.anatomy\"\nimport { dom } from \"./menu.dom\"\nimport type { ItemProps, ItemState, MachineApi, OptionItemProps, OptionItemState, Send, State } from \"./menu.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const isSubmenu = state.context.isSubmenu\n  const isTypingAhead = state.context.isTypingAhead\n  const composite = state.context.composite\n\n  const open = state.hasTag(\"open\")\n\n  const popperStyles = getPlacementStyles({\n    ...state.context.positioning,\n    placement: state.context.anchorPoint ? \"bottom\" : state.context.currentPlacement,\n  })\n\n  function getItemState(props: ItemProps): ItemState {\n    return {\n      disabled: !!props.disabled,\n      highlighted: state.context.highlightedValue === props.value,\n    }\n  }\n\n  function getOptionItemProps(props: OptionItemProps) {\n    const valueText = props.valueText ?? props.value\n    return { ...props, id: props.value, valueText }\n  }\n\n  function getOptionItemState(props: OptionItemProps): OptionItemState {\n    const itemState = getItemState(getOptionItemProps(props))\n    return {\n      ...itemState,\n      checked: !!props.checked,\n    }\n  }\n\n  function getItemProps(props: ItemProps) {\n    const { value: id, closeOnSelect, valueText } = props\n    const itemState = getItemState(props)\n    return normalize.element({\n      ...parts.item.attrs,\n      id,\n      role: \"menuitem\",\n      \"aria-disabled\": itemState.disabled,\n      \"data-disabled\": dataAttr(itemState.disabled),\n      \"data-ownedby\": dom.getContentId(state.context),\n      \"data-highlighted\": dataAttr(itemState.highlighted),\n      \"data-valuetext\": valueText,\n      onDragStart(event) {\n        const isLink = event.currentTarget.matches(\"a[href]\")\n        if (isLink) event.preventDefault()\n      },\n      onPointerMove(event) {\n        if (itemState.disabled) return\n        if (event.pointerType !== \"mouse\") return\n        const target = event.currentTarget\n        if (itemState.highlighted) return\n        send({ type: \"ITEM_POINTERMOVE\", id, target, closeOnSelect })\n      },\n      onPointerLeave(event) {\n        if (itemState.disabled) return\n        if (event.pointerType !== \"mouse\") return\n\n        const pointerMoved = state.previousEvent.type.includes(\"POINTER\")\n        if (!pointerMoved) return\n\n        const target = event.currentTarget\n        send({ type: \"ITEM_POINTERLEAVE\", id, target, closeOnSelect })\n      },\n      onPointerDown(event) {\n        if (itemState.disabled) return\n        const target = event.currentTarget\n        send({ type: \"ITEM_POINTERDOWN\", target, id, closeOnSelect })\n      },\n      onClick(event) {\n        if (isDownloadingEvent(event)) return\n        if (isOpeningInNewTab(event)) return\n        if (itemState.disabled) return\n\n        const target = event.currentTarget\n        send({ type: \"ITEM_CLICK\", target, id, closeOnSelect })\n      },\n    })\n  }\n\n  return {\n    highlightedValue: state.context.highlightedValue,\n    open: open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return\n      send(nextOpen ? \"OPEN\" : \"CLOSE\")\n    },\n    setHighlightedValue(value) {\n      send({ type: \"HIGHLIGHTED.SET\", id: value })\n    },\n    setParent(parent) {\n      send({ type: \"PARENT.SET\", value: parent, id: parent.state.context.id })\n    },\n    setChild(child) {\n      send({ type: \"CHILD.SET\", value: child, id: child.state.context.id })\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options })\n    },\n\n    getContextTriggerProps() {\n      return normalize.element({\n        ...parts.contextTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getContextTriggerId(state.context),\n        onPointerDown(event) {\n          if (event.pointerType === \"mouse\") return\n          const point = getEventPoint(event)\n          send({ type: \"CONTEXT_MENU_START\", point })\n        },\n        onPointerCancel(event) {\n          if (event.pointerType === \"mouse\") return\n          send(\"CONTEXT_MENU_CANCEL\")\n        },\n        onPointerMove(event) {\n          if (event.pointerType === \"mouse\") return\n          send(\"CONTEXT_MENU_CANCEL\")\n        },\n        onPointerUp(event) {\n          if (event.pointerType === \"mouse\") return\n          send(\"CONTEXT_MENU_CANCEL\")\n        },\n        onContextMenu(event) {\n          const point = getEventPoint(event)\n          send({ type: \"CONTEXT_MENU\", point })\n          event.preventDefault()\n        },\n        style: {\n          WebkitTouchCallout: \"none\",\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\",\n        },\n      })\n    },\n\n    getTriggerItemProps(childApi) {\n      return mergeProps(\n        getItemProps({ value: childApi.getTriggerProps().id }),\n        childApi.getTriggerProps(),\n      ) as T[\"element\"]\n    },\n\n    getTriggerProps() {\n      return normalize.button({\n        ...(isSubmenu ? parts.triggerItem.attrs : parts.trigger.attrs),\n        \"data-placement\": state.context.currentPlacement,\n        type: \"button\",\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        \"data-uid\": state.context.id,\n        \"aria-haspopup\": composite ? \"menu\" : \"dialog\",\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-expanded\": open || undefined,\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerMove(event) {\n          if (event.pointerType !== \"mouse\") return\n          const disabled = dom.isTargetDisabled(event.currentTarget)\n          if (disabled || !isSubmenu) return\n          send({ type: \"TRIGGER_POINTERMOVE\", target: event.currentTarget })\n        },\n        onPointerLeave(event) {\n          if (dom.isTargetDisabled(event.currentTarget)) return\n          if (event.pointerType !== \"mouse\") return\n          if (!isSubmenu) return\n          const point = getEventPoint(event)\n          send({ type: \"TRIGGER_POINTERLEAVE\", target: event.currentTarget, point })\n        },\n        onPointerDown(event) {\n          if (dom.isTargetDisabled(event.currentTarget)) return\n          if (isContextMenuEvent(event)) return\n          event.preventDefault()\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return\n          if (dom.isTargetDisabled(event.currentTarget)) return\n          send({ type: \"TRIGGER_CLICK\", target: event.currentTarget })\n        },\n        onBlur() {\n          send(\"TRIGGER_BLUR\")\n        },\n        onFocus() {\n          send(\"TRIGGER_FOCUS\")\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return\n          const keyMap: EventKeyMap = {\n            ArrowDown() {\n              send(\"ARROW_DOWN\")\n            },\n            ArrowUp() {\n              send(\"ARROW_UP\")\n            },\n            Enter() {\n              send({ type: \"ARROW_DOWN\", src: \"enter\" })\n            },\n            Space() {\n              send({ type: \"ARROW_DOWN\", src: \"space\" })\n            },\n          }\n\n          const key = getEventKey(event, state.context)\n          const exec = keyMap[key]\n\n          if (exec) {\n            event.preventDefault()\n            exec(event)\n          }\n        },\n      })\n    },\n\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-state\": open ? \"open\" : \"closed\",\n      })\n    },\n\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: popperStyles.floating,\n      })\n    },\n\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow,\n      })\n    },\n\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip,\n      })\n    },\n\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: dom.getContentId(state.context),\n        \"aria-label\": state.context[\"aria-label\"],\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: composite ? \"menu\" : \"dialog\",\n        tabIndex: 0,\n        dir: state.context.dir,\n        \"aria-activedescendant\": state.context.highlightedValue ?? undefined,\n        \"aria-labelledby\": dom.getTriggerId(state.context),\n        \"data-placement\": state.context.currentPlacement,\n        onPointerEnter(event) {\n          if (event.pointerType !== \"mouse\") return\n          send(\"MENU_POINTERENTER\")\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return\n          if (!isSelfTarget(event)) return\n\n          const target = getEventTarget<Element>(event)\n\n          const sameMenu = target?.closest(\"[role=menu]\") === event.currentTarget || target === event.currentTarget\n          if (!sameMenu) return\n\n          if (event.key === \"Tab\") {\n            const valid = isValidTabEvent(event)\n            if (!valid) {\n              event.preventDefault()\n              return\n            }\n          }\n\n          const item = dom.getHighlightedItemEl(state.context)\n          const keyMap: EventKeyMap = {\n            ArrowDown() {\n              send(\"ARROW_DOWN\")\n            },\n            ArrowUp() {\n              send(\"ARROW_UP\")\n            },\n            ArrowLeft() {\n              send(\"ARROW_LEFT\")\n            },\n            ArrowRight() {\n              send(\"ARROW_RIGHT\")\n            },\n            Enter() {\n              send(\"ENTER\")\n              clickIfLink(item)\n            },\n            Space(event) {\n              if (isTypingAhead) {\n                send({ type: \"TYPEAHEAD\", key: event.key })\n              } else {\n                keyMap.Enter?.(event)\n              }\n            },\n            Home() {\n              send(\"HOME\")\n            },\n            End() {\n              send(\"END\")\n            },\n          }\n\n          const key = getEventKey(event, { dir: state.context.dir })\n          const exec = keyMap[key]\n\n          if (exec) {\n            exec(event)\n            event.stopPropagation()\n            event.preventDefault()\n            return\n          }\n\n          // typeahead\n          if (!state.context.typeahead) return\n          if (!isPrintableKey(event)) return\n          if (isModifierKey(event)) return\n          if (isEditableElement(target)) return\n\n          send({ type: \"TYPEAHEAD\", key: event.key })\n          event.preventDefault()\n        },\n      })\n    },\n\n    getSeparatorProps() {\n      return normalize.element({\n        ...parts.separator.attrs,\n        role: \"separator\",\n        dir: state.context.dir,\n        \"aria-orientation\": \"horizontal\",\n      })\n    },\n\n    getItemState,\n\n    getItemProps,\n\n    getOptionItemState,\n\n    getOptionItemProps(props) {\n      const { type, disabled, onCheckedChange, closeOnSelect } = props\n\n      const option = getOptionItemProps(props)\n      const itemState = getOptionItemState(props)\n\n      return {\n        ...getItemProps(option),\n        ...normalize.element({\n          \"data-type\": type,\n          ...parts.item.attrs,\n          dir: state.context.dir,\n          \"data-value\": option.value,\n          role: `menuitem${type}`,\n          \"aria-checked\": !!itemState.checked,\n          \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n          onClick(event) {\n            if (disabled) return\n            if (isDownloadingEvent(event)) return\n            if (isOpeningInNewTab(event)) return\n            const target = event.currentTarget\n            send({ type: \"ITEM_CLICK\", target, option, closeOnSelect })\n            onCheckedChange?.(!itemState.checked)\n          },\n        }),\n      }\n    },\n\n    getItemIndicatorProps(props) {\n      const itemState = getOptionItemState(props)\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(itemState.disabled),\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n        \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n        hidden: !itemState.checked,\n      })\n    },\n\n    getItemTextProps(props) {\n      const itemState = getOptionItemState(props)\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(itemState.disabled),\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n        \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n      })\n    },\n\n    getItemGroupLabelProps(props) {\n      return normalize.element({\n        id: dom.getGroupLabelId(state.context, props.htmlFor),\n        dir: state.context.dir,\n        ...parts.itemGroupLabel.attrs,\n      })\n    },\n\n    getItemGroupProps(props) {\n      return normalize.element({\n        id: dom.getGroupId(state.context, props.id),\n        ...parts.itemGroup.attrs,\n        dir: state.context.dir,\n        \"aria-labelledby\": dom.getGroupLabelId(state.context, props.id),\n        role: \"group\",\n      })\n    },\n  }\n}\n","import { isHTMLElement, nextById, prevById, queryAll, getByTypeahead, createScope } from \"@zag-js/dom-query\"\nimport { first, last } from \"@zag-js/utils\"\nimport type { MachineContext as Ctx } from \"./menu.types\"\n\nexport const dom = createScope({\n  getTriggerId: (ctx: Ctx) => ctx.ids?.trigger ?? `menu:${ctx.id}:trigger`,\n  getContextTriggerId: (ctx: Ctx) => ctx.ids?.contextTrigger ?? `menu:${ctx.id}:ctx-trigger`,\n  getContentId: (ctx: Ctx) => ctx.ids?.content ?? `menu:${ctx.id}:content`,\n  getArrowId: (ctx: Ctx) => ctx.ids?.arrow ?? `menu:${ctx.id}:arrow`,\n  getPositionerId: (ctx: Ctx) => ctx.ids?.positioner ?? `menu:${ctx.id}:popper`,\n  getGroupId: (ctx: Ctx, id: string) => ctx.ids?.group?.(id) ?? `menu:${ctx.id}:group:${id}`,\n  getGroupLabelId: (ctx: Ctx, id: string) => ctx.ids?.groupLabel?.(id) ?? `menu:${ctx.id}:group-label:${id}`,\n\n  getContentEl: (ctx: Ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx: Ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getTriggerEl: (ctx: Ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getHighlightedItemEl: (ctx: Ctx) => (ctx.highlightedValue ? dom.getById(ctx, ctx.highlightedValue) : null),\n  getArrowEl: (ctx: Ctx) => dom.getById(ctx, dom.getArrowId(ctx)),\n\n  getElements: (ctx: Ctx) => {\n    const ownerId = CSS.escape(dom.getContentId(ctx))\n    const selector = `[role^=\"menuitem\"][data-ownedby=${ownerId}]:not([data-disabled])`\n    return queryAll(dom.getContentEl(ctx), selector)\n  },\n  getFirstEl: (ctx: Ctx) => first(dom.getElements(ctx)),\n  getLastEl: (ctx: Ctx) => last(dom.getElements(ctx)),\n  getNextEl: (ctx: Ctx, loop?: boolean) => nextById(dom.getElements(ctx), ctx.highlightedValue!, loop ?? ctx.loopFocus),\n  getPrevEl: (ctx: Ctx, loop?: boolean) => prevById(dom.getElements(ctx), ctx.highlightedValue!, loop ?? ctx.loopFocus),\n\n  getElemByKey: (ctx: Ctx, key: string) =>\n    getByTypeahead(dom.getElements(ctx), { state: ctx.typeaheadState, key, activeId: ctx.highlightedValue }),\n\n  isTargetDisabled: (v: EventTarget | null) => {\n    return isHTMLElement(v) && (v.dataset.disabled === \"\" || v.hasAttribute(\"disabled\"))\n  },\n  isTriggerItem: (el: HTMLElement | null) => {\n    return !!el?.getAttribute(\"role\")?.startsWith(\"menuitem\") && !!el?.hasAttribute(\"aria-controls\")\n  },\n\n  getOptionFromItemEl(el: HTMLElement) {\n    return {\n      id: el.id,\n      name: el.dataset.name,\n      value: el.dataset.value,\n      valueText: el.dataset.valueText,\n      type: el.dataset.type,\n    }\n  },\n})\n","import { createMachine, guards, ref } from \"@zag-js/core\"\nimport { trackDismissableElement } from \"@zag-js/dismissable\"\nimport { addDomEvent } from \"@zag-js/dom-event\"\nimport {\n  contains,\n  getByTypeahead,\n  getInitialFocus,\n  isEditableElement,\n  observeAttributes,\n  raf,\n  scrollIntoView,\n} from \"@zag-js/dom-query\"\nimport { getPlacement, getPlacementSide } from \"@zag-js/popper\"\nimport { getElementPolygon, isPointInPolygon } from \"@zag-js/rect-utils\"\nimport { cast, compact, isEqual } from \"@zag-js/utils\"\nimport { dom } from \"./menu.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./menu.types\"\n\nconst { not, and, or } = guards\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"menu\",\n      initial: ctx.open ? \"open\" : \"idle\",\n      context: {\n        highlightedValue: null,\n        loopFocus: false,\n        anchorPoint: null,\n        closeOnSelect: true,\n        typeahead: true,\n        composite: true,\n        ...ctx,\n        positioning: {\n          placement: \"bottom-start\",\n          gutter: 8,\n          ...ctx.positioning,\n        },\n        intentPolygon: null,\n        parent: null,\n        lastHighlightedValue: null,\n        children: cast(ref({})),\n        suspendPointer: false,\n        restoreFocus: true,\n        typeaheadState: getByTypeahead.defaultOptions,\n      },\n\n      computed: {\n        isSubmenu: (ctx) => ctx.parent !== null,\n        isRtl: (ctx) => ctx.dir === \"rtl\",\n        isTypingAhead: (ctx) => ctx.typeaheadState.keysSoFar !== \"\",\n      },\n\n      watch: {\n        isSubmenu: \"setSubmenuPlacement\",\n        anchorPoint: \"reposition\",\n        open: \"toggleVisibility\",\n      },\n\n      on: {\n        \"PARENT.SET\": {\n          actions: \"setParentMenu\",\n        },\n        \"CHILD.SET\": {\n          actions: \"setChildMenu\",\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnOpen\",\n          },\n          {\n            target: \"open\",\n            actions: \"invokeOnOpen\",\n          },\n        ],\n        OPEN_AUTOFOCUS: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"],\n          },\n          {\n            internal: true,\n            target: \"open\",\n            actions: [\"highlightFirstItem\", \"invokeOnOpen\"],\n          },\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnClose\",\n          },\n          {\n            target: \"closed\",\n            actions: \"invokeOnClose\",\n          },\n        ],\n        \"HIGHLIGHTED.RESTORE\": {\n          actions: \"restoreHighlightedItem\",\n        },\n        \"HIGHLIGHTED.SET\": {\n          actions: \"setHighlightedItem\",\n        },\n      },\n\n      states: {\n        idle: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            CONTEXT_MENU_START: {\n              target: \"opening:contextmenu\",\n              actions: \"setAnchorPoint\",\n            },\n            CONTEXT_MENU: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"],\n              },\n            ],\n            TRIGGER_CLICK: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\",\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\",\n              },\n            ],\n            TRIGGER_FOCUS: {\n              guard: not(\"isSubmenu\"),\n              target: \"closed\",\n            },\n            TRIGGER_POINTERMOVE: {\n              guard: \"isSubmenu\",\n              target: \"opening\",\n            },\n          },\n        },\n\n        \"opening:contextmenu\": {\n          tags: [\"closed\"],\n          after: {\n            LONG_PRESS_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\",\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\",\n              },\n            ],\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            CONTEXT_MENU_CANCEL: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\",\n              },\n              {\n                target: \"closed\",\n                actions: \"invokeOnClose\",\n              },\n            ],\n          },\n        },\n\n        opening: {\n          tags: [\"closed\"],\n          after: {\n            SUBMENU_OPEN_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\",\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\",\n              },\n            ],\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            BLUR: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\",\n              },\n              {\n                target: \"closed\",\n                actions: \"invokeOnClose\",\n              },\n            ],\n            TRIGGER_POINTERLEAVE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\",\n              },\n              {\n                target: \"closed\",\n                actions: \"invokeOnClose\",\n              },\n            ],\n          },\n        },\n\n        closing: {\n          tags: [\"open\"],\n          activities: [\"trackPointerMove\", \"trackInteractOutside\"],\n          after: {\n            SUBMENU_CLOSE_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"],\n              },\n              {\n                target: \"closed\",\n                actions: [\"focusParentMenu\", \"restoreParentHiglightedItem\", \"invokeOnClose\"],\n              },\n            ],\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": {\n              target: \"closed\",\n              actions: [\"focusParentMenu\", \"restoreParentHiglightedItem\"],\n            },\n            // don't invoke on open here since the menu is still open (we're only keeping it open)\n            MENU_POINTERENTER: {\n              target: \"open\",\n              actions: \"clearIntentPolygon\",\n            },\n            POINTER_MOVED_AWAY_FROM_SUBMENU: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\",\n              },\n              {\n                target: \"closed\",\n                actions: [\"focusParentMenu\", \"restoreParentHiglightedItem\"],\n              },\n            ],\n          },\n        },\n\n        closed: {\n          tags: [\"closed\"],\n          entry: [\"clearHighlightedItem\", \"focusTrigger\", \"resumePointer\"],\n          on: {\n            \"CONTROLLED.OPEN\": [\n              {\n                guard: or(\"isOpenAutoFocusEvent\", \"isArrowDownEvent\"),\n                target: \"open\",\n                actions: \"highlightFirstItem\",\n              },\n              {\n                guard: \"isArrowUpEvent\",\n                target: \"open\",\n                actions: \"highlightLastItem\",\n              },\n              {\n                target: \"open\",\n              },\n            ],\n            CONTEXT_MENU_START: {\n              target: \"opening:contextmenu\",\n              actions: \"setAnchorPoint\",\n            },\n            CONTEXT_MENU: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"],\n              },\n            ],\n            TRIGGER_CLICK: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\",\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\",\n              },\n            ],\n            TRIGGER_POINTERMOVE: {\n              guard: \"isTriggerItem\",\n              target: \"opening\",\n            },\n            TRIGGER_BLUR: \"idle\",\n            ARROW_DOWN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\",\n              },\n              {\n                target: \"open\",\n                actions: [\"highlightFirstItem\", \"invokeOnOpen\"],\n              },\n            ],\n            ARROW_UP: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\",\n              },\n              {\n                target: \"open\",\n                actions: [\"highlightLastItem\", \"invokeOnOpen\"],\n              },\n            ],\n          },\n        },\n\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackInteractOutside\", \"trackPositioning\", \"scrollToHighlightedItem\"],\n          entry: [\"focusMenu\", \"resumePointer\"],\n          on: {\n            \"CONTROLLED.CLOSE\": [\n              {\n                target: \"closed\",\n                guard: \"isArrowLeftEvent\",\n                actions: [\"focusParentMenu\"],\n              },\n              {\n                target: \"closed\",\n              },\n            ],\n            TRIGGER_CLICK: [\n              {\n                guard: and(not(\"isTriggerItem\"), \"isOpenControlled\"),\n                actions: \"invokeOnClose\",\n              },\n              {\n                guard: not(\"isTriggerItem\"),\n                target: \"closed\",\n                actions: \"invokeOnClose\",\n              },\n            ],\n            ARROW_UP: {\n              actions: [\"highlightPrevItem\", \"focusMenu\"],\n            },\n            ARROW_DOWN: {\n              actions: [\"highlightNextItem\", \"focusMenu\"],\n            },\n            ARROW_LEFT: [\n              {\n                guard: and(\"isSubmenu\", \"isOpenControlled\"),\n                actions: \"invokeOnClose\",\n              },\n              {\n                guard: \"isSubmenu\",\n                target: \"closed\",\n                actions: [\"focusParentMenu\", \"invokeOnClose\"],\n              },\n            ],\n            HOME: {\n              actions: [\"highlightFirstItem\", \"focusMenu\"],\n            },\n            END: {\n              actions: [\"highlightLastItem\", \"focusMenu\"],\n            },\n            ARROW_RIGHT: {\n              guard: \"isTriggerItemHighlighted\",\n              actions: \"openSubmenu\",\n            },\n            ENTER: [\n              {\n                guard: \"isTriggerItemHighlighted\",\n                actions: \"openSubmenu\",\n              },\n              {\n                actions: \"clickHighlightedItem\",\n              },\n            ],\n            ITEM_POINTERMOVE: [\n              {\n                guard: not(\"suspendPointer\"),\n                actions: [\"setHighlightedItem\", \"focusMenu\"],\n              },\n              {\n                actions: \"setLastHighlightedItem\",\n              },\n            ],\n            ITEM_POINTERLEAVE: {\n              guard: and(not(\"suspendPointer\"), not(\"isTriggerItem\")),\n              actions: \"clearHighlightedItem\",\n            },\n            ITEM_CLICK: [\n              // == grouped ==\n              {\n                guard: and(\n                  not(\"isTriggerItemHighlighted\"),\n                  not(\"isHighlightedItemEditable\"),\n                  \"closeOnSelect\",\n                  \"isOpenControlled\",\n                ),\n                actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"],\n              },\n              {\n                guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\"), \"closeOnSelect\"),\n                target: \"closed\",\n                actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"],\n              },\n              //\n              {\n                guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\")),\n                actions: [\"invokeOnSelect\", \"setOptionState\"],\n              },\n              { actions: \"setHighlightedItem\" },\n            ],\n            TRIGGER_POINTERLEAVE: {\n              target: \"closing\",\n              actions: \"setIntentPolygon\",\n            },\n            ITEM_POINTERDOWN: {\n              actions: \"setHighlightedItem\",\n            },\n            TYPEAHEAD: {\n              actions: \"highlightMatchedItem\",\n            },\n            FOCUS_MENU: {\n              actions: \"focusMenu\",\n            },\n            \"POSITIONING.SET\": {\n              actions: \"reposition\",\n            },\n          },\n        },\n      },\n    },\n    {\n      delays: {\n        LONG_PRESS_DELAY: 700,\n        SUBMENU_OPEN_DELAY: 100,\n        SUBMENU_CLOSE_DELAY: 100,\n      },\n\n      guards: {\n        closeOnSelect: (ctx, evt) => !!(evt?.closeOnSelect ?? ctx.closeOnSelect),\n        // whether the trigger is also a menu item\n        isTriggerItem: (_ctx, evt) => dom.isTriggerItem(evt.target),\n        // whether the trigger item is the active item\n        isTriggerItemHighlighted: (ctx, evt) => {\n          const target = (evt.target ?? dom.getHighlightedItemEl(ctx)) as HTMLElement | null\n          return !!target?.hasAttribute(\"aria-controls\")\n        },\n        isSubmenu: (ctx) => ctx.isSubmenu,\n        suspendPointer: (ctx) => ctx.suspendPointer,\n        isHighlightedItemEditable: (ctx) => isEditableElement(dom.getHighlightedItemEl(ctx)),\n        isWithinPolygon: (ctx, evt) => {\n          if (!ctx.intentPolygon) return false\n          return isPointInPolygon(ctx.intentPolygon, evt.point)\n        },\n        // guard assertions (for controlled mode)\n        isOpenControlled: (ctx) => !!ctx[\"open.controlled\"],\n        isArrowLeftEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_LEFT\",\n        isArrowUpEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_UP\",\n        isArrowDownEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_DOWN\",\n        isOpenAutoFocusEvent: (_ctx, evt) => evt.previousEvent?.type === \"OPEN_AUTOFOCUS\",\n      },\n\n      activities: {\n        trackPositioning(ctx) {\n          if (ctx.anchorPoint) return\n          ctx.currentPlacement = ctx.positioning.placement\n          const getPositionerEl = () => dom.getPositionerEl(ctx)\n          return getPlacement(dom.getTriggerEl(ctx), getPositionerEl, {\n            ...ctx.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx.currentPlacement = data.placement\n            },\n          })\n        },\n        trackInteractOutside(ctx, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx)\n          return trackDismissableElement(getContentEl, {\n            defer: true,\n            exclude: [dom.getTriggerEl(ctx)],\n            onInteractOutside: ctx.onInteractOutside,\n            onFocusOutside: ctx.onFocusOutside,\n            onEscapeKeyDown(event) {\n              ctx.onEscapeKeyDown?.(event)\n              if (ctx.isSubmenu) event.preventDefault()\n              closeRootMenu(ctx)\n            },\n            onPointerDownOutside(event) {\n              ctx.restoreFocus = !event.detail.focusable\n              ctx.onPointerDownOutside?.(event)\n            },\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\" })\n            },\n          })\n        },\n        trackPointerMove(ctx, _evt, { guards, send }) {\n          const { isWithinPolygon } = guards\n\n          // NOTE: we're mutating parent context here. sending events to parent doesn't work\n          ctx.parent!.state.context.suspendPointer = true\n\n          const doc = dom.getDoc(ctx)\n\n          return addDomEvent(doc, \"pointermove\", (e) => {\n            const point = { x: e.clientX, y: e.clientY }\n\n            const isMovingToSubmenu = isWithinPolygon(ctx, { point })\n\n            if (!isMovingToSubmenu) {\n              send(\"POINTER_MOVED_AWAY_FROM_SUBMENU\")\n              // NOTE: we're mutating parent context here. sending events to parent doesn't work\n              ctx.parent!.state.context.suspendPointer = false\n            }\n          })\n        },\n        scrollToHighlightedItem(ctx, _evt, { getState }) {\n          const exec = () => {\n            const state = getState()\n\n            if (state.event.type.startsWith(\"ITEM_POINTER\")) return\n\n            const itemEl = dom.getHighlightedItemEl(ctx)\n            const contentEl = dom.getContentEl(ctx)\n\n            scrollIntoView(itemEl, { rootEl: contentEl, block: \"nearest\" })\n          }\n          raf(() => exec())\n\n          const contentEl = () => dom.getContentEl(ctx)\n          return observeAttributes(contentEl, {\n            defer: true,\n            attributes: [\"aria-activedescendant\"],\n            callback: exec,\n          })\n        },\n      },\n\n      actions: {\n        setAnchorPoint(ctx, evt) {\n          ctx.anchorPoint = evt.point\n        },\n        setSubmenuPlacement(ctx) {\n          if (!ctx.isSubmenu) return\n          ctx.positioning.placement = ctx.isRtl ? \"left-start\" : \"right-start\"\n          ctx.positioning.gutter = 0\n        },\n        reposition(ctx, evt) {\n          const getPositionerEl = () => dom.getPositionerEl(ctx)\n          const getAnchorRect = ctx.anchorPoint ? () => ({ width: 0, height: 0, ...ctx.anchorPoint }) : undefined\n          getPlacement(dom.getTriggerEl(ctx), getPositionerEl, {\n            ...ctx.positioning,\n            defer: true,\n            getAnchorRect,\n            ...(evt.options ?? {}),\n            listeners: false,\n            onComplete(data) {\n              ctx.currentPlacement = data.placement\n            },\n          })\n        },\n        setOptionState(_ctx, evt) {\n          if (!evt.option) return\n          const { checked, onCheckedChange, type } = evt.option\n\n          if (type === \"radio\") {\n            onCheckedChange?.(true)\n          } else if (type === \"checkbox\") {\n            onCheckedChange?.(!checked)\n          }\n        },\n        clickHighlightedItem(ctx, _evt) {\n          const itemEl = dom.getHighlightedItemEl(ctx)\n          if (!itemEl || itemEl.dataset.disabled) return\n          queueMicrotask(() => itemEl.click())\n        },\n        setIntentPolygon(ctx, evt) {\n          const menu = dom.getContentEl(ctx)\n          const placement = ctx.currentPlacement\n\n          if (!menu || !placement) return\n\n          const rect = menu.getBoundingClientRect()\n          const polygon = getElementPolygon(rect, placement)\n          if (!polygon) return\n\n          const rightSide = getPlacementSide(placement) === \"right\"\n          const bleed = rightSide ? -5 : +5\n\n          ctx.intentPolygon = [{ ...evt.point, x: evt.point.x + bleed }, ...polygon]\n        },\n        clearIntentPolygon(ctx) {\n          ctx.intentPolygon = null\n        },\n        resumePointer(ctx) {\n          if (!ctx.parent) return\n          ctx.parent.state.context.suspendPointer = false\n        },\n        setHighlightedItem(ctx, evt) {\n          set.highlighted(ctx, evt.id)\n        },\n        clearHighlightedItem(ctx) {\n          set.highlighted(ctx, null)\n        },\n        focusMenu(ctx) {\n          raf(() => {\n            const contentEl = dom.getContentEl(ctx)\n            const initialFocusEl = getInitialFocus({\n              root: contentEl,\n              enabled: !contains(contentEl, dom.getActiveElement(ctx)),\n              filter(node) {\n                return !node.role?.startsWith(\"menuitem\")\n              },\n            })\n            initialFocusEl?.focus({ preventScroll: true })\n          })\n        },\n        highlightFirstItem(ctx) {\n          const first = dom.getFirstEl(ctx)\n          if (!first) return\n          set.highlighted(ctx, first.id)\n        },\n        highlightLastItem(ctx) {\n          const last = dom.getLastEl(ctx)\n          if (!last) return\n          set.highlighted(ctx, last.id)\n        },\n        highlightNextItem(ctx, evt) {\n          const next = dom.getNextEl(ctx, evt.loop)\n          set.highlighted(ctx, next?.id ?? null)\n        },\n        highlightPrevItem(ctx, evt) {\n          const prev = dom.getPrevEl(ctx, evt.loop)\n          set.highlighted(ctx, prev?.id ?? null)\n        },\n        invokeOnSelect(ctx) {\n          if (!ctx.highlightedValue) return\n          ctx.onSelect?.({ value: ctx.highlightedValue })\n        },\n        focusTrigger(ctx) {\n          if (ctx.isSubmenu || ctx.anchorPoint || !ctx.restoreFocus) return\n          queueMicrotask(() => dom.getTriggerEl(ctx)?.focus({ preventScroll: true }))\n        },\n        highlightMatchedItem(ctx, evt) {\n          const node = dom.getElemByKey(ctx, evt.key)\n          if (!node) return\n          set.highlighted(ctx, node.id)\n        },\n        setParentMenu(ctx, evt) {\n          ctx.parent = ref(evt.value)\n        },\n        setChildMenu(ctx, evt) {\n          ctx.children[evt.id] = ref(evt.value)\n        },\n        closeRootMenu(ctx) {\n          closeRootMenu(ctx)\n        },\n        openSubmenu(ctx) {\n          const item = dom.getHighlightedItemEl(ctx)\n          const id = item?.getAttribute(\"data-uid\")\n          const child = id ? ctx.children[id] : null\n          child?.send(\"OPEN_AUTOFOCUS\")\n        },\n        focusParentMenu(ctx) {\n          ctx.parent?.send(\"FOCUS_MENU\")\n        },\n        setLastHighlightedItem(ctx, evt) {\n          ctx.lastHighlightedValue = evt.id\n        },\n        restoreHighlightedItem(ctx) {\n          if (!ctx.lastHighlightedValue) return\n          set.highlighted(ctx, ctx.lastHighlightedValue)\n          ctx.lastHighlightedValue = null\n        },\n        restoreParentHiglightedItem(ctx) {\n          ctx.parent?.send(\"HIGHLIGHTED.RESTORE\")\n        },\n        invokeOnOpen(ctx) {\n          ctx.onOpenChange?.({ open: true })\n        },\n        invokeOnClose(ctx) {\n          ctx.onOpenChange?.({ open: false })\n        },\n        toggleVisibility(ctx, evt, { send }) {\n          send({ type: ctx.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt })\n        },\n      },\n    },\n  )\n}\n\nfunction closeRootMenu(ctx: MachineContext) {\n  let parent = ctx.parent\n  while (parent && parent.state.context.isSubmenu) {\n    parent = parent.state.context.parent\n  }\n  parent?.send(\"CLOSE\")\n}\n\nconst set = {\n  highlighted(ctx: MachineContext, value: string | null) {\n    if (isEqual(ctx.highlightedValue, value)) return\n    ctx.highlightedValue = value\n    ctx.onHighlightChange?.({ highlightedValue: value })\n  },\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { ItemGroupLabelProps, ItemGroupProps, ItemProps, OptionItemProps, UserDefinedContext } from \"./menu.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"anchorPoint\",\n  \"aria-label\",\n  \"closeOnSelect\",\n  \"dir\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"loopFocus\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onEscapeKeyDown\",\n  \"onSelect\",\n  \"onHighlightChange\",\n  \"open\",\n  \"open.controlled\",\n  \"positioning\",\n  \"typeahead\",\n  \"composite\",\n])\n\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n\nexport const itemProps = createProps<ItemProps>()([\"closeOnSelect\", \"disabled\", \"value\", \"valueText\"])\nexport const splitItemProps = createSplitProps<ItemProps>(itemProps)\n\nexport const itemGroupLabelProps = createProps<ItemGroupLabelProps>()([\"htmlFor\"])\nexport const splitItemGroupLabelProps = createSplitProps<ItemGroupLabelProps>(itemGroupLabelProps)\n\nexport const itemGroupProps = createProps<ItemGroupProps>()([\"id\"])\nexport const splitItemGroupProps = createSplitProps<ItemGroupProps>(itemGroupProps)\n\nexport const optionItemProps = createProps<OptionItemProps>()([\n  \"disabled\",\n  \"valueText\",\n  \"closeOnSelect\",\n  \"type\",\n  \"value\",\n  \"checked\",\n  \"onCheckedChange\",\n])\n\nexport const splitOptionItemProps = createSplitProps<OptionItemProps>(optionItemProps)\n"],"mappings":";AAAA,SAASA,aAAA,QAAqB;AAEvB,IAAMC,OAAA,GAAUD,aAAA,CAAc,MAAM,EAAEE,KAAA,CAC3C,SACA,YACA,WACA,kBACA,aACA,QACA,aACA,kBACA,iBACA,YACA,cACA,aACA,WACA,aACF;AACO,IAAMA,KAAA,GAAQD,OAAA,CAAQE,KAAA,CAAM;;;AClBnC,SAASC,UAAA,QAAkB;AAC3B,SACEC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,kBAAA,EACAC,aAAA,EACAC,cAAA,QAEK;AACP,SACEC,QAAA,EACAC,cAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,iBAAA,EACAC,YAAA,EACAC,eAAA,QACK;AACP,SAASC,kBAAA,QAA0B;;;ACnBnC,SAASC,aAAA,EAAeC,QAAA,EAAUC,QAAA,EAAUC,QAAA,EAAUC,cAAA,EAAgBC,WAAA,QAAmB;AACzF,SAASC,KAAA,EAAOC,IAAA,QAAY;AAGrB,IAAMC,GAAA,GAAMH,WAAA,CAAY;EAC7BI,YAAA,EAAeC,GAAA,IAAaA,GAAA,CAAIC,GAAA,EAAKC,OAAA,IAAW,QAAQF,GAAA,CAAIG,EAAE;EAC9DC,mBAAA,EAAsBJ,GAAA,IAAaA,GAAA,CAAIC,GAAA,EAAKI,cAAA,IAAkB,QAAQL,GAAA,CAAIG,EAAE;EAC5EG,YAAA,EAAeN,GAAA,IAAaA,GAAA,CAAIC,GAAA,EAAKM,OAAA,IAAW,QAAQP,GAAA,CAAIG,EAAE;EAC9DK,UAAA,EAAaR,GAAA,IAAaA,GAAA,CAAIC,GAAA,EAAKQ,KAAA,IAAS,QAAQT,GAAA,CAAIG,EAAE;EAC1DO,eAAA,EAAkBV,GAAA,IAAaA,GAAA,CAAIC,GAAA,EAAKU,UAAA,IAAc,QAAQX,GAAA,CAAIG,EAAE;EACpES,UAAA,EAAYA,CAACZ,GAAA,EAAUG,EAAA,KAAeH,GAAA,CAAIC,GAAA,EAAKY,KAAA,GAAQV,EAAE,KAAK,QAAQH,GAAA,CAAIG,EAAE,UAAUA,EAAE;EACxFW,eAAA,EAAiBA,CAACd,GAAA,EAAUG,EAAA,KAAeH,GAAA,CAAIC,GAAA,EAAKc,UAAA,GAAaZ,EAAE,KAAK,QAAQH,GAAA,CAAIG,EAAE,gBAAgBA,EAAE;EAExGa,YAAA,EAAehB,GAAA,IAAaF,GAAA,CAAImB,OAAA,CAAQjB,GAAA,EAAKF,GAAA,CAAIQ,YAAA,CAAaN,GAAG,CAAC;EAClEkB,eAAA,EAAkBlB,GAAA,IAAaF,GAAA,CAAImB,OAAA,CAAQjB,GAAA,EAAKF,GAAA,CAAIY,eAAA,CAAgBV,GAAG,CAAC;EACxEmB,YAAA,EAAenB,GAAA,IAAaF,GAAA,CAAImB,OAAA,CAAQjB,GAAA,EAAKF,GAAA,CAAIC,YAAA,CAAaC,GAAG,CAAC;EAClEoB,oBAAA,EAAuBpB,GAAA,IAAcA,GAAA,CAAIqB,gBAAA,GAAmBvB,GAAA,CAAImB,OAAA,CAAQjB,GAAA,EAAKA,GAAA,CAAIqB,gBAAgB,IAAI;EACrGC,UAAA,EAAatB,GAAA,IAAaF,GAAA,CAAImB,OAAA,CAAQjB,GAAA,EAAKF,GAAA,CAAIU,UAAA,CAAWR,GAAG,CAAC;EAE9DuB,WAAA,EAAcvB,GAAA,IAAa;IACzB,MAAMwB,OAAA,GAAUC,GAAA,CAAIC,MAAA,CAAO5B,GAAA,CAAIQ,YAAA,CAAaN,GAAG,CAAC;IAChD,MAAM2B,QAAA,GAAW,mCAAmCH,OAAO;IAC3D,OAAO/B,QAAA,CAASK,GAAA,CAAIkB,YAAA,CAAahB,GAAG,GAAG2B,QAAQ;EACjD;EACAC,UAAA,EAAa5B,GAAA,IAAaJ,KAAA,CAAME,GAAA,CAAIyB,WAAA,CAAYvB,GAAG,CAAC;EACpD6B,SAAA,EAAY7B,GAAA,IAAaH,IAAA,CAAKC,GAAA,CAAIyB,WAAA,CAAYvB,GAAG,CAAC;EAClD8B,SAAA,EAAWA,CAAC9B,GAAA,EAAU+B,IAAA,KAAmBxC,QAAA,CAASO,GAAA,CAAIyB,WAAA,CAAYvB,GAAG,GAAGA,GAAA,CAAIqB,gBAAA,EAAmBU,IAAA,IAAQ/B,GAAA,CAAIgC,SAAS;EACpHC,SAAA,EAAWA,CAACjC,GAAA,EAAU+B,IAAA,KAAmBvC,QAAA,CAASM,GAAA,CAAIyB,WAAA,CAAYvB,GAAG,GAAGA,GAAA,CAAIqB,gBAAA,EAAmBU,IAAA,IAAQ/B,GAAA,CAAIgC,SAAS;EAEpHE,YAAA,EAAcA,CAAClC,GAAA,EAAUmC,GAAA,KACvBzC,cAAA,CAAeI,GAAA,CAAIyB,WAAA,CAAYvB,GAAG,GAAG;IAAEoC,KAAA,EAAOpC,GAAA,CAAIqC,cAAA;IAAgBF,GAAA;IAAKG,QAAA,EAAUtC,GAAA,CAAIqB;EAAiB,CAAC;EAEzGkB,gBAAA,EAAmBC,CAAA,IAA0B;IAC3C,OAAOlD,aAAA,CAAckD,CAAC,MAAMA,CAAA,CAAEC,OAAA,CAAQC,QAAA,KAAa,MAAMF,CAAA,CAAEG,YAAA,CAAa,UAAU;EACpF;EACAC,aAAA,EAAgBC,EAAA,IAA2B;IACzC,OAAO,CAAC,CAACA,EAAA,EAAIC,YAAA,CAAa,MAAM,GAAGC,UAAA,CAAW,UAAU,KAAK,CAAC,CAACF,EAAA,EAAIF,YAAA,CAAa,eAAe;EACjG;EAEAK,oBAAoBH,EAAA,EAAiB;IACnC,OAAO;MACL1C,EAAA,EAAI0C,EAAA,CAAG1C,EAAA;MACP8C,IAAA,EAAMJ,EAAA,CAAGJ,OAAA,CAAQQ,IAAA;MACjBC,KAAA,EAAOL,EAAA,CAAGJ,OAAA,CAAQS,KAAA;MAClBC,SAAA,EAAWN,EAAA,CAAGJ,OAAA,CAAQU,SAAA;MACtBC,IAAA,EAAMP,EAAA,CAAGJ,OAAA,CAAQW;IACnB;EACF;AACF,CAAC;;;ADvBM,SAASC,QAA6BjB,KAAA,EAAckB,IAAA,EAAYC,SAAA,EAA6C;EAClH,MAAMC,SAAA,GAAYpB,KAAA,CAAMqB,OAAA,CAAQD,SAAA;EAChC,MAAME,aAAA,GAAgBtB,KAAA,CAAMqB,OAAA,CAAQC,aAAA;EACpC,MAAMC,SAAA,GAAYvB,KAAA,CAAMqB,OAAA,CAAQE,SAAA;EAEhC,MAAMC,IAAA,GAAOxB,KAAA,CAAMyB,MAAA,CAAO,MAAM;EAEhC,MAAMC,YAAA,GAAezE,kBAAA,CAAmB;IACtC,GAAG+C,KAAA,CAAMqB,OAAA,CAAQM,WAAA;IACjBC,SAAA,EAAW5B,KAAA,CAAMqB,OAAA,CAAQQ,WAAA,GAAc,WAAW7B,KAAA,CAAMqB,OAAA,CAAQS;EAClE,CAAC;EAED,SAASC,aAAaC,MAAA,EAA6B;IACjD,OAAO;MACL1B,QAAA,EAAU,CAAC,CAAC0B,MAAA,CAAM1B,QAAA;MAClB2B,WAAA,EAAajC,KAAA,CAAMqB,OAAA,CAAQpC,gBAAA,KAAqB+C,MAAA,CAAMlB;IACxD;EACF;EAEA,SAASoB,mBAAmBF,MAAA,EAAwB;IAClD,MAAMjB,SAAA,GAAYiB,MAAA,CAAMjB,SAAA,IAAaiB,MAAA,CAAMlB,KAAA;IAC3C,OAAO;MAAE,GAAGkB,MAAA;MAAOjE,EAAA,EAAIiE,MAAA,CAAMlB,KAAA;MAAOC;IAAU;EAChD;EAEA,SAASoB,mBAAmBH,MAAA,EAAyC;IACnE,MAAMI,SAAA,GAAYL,YAAA,CAAaG,kBAAA,CAAmBF,MAAK,CAAC;IACxD,OAAO;MACL,GAAGI,SAAA;MACHC,OAAA,EAAS,CAAC,CAACL,MAAA,CAAMK;IACnB;EACF;EAEA,SAASC,aAAaN,MAAA,EAAkB;IACtC,MAAM;MAAElB,KAAA,EAAO/C,EAAA;MAAIwE,aAAA;MAAexB;IAAU,IAAIiB,MAAA;IAChD,MAAMI,SAAA,GAAYL,YAAA,CAAaC,MAAK;IACpC,OAAOb,SAAA,CAAUqB,OAAA,CAAQ;MACvB,GAAGvG,KAAA,CAAMwG,IAAA,CAAKC,KAAA;MACd3E,EAAA;MACA4E,IAAA,EAAM;MACN,iBAAiBP,SAAA,CAAU9B,QAAA;MAC3B,iBAAiB5D,QAAA,CAAS0F,SAAA,CAAU9B,QAAQ;MAC5C,gBAAgB5C,GAAA,CAAIQ,YAAA,CAAa8B,KAAA,CAAMqB,OAAO;MAC9C,oBAAoB3E,QAAA,CAAS0F,SAAA,CAAUH,WAAW;MAClD,kBAAkBlB,SAAA;MAClB6B,YAAYC,KAAA,EAAO;QACjB,MAAMC,MAAA,GAASD,KAAA,CAAME,aAAA,CAAcC,OAAA,CAAQ,SAAS;QACpD,IAAIF,MAAA,EAAQD,KAAA,CAAMI,cAAA,CAAe;MACnC;MACAC,cAAcL,KAAA,EAAO;QACnB,IAAIT,SAAA,CAAU9B,QAAA,EAAU;QACxB,IAAIuC,KAAA,CAAMM,WAAA,KAAgB,SAAS;QACnC,MAAMC,MAAA,GAASP,KAAA,CAAME,aAAA;QACrB,IAAIX,SAAA,CAAUH,WAAA,EAAa;QAC3Bf,IAAA,CAAK;UAAEF,IAAA,EAAM;UAAoBjD,EAAA;UAAIqF,MAAA;UAAQb;QAAc,CAAC;MAC9D;MACAc,eAAeR,KAAA,EAAO;QACpB,IAAIT,SAAA,CAAU9B,QAAA,EAAU;QACxB,IAAIuC,KAAA,CAAMM,WAAA,KAAgB,SAAS;QAEnC,MAAMG,YAAA,GAAetD,KAAA,CAAMuD,aAAA,CAAcvC,IAAA,CAAKwC,QAAA,CAAS,SAAS;QAChE,IAAI,CAACF,YAAA,EAAc;QAEnB,MAAMF,MAAA,GAASP,KAAA,CAAME,aAAA;QACrB7B,IAAA,CAAK;UAAEF,IAAA,EAAM;UAAqBjD,EAAA;UAAIqF,MAAA;UAAQb;QAAc,CAAC;MAC/D;MACAkB,cAAcZ,KAAA,EAAO;QACnB,IAAIT,SAAA,CAAU9B,QAAA,EAAU;QACxB,MAAM8C,MAAA,GAASP,KAAA,CAAME,aAAA;QACrB7B,IAAA,CAAK;UAAEF,IAAA,EAAM;UAAoBoC,MAAA;UAAQrF,EAAA;UAAIwE;QAAc,CAAC;MAC9D;MACAmB,QAAQb,KAAA,EAAO;QACb,IAAIjG,kBAAA,CAAmBiG,KAAK,GAAG;QAC/B,IAAI/F,iBAAA,CAAkB+F,KAAK,GAAG;QAC9B,IAAIT,SAAA,CAAU9B,QAAA,EAAU;QAExB,MAAM8C,MAAA,GAASP,KAAA,CAAME,aAAA;QACrB7B,IAAA,CAAK;UAAEF,IAAA,EAAM;UAAcoC,MAAA;UAAQrF,EAAA;UAAIwE;QAAc,CAAC;MACxD;IACF,CAAC;EACH;EAEA,OAAO;IACLtD,gBAAA,EAAkBe,KAAA,CAAMqB,OAAA,CAAQpC,gBAAA;IAChCuC,IAAA;IACAmC,QAAQC,QAAA,EAAU;MAChB,IAAIA,QAAA,KAAapC,IAAA,EAAM;MACvBN,IAAA,CAAK0C,QAAA,GAAW,SAAS,OAAO;IAClC;IACAC,oBAAoB/C,KAAA,EAAO;MACzBI,IAAA,CAAK;QAAEF,IAAA,EAAM;QAAmBjD,EAAA,EAAI+C;MAAM,CAAC;IAC7C;IACAgD,UAAUC,MAAA,EAAQ;MAChB7C,IAAA,CAAK;QAAEF,IAAA,EAAM;QAAcF,KAAA,EAAOiD,MAAA;QAAQhG,EAAA,EAAIgG,MAAA,CAAO/D,KAAA,CAAMqB,OAAA,CAAQtD;MAAG,CAAC;IACzE;IACAiG,SAASC,KAAA,EAAO;MACd/C,IAAA,CAAK;QAAEF,IAAA,EAAM;QAAaF,KAAA,EAAOmD,KAAA;QAAOlG,EAAA,EAAIkG,KAAA,CAAMjE,KAAA,CAAMqB,OAAA,CAAQtD;MAAG,CAAC;IACtE;IACAmG,WAAWC,OAAA,GAAU,CAAC,GAAG;MACvBjD,IAAA,CAAK;QAAEF,IAAA,EAAM;QAAmBmD;MAAQ,CAAC;IAC3C;IAEAC,uBAAA,EAAyB;MACvB,OAAOjD,SAAA,CAAUqB,OAAA,CAAQ;QACvB,GAAGvG,KAAA,CAAMgC,cAAA,CAAeyE,KAAA;QACxB2B,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnBtG,EAAA,EAAIL,GAAA,CAAIM,mBAAA,CAAoBgC,KAAA,CAAMqB,OAAO;QACzCoC,cAAcZ,KAAA,EAAO;UACnB,IAAIA,KAAA,CAAMM,WAAA,KAAgB,SAAS;UACnC,MAAMmB,KAAA,GAAQhI,aAAA,CAAcuG,KAAK;UACjC3B,IAAA,CAAK;YAAEF,IAAA,EAAM;YAAsBsD;UAAM,CAAC;QAC5C;QACAC,gBAAgB1B,KAAA,EAAO;UACrB,IAAIA,KAAA,CAAMM,WAAA,KAAgB,SAAS;UACnCjC,IAAA,CAAK,qBAAqB;QAC5B;QACAgC,cAAcL,KAAA,EAAO;UACnB,IAAIA,KAAA,CAAMM,WAAA,KAAgB,SAAS;UACnCjC,IAAA,CAAK,qBAAqB;QAC5B;QACAsD,YAAY3B,KAAA,EAAO;UACjB,IAAIA,KAAA,CAAMM,WAAA,KAAgB,SAAS;UACnCjC,IAAA,CAAK,qBAAqB;QAC5B;QACAuD,cAAc5B,KAAA,EAAO;UACnB,MAAMyB,KAAA,GAAQhI,aAAA,CAAcuG,KAAK;UACjC3B,IAAA,CAAK;YAAEF,IAAA,EAAM;YAAgBsD;UAAM,CAAC;UACpCzB,KAAA,CAAMI,cAAA,CAAe;QACvB;QACAyB,KAAA,EAAO;UACLC,kBAAA,EAAoB;UACpBC,gBAAA,EAAkB;UAClBC,UAAA,EAAY;QACd;MACF,CAAC;IACH;IAEAC,oBAAoBC,QAAA,EAAU;MAC5B,OAAO5I,UAAA,CACLmG,YAAA,CAAa;QAAExB,KAAA,EAAOiE,QAAA,CAASC,eAAA,CAAgB,EAAEjH;MAAG,CAAC,GACrDgH,QAAA,CAASC,eAAA,CAAgB,CAC3B;IACF;IAEAA,gBAAA,EAAkB;MAChB,OAAO7D,SAAA,CAAU8D,MAAA,CAAO;QACtB,IAAI7D,SAAA,GAAYnF,KAAA,CAAMiJ,WAAA,CAAYxC,KAAA,GAAQzG,KAAA,CAAM6B,OAAA,CAAQ4E,KAAA;QACxD,kBAAkB1C,KAAA,CAAMqB,OAAA,CAAQS,gBAAA;QAChCd,IAAA,EAAM;QACNqD,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnBtG,EAAA,EAAIL,GAAA,CAAIC,YAAA,CAAaqC,KAAA,CAAMqB,OAAO;QAClC,YAAYrB,KAAA,CAAMqB,OAAA,CAAQtD,EAAA;QAC1B,iBAAiBwD,SAAA,GAAY,SAAS;QACtC,iBAAiB7D,GAAA,CAAIQ,YAAA,CAAa8B,KAAA,CAAMqB,OAAO;QAC/C,iBAAiBG,IAAA,IAAQ;QACzB,cAAcA,IAAA,GAAO,SAAS;QAC9B0B,cAAcL,KAAA,EAAO;UACnB,IAAIA,KAAA,CAAMM,WAAA,KAAgB,SAAS;UACnC,MAAM7C,QAAA,GAAW5C,GAAA,CAAIyC,gBAAA,CAAiB0C,KAAA,CAAME,aAAa;UACzD,IAAIzC,QAAA,IAAY,CAACc,SAAA,EAAW;UAC5BF,IAAA,CAAK;YAAEF,IAAA,EAAM;YAAuBoC,MAAA,EAAQP,KAAA,CAAME;UAAc,CAAC;QACnE;QACAM,eAAeR,KAAA,EAAO;UACpB,IAAInF,GAAA,CAAIyC,gBAAA,CAAiB0C,KAAA,CAAME,aAAa,GAAG;UAC/C,IAAIF,KAAA,CAAMM,WAAA,KAAgB,SAAS;UACnC,IAAI,CAAC/B,SAAA,EAAW;UAChB,MAAMkD,KAAA,GAAQhI,aAAA,CAAcuG,KAAK;UACjC3B,IAAA,CAAK;YAAEF,IAAA,EAAM;YAAwBoC,MAAA,EAAQP,KAAA,CAAME,aAAA;YAAeuB;UAAM,CAAC;QAC3E;QACAb,cAAcZ,KAAA,EAAO;UACnB,IAAInF,GAAA,CAAIyC,gBAAA,CAAiB0C,KAAA,CAAME,aAAa,GAAG;UAC/C,IAAIxG,kBAAA,CAAmBsG,KAAK,GAAG;UAC/BA,KAAA,CAAMI,cAAA,CAAe;QACvB;QACAS,QAAQb,KAAA,EAAO;UACb,IAAIA,KAAA,CAAMsC,gBAAA,EAAkB;UAC5B,IAAIzH,GAAA,CAAIyC,gBAAA,CAAiB0C,KAAA,CAAME,aAAa,GAAG;UAC/C7B,IAAA,CAAK;YAAEF,IAAA,EAAM;YAAiBoC,MAAA,EAAQP,KAAA,CAAME;UAAc,CAAC;QAC7D;QACAqC,OAAA,EAAS;UACPlE,IAAA,CAAK,cAAc;QACrB;QACAmE,QAAA,EAAU;UACRnE,IAAA,CAAK,eAAe;QACtB;QACAoE,UAAUzC,KAAA,EAAO;UACf,IAAIA,KAAA,CAAMsC,gBAAA,EAAkB;UAC5B,MAAMI,MAAA,GAAsB;YAC1BC,UAAA,EAAY;cACVtE,IAAA,CAAK,YAAY;YACnB;YACAuE,QAAA,EAAU;cACRvE,IAAA,CAAK,UAAU;YACjB;YACAwE,MAAA,EAAQ;cACNxE,IAAA,CAAK;gBAAEF,IAAA,EAAM;gBAAc2E,GAAA,EAAK;cAAQ,CAAC;YAC3C;YACAC,MAAA,EAAQ;cACN1E,IAAA,CAAK;gBAAEF,IAAA,EAAM;gBAAc2E,GAAA,EAAK;cAAQ,CAAC;YAC3C;UACF;UAEA,MAAM5F,GAAA,GAAM1D,WAAA,CAAYwG,KAAA,EAAO7C,KAAA,CAAMqB,OAAO;UAC5C,MAAMwE,IAAA,GAAON,MAAA,CAAOxF,GAAG;UAEvB,IAAI8F,IAAA,EAAM;YACRhD,KAAA,CAAMI,cAAA,CAAe;YACrB4C,IAAA,CAAKhD,KAAK;UACZ;QACF;MACF,CAAC;IACH;IAEAiD,kBAAA,EAAoB;MAClB,OAAO3E,SAAA,CAAUqB,OAAA,CAAQ;QACvB,GAAGvG,KAAA,CAAM8J,SAAA,CAAUrD,KAAA;QACnB2B,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnB,cAAc7C,IAAA,GAAO,SAAS;MAChC,CAAC;IACH;IAEAwE,mBAAA,EAAqB;MACnB,OAAO7E,SAAA,CAAUqB,OAAA,CAAQ;QACvB,GAAGvG,KAAA,CAAMsC,UAAA,CAAWmE,KAAA;QACpB2B,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnBtG,EAAA,EAAIL,GAAA,CAAIY,eAAA,CAAgB0B,KAAA,CAAMqB,OAAO;QACrCqD,KAAA,EAAOhD,YAAA,CAAauE;MACtB,CAAC;IACH;IAEAC,cAAA,EAAgB;MACd,OAAO/E,SAAA,CAAUqB,OAAA,CAAQ;QACvBzE,EAAA,EAAIL,GAAA,CAAIU,UAAA,CAAW4B,KAAA,CAAMqB,OAAO;QAChC,GAAGpF,KAAA,CAAMoC,KAAA,CAAMqE,KAAA;QACf2B,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnBK,KAAA,EAAOhD,YAAA,CAAarD;MACtB,CAAC;IACH;IAEA8H,iBAAA,EAAmB;MACjB,OAAOhF,SAAA,CAAUqB,OAAA,CAAQ;QACvB,GAAGvG,KAAA,CAAMmK,QAAA,CAAS1D,KAAA;QAClB2B,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnBK,KAAA,EAAOhD,YAAA,CAAa0E;MACtB,CAAC;IACH;IAEAC,gBAAA,EAAkB;MAChB,OAAOlF,SAAA,CAAUqB,OAAA,CAAQ;QACvB,GAAGvG,KAAA,CAAMkC,OAAA,CAAQuE,KAAA;QACjB3E,EAAA,EAAIL,GAAA,CAAIQ,YAAA,CAAa8B,KAAA,CAAMqB,OAAO;QAClC,cAAcrB,KAAA,CAAMqB,OAAA,CAAQ,YAAY;QACxCiF,MAAA,EAAQ,CAAC9E,IAAA;QACT,cAAcA,IAAA,GAAO,SAAS;QAC9BmB,IAAA,EAAMpB,SAAA,GAAY,SAAS;QAC3BgF,QAAA,EAAU;QACVlC,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnB,yBAAyBrE,KAAA,CAAMqB,OAAA,CAAQpC,gBAAA,IAAoB;QAC3D,mBAAmBvB,GAAA,CAAIC,YAAA,CAAaqC,KAAA,CAAMqB,OAAO;QACjD,kBAAkBrB,KAAA,CAAMqB,OAAA,CAAQS,gBAAA;QAChC0E,eAAe3D,KAAA,EAAO;UACpB,IAAIA,KAAA,CAAMM,WAAA,KAAgB,SAAS;UACnCjC,IAAA,CAAK,mBAAmB;QAC1B;QACAoE,UAAUzC,KAAA,EAAO;UACf,IAAIA,KAAA,CAAMsC,gBAAA,EAAkB;UAC5B,IAAI,CAACpI,YAAA,CAAa8F,KAAK,GAAG;UAE1B,MAAMO,MAAA,GAASzG,cAAA,CAAwBkG,KAAK;UAE5C,MAAM4D,QAAA,GAAWrD,MAAA,EAAQsD,OAAA,CAAQ,aAAa,MAAM7D,KAAA,CAAME,aAAA,IAAiBK,MAAA,KAAWP,KAAA,CAAME,aAAA;UAC5F,IAAI,CAAC0D,QAAA,EAAU;UAEf,IAAI5D,KAAA,CAAM9C,GAAA,KAAQ,OAAO;YACvB,MAAM4G,KAAA,GAAQ3J,eAAA,CAAgB6F,KAAK;YACnC,IAAI,CAAC8D,KAAA,EAAO;cACV9D,KAAA,CAAMI,cAAA,CAAe;cACrB;YACF;UACF;UAEA,MAAMR,IAAA,GAAO/E,GAAA,CAAIsB,oBAAA,CAAqBgB,KAAA,CAAMqB,OAAO;UACnD,MAAMkE,MAAA,GAAsB;YAC1BC,UAAA,EAAY;cACVtE,IAAA,CAAK,YAAY;YACnB;YACAuE,QAAA,EAAU;cACRvE,IAAA,CAAK,UAAU;YACjB;YACA0F,UAAA,EAAY;cACV1F,IAAA,CAAK,YAAY;YACnB;YACA2F,WAAA,EAAa;cACX3F,IAAA,CAAK,aAAa;YACpB;YACAwE,MAAA,EAAQ;cACNxE,IAAA,CAAK,OAAO;cACZ9E,WAAA,CAAYqG,IAAI;YAClB;YACAmD,MAAMkB,MAAA,EAAO;cACX,IAAIxF,aAAA,EAAe;gBACjBJ,IAAA,CAAK;kBAAEF,IAAA,EAAM;kBAAajB,GAAA,EAAK+G,MAAA,CAAM/G;gBAAI,CAAC;cAC5C,OAAO;gBACLwF,MAAA,CAAOG,KAAA,GAAQoB,MAAK;cACtB;YACF;YACAC,KAAA,EAAO;cACL7F,IAAA,CAAK,MAAM;YACb;YACA8F,IAAA,EAAM;cACJ9F,IAAA,CAAK,KAAK;YACZ;UACF;UAEA,MAAMnB,GAAA,GAAM1D,WAAA,CAAYwG,KAAA,EAAO;YAAEwB,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD;UAAI,CAAC;UACzD,MAAMwB,IAAA,GAAON,MAAA,CAAOxF,GAAG;UAEvB,IAAI8F,IAAA,EAAM;YACRA,IAAA,CAAKhD,KAAK;YACVA,KAAA,CAAMoE,eAAA,CAAgB;YACtBpE,KAAA,CAAMI,cAAA,CAAe;YACrB;UACF;UAGA,IAAI,CAACjD,KAAA,CAAMqB,OAAA,CAAQ6F,SAAA,EAAW;UAC9B,IAAI,CAACzK,cAAA,CAAeoG,KAAK,GAAG;UAC5B,IAAIrG,aAAA,CAAcqG,KAAK,GAAG;UAC1B,IAAIhG,iBAAA,CAAkBuG,MAAM,GAAG;UAE/BlC,IAAA,CAAK;YAAEF,IAAA,EAAM;YAAajB,GAAA,EAAK8C,KAAA,CAAM9C;UAAI,CAAC;UAC1C8C,KAAA,CAAMI,cAAA,CAAe;QACvB;MACF,CAAC;IACH;IAEAkE,kBAAA,EAAoB;MAClB,OAAOhG,SAAA,CAAUqB,OAAA,CAAQ;QACvB,GAAGvG,KAAA,CAAMmL,SAAA,CAAU1E,KAAA;QACnBC,IAAA,EAAM;QACN0B,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnB,oBAAoB;MACtB,CAAC;IACH;IAEAtC,YAAA;IAEAO,YAAA;IAEAH,kBAAA;IAEAD,mBAAmBF,MAAA,EAAO;MACxB,MAAM;QAAEhB,IAAA;QAAMV,QAAA;QAAU+G,eAAA;QAAiB9E;MAAc,IAAIP,MAAA;MAE3D,MAAMsF,MAAA,GAASpF,kBAAA,CAAmBF,MAAK;MACvC,MAAMI,SAAA,GAAYD,kBAAA,CAAmBH,MAAK;MAE1C,OAAO;QACL,GAAGM,YAAA,CAAagF,MAAM;QACtB,GAAGnG,SAAA,CAAUqB,OAAA,CAAQ;UACnB,aAAaxB,IAAA;UACb,GAAG/E,KAAA,CAAMwG,IAAA,CAAKC,KAAA;UACd2B,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;UACnB,cAAciD,MAAA,CAAOxG,KAAA;UACrB6B,IAAA,EAAM,WAAW3B,IAAI;UACrB,gBAAgB,CAAC,CAACoB,SAAA,CAAUC,OAAA;UAC5B,cAAcD,SAAA,CAAUC,OAAA,GAAU,YAAY;UAC9CqB,QAAQb,KAAA,EAAO;YACb,IAAIvC,QAAA,EAAU;YACd,IAAI1D,kBAAA,CAAmBiG,KAAK,GAAG;YAC/B,IAAI/F,iBAAA,CAAkB+F,KAAK,GAAG;YAC9B,MAAMO,MAAA,GAASP,KAAA,CAAME,aAAA;YACrB7B,IAAA,CAAK;cAAEF,IAAA,EAAM;cAAcoC,MAAA;cAAQkE,MAAA;cAAQ/E;YAAc,CAAC;YAC1D8E,eAAA,GAAkB,CAACjF,SAAA,CAAUC,OAAO;UACtC;QACF,CAAC;MACH;IACF;IAEAkF,sBAAsBvF,MAAA,EAAO;MAC3B,MAAMI,SAAA,GAAYD,kBAAA,CAAmBH,MAAK;MAC1C,OAAOb,SAAA,CAAUqB,OAAA,CAAQ;QACvB,GAAGvG,KAAA,CAAMuL,aAAA,CAAc9E,KAAA;QACvB2B,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnB,iBAAiB3H,QAAA,CAAS0F,SAAA,CAAU9B,QAAQ;QAC5C,oBAAoB5D,QAAA,CAAS0F,SAAA,CAAUH,WAAW;QAClD,cAAcG,SAAA,CAAUC,OAAA,GAAU,YAAY;QAC9CiE,MAAA,EAAQ,CAAClE,SAAA,CAAUC;MACrB,CAAC;IACH;IAEAoF,iBAAiBzF,MAAA,EAAO;MACtB,MAAMI,SAAA,GAAYD,kBAAA,CAAmBH,MAAK;MAC1C,OAAOb,SAAA,CAAUqB,OAAA,CAAQ;QACvB,GAAGvG,KAAA,CAAMyL,QAAA,CAAShF,KAAA;QAClB2B,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnB,iBAAiB3H,QAAA,CAAS0F,SAAA,CAAU9B,QAAQ;QAC5C,oBAAoB5D,QAAA,CAAS0F,SAAA,CAAUH,WAAW;QAClD,cAAcG,SAAA,CAAUC,OAAA,GAAU,YAAY;MAChD,CAAC;IACH;IAEAsF,uBAAuB3F,MAAA,EAAO;MAC5B,OAAOb,SAAA,CAAUqB,OAAA,CAAQ;QACvBzE,EAAA,EAAIL,GAAA,CAAIgB,eAAA,CAAgBsB,KAAA,CAAMqB,OAAA,EAASW,MAAA,CAAM4F,OAAO;QACpDvD,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnB,GAAGpI,KAAA,CAAM4L,cAAA,CAAenF;MAC1B,CAAC;IACH;IAEAoF,kBAAkB9F,MAAA,EAAO;MACvB,OAAOb,SAAA,CAAUqB,OAAA,CAAQ;QACvBzE,EAAA,EAAIL,GAAA,CAAIc,UAAA,CAAWwB,KAAA,CAAMqB,OAAA,EAASW,MAAA,CAAMjE,EAAE;QAC1C,GAAG9B,KAAA,CAAM8L,SAAA,CAAUrF,KAAA;QACnB2B,GAAA,EAAKrE,KAAA,CAAMqB,OAAA,CAAQgD,GAAA;QACnB,mBAAmB3G,GAAA,CAAIgB,eAAA,CAAgBsB,KAAA,CAAMqB,OAAA,EAASW,MAAA,CAAMjE,EAAE;QAC9D4E,IAAA,EAAM;MACR,CAAC;IACH;EACF;AACF;;;AE5bA,SAASqF,aAAA,EAAeC,MAAA,EAAQC,GAAA,QAAW;AAC3C,SAASC,uBAAA,QAA+B;AACxC,SAASC,WAAA,QAAmB;AAC5B,SACEC,QAAA,EACA/K,cAAA,IAAAgL,eAAA,EACAC,eAAA,EACA1L,iBAAA,IAAA2L,kBAAA,EACAC,iBAAA,EACAC,GAAA,EACAC,cAAA,QACK;AACP,SAASC,YAAA,EAAcC,gBAAA,QAAwB;AAC/C,SAASC,iBAAA,EAAmBC,gBAAA,QAAwB;AACpD,SAASC,IAAA,EAAMC,OAAA,EAASC,OAAA,QAAe;AAIvC,IAAM;EAAEC,GAAA;EAAKC,GAAA;EAAKC;AAAG,IAAIpB,MAAA;AAElB,SAASqB,QAAQC,WAAA,EAAiC;EACvD,MAAM3L,GAAA,GAAMqL,OAAA,CAAQM,WAAW;EAC/B,OAAOvB,aAAA,CACL;IACEjK,EAAA,EAAI;IACJyL,OAAA,EAAS5L,GAAA,CAAI4D,IAAA,GAAO,SAAS;IAC7BH,OAAA,EAAS;MACPpC,gBAAA,EAAkB;MAClBW,SAAA,EAAW;MACXiC,WAAA,EAAa;MACbU,aAAA,EAAe;MACf2E,SAAA,EAAW;MACX3F,SAAA,EAAW;MACX,GAAG3D,GAAA;MACH+D,WAAA,EAAa;QACXC,SAAA,EAAW;QACX6H,MAAA,EAAQ;QACR,GAAG7L,GAAA,CAAI+D;MACT;MACA+H,aAAA,EAAe;MACf3F,MAAA,EAAQ;MACR4F,oBAAA,EAAsB;MACtBC,QAAA,EAAUZ,IAAA,CAAKd,GAAA,CAAI,CAAC,CAAC,CAAC;MACtB2B,cAAA,EAAgB;MAChBC,YAAA,EAAc;MACd7J,cAAA,EAAgBqI,eAAA,CAAeyB;IACjC;IAEAC,QAAA,EAAU;MACR5I,SAAA,EAAY6I,IAAA,IAAQA,IAAA,CAAIlG,MAAA,KAAW;MACnCmG,KAAA,EAAQD,IAAA,IAAQA,IAAA,CAAI5F,GAAA,KAAQ;MAC5B/C,aAAA,EAAgB2I,IAAA,IAAQA,IAAA,CAAIhK,cAAA,CAAekK,SAAA,KAAc;IAC3D;IAEAC,KAAA,EAAO;MACLhJ,SAAA,EAAW;MACXS,WAAA,EAAa;MACbL,IAAA,EAAM;IACR;IAEA6I,EAAA,EAAI;MACF,cAAc;QACZC,OAAA,EAAS;MACX;MACA,aAAa;QACXA,OAAA,EAAS;MACX;MACAC,IAAA,EAAM,CACJ;QACEC,KAAA,EAAO;QACPF,OAAA,EAAS;MACX,GACA;QACElH,MAAA,EAAQ;QACRkH,OAAA,EAAS;MACX,EACF;MACAG,cAAA,EAAgB,CACd;QACED,KAAA,EAAO;QACPF,OAAA,EAAS,CAAC,cAAc;MAC1B,GACA;QACEI,QAAA,EAAU;QACVtH,MAAA,EAAQ;QACRkH,OAAA,EAAS,CAAC,sBAAsB,cAAc;MAChD,EACF;MACAK,KAAA,EAAO,CACL;QACEH,KAAA,EAAO;QACPF,OAAA,EAAS;MACX,GACA;QACElH,MAAA,EAAQ;QACRkH,OAAA,EAAS;MACX,EACF;MACA,uBAAuB;QACrBA,OAAA,EAAS;MACX;MACA,mBAAmB;QACjBA,OAAA,EAAS;MACX;IACF;IAEAM,MAAA,EAAQ;MACNC,IAAA,EAAM;QACJC,IAAA,EAAM,CAAC,QAAQ;QACfT,EAAA,EAAI;UACF,mBAAmB;UACnB,oBAAoB;UACpBU,kBAAA,EAAoB;YAClB3H,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX;UACAU,YAAA,EAAc,CACZ;YACER,KAAA,EAAO;YACPF,OAAA,EAAS,CAAC,kBAAkB,cAAc;UAC5C,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS,CAAC,kBAAkB,cAAc;UAC5C,EACF;UACAW,aAAA,EAAe,CACb;YACET,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX,EACF;UACAY,aAAA,EAAe;YACbV,KAAA,EAAOrB,GAAA,CAAI,WAAW;YACtB/F,MAAA,EAAQ;UACV;UACA+H,mBAAA,EAAqB;YACnBX,KAAA,EAAO;YACPpH,MAAA,EAAQ;UACV;QACF;MACF;MAEA,uBAAuB;QACrB0H,IAAA,EAAM,CAAC,QAAQ;QACfM,KAAA,EAAO;UACLC,gBAAA,EAAkB,CAChB;YACEb,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX;QAEJ;QACAD,EAAA,EAAI;UACF,mBAAmB;UACnB,oBAAoB;UACpBiB,mBAAA,EAAqB,CACnB;YACEd,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX;QAEJ;MACF;MAEAiB,OAAA,EAAS;QACPT,IAAA,EAAM,CAAC,QAAQ;QACfM,KAAA,EAAO;UACLI,kBAAA,EAAoB,CAClB;YACEhB,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX;QAEJ;QACAD,EAAA,EAAI;UACF,mBAAmB;UACnB,oBAAoB;UACpBoB,IAAA,EAAM,CACJ;YACEjB,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX,EACF;UACAoB,oBAAA,EAAsB,CACpB;YACElB,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX;QAEJ;MACF;MAEAqB,OAAA,EAAS;QACPb,IAAA,EAAM,CAAC,MAAM;QACbc,UAAA,EAAY,CAAC,oBAAoB,sBAAsB;QACvDR,KAAA,EAAO;UACLS,mBAAA,EAAqB,CACnB;YACErB,KAAA,EAAO;YACPF,OAAA,EAAS,CAAC,eAAe;UAC3B,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS,CAAC,mBAAmB,+BAA+B,eAAe;UAC7E;QAEJ;QACAD,EAAA,EAAI;UACF,mBAAmB;UACnB,oBAAoB;YAClBjH,MAAA,EAAQ;YACRkH,OAAA,EAAS,CAAC,mBAAmB,6BAA6B;UAC5D;UAAA;UAEAwB,iBAAA,EAAmB;YACjB1I,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX;UACAyB,+BAAA,EAAiC,CAC/B;YACEvB,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS,CAAC,mBAAmB,6BAA6B;UAC5D;QAEJ;MACF;MAEA0B,MAAA,EAAQ;QACNlB,IAAA,EAAM,CAAC,QAAQ;QACfmB,KAAA,EAAO,CAAC,wBAAwB,gBAAgB,eAAe;QAC/D5B,EAAA,EAAI;UACF,mBAAmB,CACjB;YACEG,KAAA,EAAOnB,EAAA,CAAG,wBAAwB,kBAAkB;YACpDjG,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX,GACA;YACEE,KAAA,EAAO;YACPpH,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;UACV,EACF;UACA2H,kBAAA,EAAoB;YAClB3H,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX;UACAU,YAAA,EAAc,CACZ;YACER,KAAA,EAAO;YACPF,OAAA,EAAS,CAAC,kBAAkB,cAAc;UAC5C,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS,CAAC,kBAAkB,cAAc;UAC5C,EACF;UACAW,aAAA,EAAe,CACb;YACET,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX,EACF;UACAa,mBAAA,EAAqB;YACnBX,KAAA,EAAO;YACPpH,MAAA,EAAQ;UACV;UACA8I,YAAA,EAAc;UACdC,UAAA,EAAY,CACV;YACE3B,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS,CAAC,sBAAsB,cAAc;UAChD,EACF;UACA8B,QAAA,EAAU,CACR;YACE5B,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACElH,MAAA,EAAQ;YACRkH,OAAA,EAAS,CAAC,qBAAqB,cAAc;UAC/C;QAEJ;MACF;MAEA9I,IAAA,EAAM;QACJsJ,IAAA,EAAM,CAAC,MAAM;QACbc,UAAA,EAAY,CAAC,wBAAwB,oBAAoB,yBAAyB;QAClFK,KAAA,EAAO,CAAC,aAAa,eAAe;QACpC5B,EAAA,EAAI;UACF,oBAAoB,CAClB;YACEjH,MAAA,EAAQ;YACRoH,KAAA,EAAO;YACPF,OAAA,EAAS,CAAC,iBAAiB;UAC7B,GACA;YACElH,MAAA,EAAQ;UACV,EACF;UACA6H,aAAA,EAAe,CACb;YACET,KAAA,EAAOpB,GAAA,CAAID,GAAA,CAAI,eAAe,GAAG,kBAAkB;YACnDmB,OAAA,EAAS;UACX,GACA;YACEE,KAAA,EAAOrB,GAAA,CAAI,eAAe;YAC1B/F,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX,EACF;UACA8B,QAAA,EAAU;YACR9B,OAAA,EAAS,CAAC,qBAAqB,WAAW;UAC5C;UACA6B,UAAA,EAAY;YACV7B,OAAA,EAAS,CAAC,qBAAqB,WAAW;UAC5C;UACA+B,UAAA,EAAY,CACV;YACE7B,KAAA,EAAOpB,GAAA,CAAI,aAAa,kBAAkB;YAC1CkB,OAAA,EAAS;UACX,GACA;YACEE,KAAA,EAAO;YACPpH,MAAA,EAAQ;YACRkH,OAAA,EAAS,CAAC,mBAAmB,eAAe;UAC9C,EACF;UACAgC,IAAA,EAAM;YACJhC,OAAA,EAAS,CAAC,sBAAsB,WAAW;UAC7C;UACAiC,GAAA,EAAK;YACHjC,OAAA,EAAS,CAAC,qBAAqB,WAAW;UAC5C;UACAkC,WAAA,EAAa;YACXhC,KAAA,EAAO;YACPF,OAAA,EAAS;UACX;UACAmC,KAAA,EAAO,CACL;YACEjC,KAAA,EAAO;YACPF,OAAA,EAAS;UACX,GACA;YACEA,OAAA,EAAS;UACX,EACF;UACAoC,gBAAA,EAAkB,CAChB;YACElC,KAAA,EAAOrB,GAAA,CAAI,gBAAgB;YAC3BmB,OAAA,EAAS,CAAC,sBAAsB,WAAW;UAC7C,GACA;YACEA,OAAA,EAAS;UACX,EACF;UACAqC,iBAAA,EAAmB;YACjBnC,KAAA,EAAOpB,GAAA,CAAID,GAAA,CAAI,gBAAgB,GAAGA,GAAA,CAAI,eAAe,CAAC;YACtDmB,OAAA,EAAS;UACX;UACAsC,UAAA,EAAY;UAAA;UAEV;YACEpC,KAAA,EAAOpB,GAAA,CACLD,GAAA,CAAI,0BAA0B,GAC9BA,GAAA,CAAI,2BAA2B,GAC/B,iBACA,kBACF;YACAmB,OAAA,EAAS,CAAC,kBAAkB,kBAAkB,iBAAiB,eAAe;UAChF,GACA;YACEE,KAAA,EAAOpB,GAAA,CAAID,GAAA,CAAI,0BAA0B,GAAGA,GAAA,CAAI,2BAA2B,GAAG,eAAe;YAC7F/F,MAAA,EAAQ;YACRkH,OAAA,EAAS,CAAC,kBAAkB,kBAAkB,iBAAiB,eAAe;UAChF;UAAA;UAEA;YACEE,KAAA,EAAOpB,GAAA,CAAID,GAAA,CAAI,0BAA0B,GAAGA,GAAA,CAAI,2BAA2B,CAAC;YAC5EmB,OAAA,EAAS,CAAC,kBAAkB,gBAAgB;UAC9C,GACA;YAAEA,OAAA,EAAS;UAAqB,EAClC;UACAoB,oBAAA,EAAsB;YACpBtI,MAAA,EAAQ;YACRkH,OAAA,EAAS;UACX;UACAuC,gBAAA,EAAkB;YAChBvC,OAAA,EAAS;UACX;UACAwC,SAAA,EAAW;YACTxC,OAAA,EAAS;UACX;UACAyC,UAAA,EAAY;YACVzC,OAAA,EAAS;UACX;UACA,mBAAmB;YACjBA,OAAA,EAAS;UACX;QACF;MACF;IACF;EACF,GACA;IACE0C,MAAA,EAAQ;MACN3B,gBAAA,EAAkB;MAClBG,kBAAA,EAAoB;MACpBK,mBAAA,EAAqB;IACvB;IAEA5D,MAAA,EAAQ;MACN1F,aAAA,EAAeA,CAAC0H,IAAA,EAAKgD,GAAA,KAAQ,CAAC,EAAEA,GAAA,EAAK1K,aAAA,IAAiB0H,IAAA,CAAI1H,aAAA;MAAA;MAE1D/B,aAAA,EAAeA,CAAC0M,IAAA,EAAMD,GAAA,KAAQvP,GAAA,CAAI8C,aAAA,CAAcyM,GAAA,CAAI7J,MAAM;MAAA;MAE1D+J,wBAAA,EAA0BA,CAAClD,IAAA,EAAKgD,GAAA,KAAQ;QACtC,MAAM7J,MAAA,GAAU6J,GAAA,CAAI7J,MAAA,IAAU1F,GAAA,CAAIsB,oBAAA,CAAqBiL,IAAG;QAC1D,OAAO,CAAC,CAAC7G,MAAA,EAAQ7C,YAAA,CAAa,eAAe;MAC/C;MACAa,SAAA,EAAY6I,IAAA,IAAQA,IAAA,CAAI7I,SAAA;MACxByI,cAAA,EAAiBI,IAAA,IAAQA,IAAA,CAAIJ,cAAA;MAC7BuD,yBAAA,EAA4BnD,IAAA,IAAQzB,kBAAA,CAAkB9K,GAAA,CAAIsB,oBAAA,CAAqBiL,IAAG,CAAC;MACnFoD,eAAA,EAAiBA,CAACpD,IAAA,EAAKgD,GAAA,KAAQ;QAC7B,IAAI,CAAChD,IAAA,CAAIP,aAAA,EAAe,OAAO;QAC/B,OAAOX,gBAAA,CAAiBkB,IAAA,CAAIP,aAAA,EAAeuD,GAAA,CAAI3I,KAAK;MACtD;MAAA;MAEAgJ,gBAAA,EAAmBrD,IAAA,IAAQ,CAAC,CAACA,IAAA,CAAI,iBAAiB;MAClDsD,gBAAA,EAAkBA,CAACL,IAAA,EAAMD,GAAA,KAAQA,GAAA,CAAI1J,aAAA,EAAevC,IAAA,KAAS;MAC7DwM,cAAA,EAAgBA,CAACN,IAAA,EAAMD,GAAA,KAAQA,GAAA,CAAI1J,aAAA,EAAevC,IAAA,KAAS;MAC3DyM,gBAAA,EAAkBA,CAACP,IAAA,EAAMD,GAAA,KAAQA,GAAA,CAAI1J,aAAA,EAAevC,IAAA,KAAS;MAC7D0M,oBAAA,EAAsBA,CAACR,IAAA,EAAMD,GAAA,KAAQA,GAAA,CAAI1J,aAAA,EAAevC,IAAA,KAAS;IACnE;IAEA4K,UAAA,EAAY;MACV+B,iBAAiB1D,IAAA,EAAK;QACpB,IAAIA,IAAA,CAAIpI,WAAA,EAAa;QACrBoI,IAAA,CAAInI,gBAAA,GAAmBmI,IAAA,CAAItI,WAAA,CAAYC,SAAA;QACvC,MAAM9C,eAAA,GAAkBA,CAAA,KAAMpB,GAAA,CAAIoB,eAAA,CAAgBmL,IAAG;QACrD,OAAOrB,YAAA,CAAalL,GAAA,CAAIqB,YAAA,CAAakL,IAAG,GAAGnL,eAAA,EAAiB;UAC1D,GAAGmL,IAAA,CAAItI,WAAA;UACPiM,KAAA,EAAO;UACPC,WAAWC,IAAA,EAAM;YACf7D,IAAA,CAAInI,gBAAA,GAAmBgM,IAAA,CAAKlM,SAAA;UAC9B;QACF,CAAC;MACH;MACAmM,qBAAqB9D,IAAA,EAAK+D,IAAA,EAAM;QAAE9M;MAAK,GAAG;QACxC,MAAMtC,YAAA,GAAeA,CAAA,KAAMlB,GAAA,CAAIkB,YAAA,CAAaqL,IAAG;QAC/C,OAAO9B,uBAAA,CAAwBvJ,YAAA,EAAc;UAC3CgP,KAAA,EAAO;UACPK,OAAA,EAAS,CAACvQ,GAAA,CAAIqB,YAAA,CAAakL,IAAG,CAAC;UAC/BiE,iBAAA,EAAmBjE,IAAA,CAAIiE,iBAAA;UACvBC,cAAA,EAAgBlE,IAAA,CAAIkE,cAAA;UACpBC,gBAAgBvL,KAAA,EAAO;YACrBoH,IAAA,CAAImE,eAAA,GAAkBvL,KAAK;YAC3B,IAAIoH,IAAA,CAAI7I,SAAA,EAAWyB,KAAA,CAAMI,cAAA,CAAe;YACxCoL,aAAA,CAAcpE,IAAG;UACnB;UACAqE,qBAAqBzL,KAAA,EAAO;YAC1BoH,IAAA,CAAIH,YAAA,GAAe,CAACjH,KAAA,CAAM0L,MAAA,CAAOC,SAAA;YACjCvE,IAAA,CAAIqE,oBAAA,GAAuBzL,KAAK;UAClC;UACA4L,UAAA,EAAY;YACVvN,IAAA,CAAK;cAAEF,IAAA,EAAM;cAAS2E,GAAA,EAAK;YAAmB,CAAC;UACjD;QACF,CAAC;MACH;MACA+I,iBAAiBzE,IAAA,EAAK+D,IAAA,EAAM;QAAE/F,MAAA,EAAA0G,OAAA;QAAQzN;MAAK,GAAG;QAC5C,MAAM;UAAEmM;QAAgB,IAAIsB,OAAA;QAG5B1E,IAAA,CAAIlG,MAAA,CAAQ/D,KAAA,CAAMqB,OAAA,CAAQwI,cAAA,GAAiB;QAE3C,MAAM+E,GAAA,GAAMlR,GAAA,CAAImR,MAAA,CAAO5E,IAAG;QAE1B,OAAO7B,WAAA,CAAYwG,GAAA,EAAK,eAAgBE,CAAA,IAAM;UAC5C,MAAMxK,KAAA,GAAQ;YAAEyK,CAAA,EAAGD,CAAA,CAAEE,OAAA;YAASC,CAAA,EAAGH,CAAA,CAAEI;UAAQ;UAE3C,MAAMC,iBAAA,GAAoB9B,eAAA,CAAgBpD,IAAA,EAAK;YAAE3F;UAAM,CAAC;UAExD,IAAI,CAAC6K,iBAAA,EAAmB;YACtBjO,IAAA,CAAK,iCAAiC;YAEtC+I,IAAA,CAAIlG,MAAA,CAAQ/D,KAAA,CAAMqB,OAAA,CAAQwI,cAAA,GAAiB;UAC7C;QACF,CAAC;MACH;MACAuF,wBAAwBnF,IAAA,EAAK+D,IAAA,EAAM;QAAEqB;MAAS,GAAG;QAC/C,MAAMxJ,IAAA,GAAOA,CAAA,KAAM;UACjB,MAAM7F,KAAA,GAAQqP,QAAA,CAAS;UAEvB,IAAIrP,KAAA,CAAM6C,KAAA,CAAM7B,IAAA,CAAKL,UAAA,CAAW,cAAc,GAAG;UAEjD,MAAM2O,MAAA,GAAS5R,GAAA,CAAIsB,oBAAA,CAAqBiL,IAAG;UAC3C,MAAMsF,UAAA,GAAY7R,GAAA,CAAIkB,YAAA,CAAaqL,IAAG;UAEtCtB,cAAA,CAAe2G,MAAA,EAAQ;YAAEE,MAAA,EAAQD,UAAA;YAAWE,KAAA,EAAO;UAAU,CAAC;QAChE;QACA/G,GAAA,CAAI,MAAM7C,IAAA,CAAK,CAAC;QAEhB,MAAM6J,SAAA,GAAYA,CAAA,KAAMhS,GAAA,CAAIkB,YAAA,CAAaqL,IAAG;QAC5C,OAAOxB,iBAAA,CAAkBiH,SAAA,EAAW;UAClC9B,KAAA,EAAO;UACP+B,UAAA,EAAY,CAAC,uBAAuB;UACpCC,QAAA,EAAU/J;QACZ,CAAC;MACH;IACF;IAEAyE,OAAA,EAAS;MACPuF,eAAe5F,IAAA,EAAKgD,GAAA,EAAK;QACvBhD,IAAA,CAAIpI,WAAA,GAAcoL,GAAA,CAAI3I,KAAA;MACxB;MACAwL,oBAAoB7F,IAAA,EAAK;QACvB,IAAI,CAACA,IAAA,CAAI7I,SAAA,EAAW;QACpB6I,IAAA,CAAItI,WAAA,CAAYC,SAAA,GAAYqI,IAAA,CAAIC,KAAA,GAAQ,eAAe;QACvDD,IAAA,CAAItI,WAAA,CAAY8H,MAAA,GAAS;MAC3B;MACAvF,WAAW+F,IAAA,EAAKgD,GAAA,EAAK;QACnB,MAAMnO,eAAA,GAAkBA,CAAA,KAAMpB,GAAA,CAAIoB,eAAA,CAAgBmL,IAAG;QACrD,MAAM8F,aAAA,GAAgB9F,IAAA,CAAIpI,WAAA,GAAc,OAAO;UAAEmO,KAAA,EAAO;UAAGC,MAAA,EAAQ;UAAG,GAAGhG,IAAA,CAAIpI;QAAY,KAAK;QAC9F+G,YAAA,CAAalL,GAAA,CAAIqB,YAAA,CAAakL,IAAG,GAAGnL,eAAA,EAAiB;UACnD,GAAGmL,IAAA,CAAItI,WAAA;UACPiM,KAAA,EAAO;UACPmC,aAAA;UACA,IAAI9C,GAAA,CAAI9I,OAAA,IAAW,CAAC;UACpB+L,SAAA,EAAW;UACXrC,WAAWC,IAAA,EAAM;YACf7D,IAAA,CAAInI,gBAAA,GAAmBgM,IAAA,CAAKlM,SAAA;UAC9B;QACF,CAAC;MACH;MACAuO,eAAejD,IAAA,EAAMD,GAAA,EAAK;QACxB,IAAI,CAACA,GAAA,CAAI3F,MAAA,EAAQ;QACjB,MAAM;UAAEjF,OAAA;UAASgF,eAAA;UAAiBrG;QAAK,IAAIiM,GAAA,CAAI3F,MAAA;QAE/C,IAAItG,IAAA,KAAS,SAAS;UACpBqG,eAAA,GAAkB,IAAI;QACxB,WAAWrG,IAAA,KAAS,YAAY;UAC9BqG,eAAA,GAAkB,CAAChF,OAAO;QAC5B;MACF;MACA+N,qBAAqBnG,IAAA,EAAK+D,IAAA,EAAM;QAC9B,MAAMsB,MAAA,GAAS5R,GAAA,CAAIsB,oBAAA,CAAqBiL,IAAG;QAC3C,IAAI,CAACqF,MAAA,IAAUA,MAAA,CAAOjP,OAAA,CAAQC,QAAA,EAAU;QACxC+P,cAAA,CAAe,MAAMf,MAAA,CAAOgB,KAAA,CAAM,CAAC;MACrC;MACAC,iBAAiBtG,IAAA,EAAKgD,GAAA,EAAK;QACzB,MAAMuD,IAAA,GAAO9S,GAAA,CAAIkB,YAAA,CAAaqL,IAAG;QACjC,MAAMrI,SAAA,GAAYqI,IAAA,CAAInI,gBAAA;QAEtB,IAAI,CAAC0O,IAAA,IAAQ,CAAC5O,SAAA,EAAW;QAEzB,MAAM6O,IAAA,GAAOD,IAAA,CAAKE,qBAAA,CAAsB;QACxC,MAAMC,OAAA,GAAU7H,iBAAA,CAAkB2H,IAAA,EAAM7O,SAAS;QACjD,IAAI,CAAC+O,OAAA,EAAS;QAEd,MAAMC,SAAA,GAAY/H,gBAAA,CAAiBjH,SAAS,MAAM;QAClD,MAAMiP,KAAA,GAAQD,SAAA,GAAY,KAAK;QAE/B3G,IAAA,CAAIP,aAAA,GAAgB,CAAC;UAAE,GAAGuD,GAAA,CAAI3I,KAAA;UAAOyK,CAAA,EAAG9B,GAAA,CAAI3I,KAAA,CAAMyK,CAAA,GAAI8B;QAAM,GAAG,GAAGF,OAAO;MAC3E;MACAG,mBAAmB7G,IAAA,EAAK;QACtBA,IAAA,CAAIP,aAAA,GAAgB;MACtB;MACAqH,cAAc9G,IAAA,EAAK;QACjB,IAAI,CAACA,IAAA,CAAIlG,MAAA,EAAQ;QACjBkG,IAAA,CAAIlG,MAAA,CAAO/D,KAAA,CAAMqB,OAAA,CAAQwI,cAAA,GAAiB;MAC5C;MACAmH,mBAAmB/G,IAAA,EAAKgD,GAAA,EAAK;QAC3BgE,GAAA,CAAIhP,WAAA,CAAYgI,IAAA,EAAKgD,GAAA,CAAIlP,EAAE;MAC7B;MACAmT,qBAAqBjH,IAAA,EAAK;QACxBgH,GAAA,CAAIhP,WAAA,CAAYgI,IAAA,EAAK,IAAI;MAC3B;MACAkH,UAAUlH,IAAA,EAAK;QACbvB,GAAA,CAAI,MAAM;UACR,MAAMgH,SAAA,GAAYhS,GAAA,CAAIkB,YAAA,CAAaqL,IAAG;UACtC,MAAMmH,cAAA,GAAiB7I,eAAA,CAAgB;YACrC8I,IAAA,EAAM3B,SAAA;YACN4B,OAAA,EAAS,CAACjJ,QAAA,CAASqH,SAAA,EAAWhS,GAAA,CAAI6T,gBAAA,CAAiBtH,IAAG,CAAC;YACvDuH,OAAOC,IAAA,EAAM;cACX,OAAO,CAACA,IAAA,CAAK9O,IAAA,EAAMhC,UAAA,CAAW,UAAU;YAC1C;UACF,CAAC;UACDyQ,cAAA,EAAgBM,KAAA,CAAM;YAAEC,aAAA,EAAe;UAAK,CAAC;QAC/C,CAAC;MACH;MACAC,mBAAmB3H,IAAA,EAAK;QACtB,MAAM4H,MAAA,GAAQnU,GAAA,CAAI8B,UAAA,CAAWyK,IAAG;QAChC,IAAI,CAAC4H,MAAA,EAAO;QACZZ,GAAA,CAAIhP,WAAA,CAAYgI,IAAA,EAAK4H,MAAA,CAAM9T,EAAE;MAC/B;MACA+T,kBAAkB7H,IAAA,EAAK;QACrB,MAAM8H,KAAA,GAAOrU,GAAA,CAAI+B,SAAA,CAAUwK,IAAG;QAC9B,IAAI,CAAC8H,KAAA,EAAM;QACXd,GAAA,CAAIhP,WAAA,CAAYgI,IAAA,EAAK8H,KAAA,CAAKhU,EAAE;MAC9B;MACAiU,kBAAkB/H,IAAA,EAAKgD,GAAA,EAAK;QAC1B,MAAMgF,IAAA,GAAOvU,GAAA,CAAIgC,SAAA,CAAUuK,IAAA,EAAKgD,GAAA,CAAItN,IAAI;QACxCsR,GAAA,CAAIhP,WAAA,CAAYgI,IAAA,EAAKgI,IAAA,EAAMlU,EAAA,IAAM,IAAI;MACvC;MACAmU,kBAAkBjI,IAAA,EAAKgD,GAAA,EAAK;QAC1B,MAAMkF,IAAA,GAAOzU,GAAA,CAAImC,SAAA,CAAUoK,IAAA,EAAKgD,GAAA,CAAItN,IAAI;QACxCsR,GAAA,CAAIhP,WAAA,CAAYgI,IAAA,EAAKkI,IAAA,EAAMpU,EAAA,IAAM,IAAI;MACvC;MACAqU,eAAenI,IAAA,EAAK;QAClB,IAAI,CAACA,IAAA,CAAIhL,gBAAA,EAAkB;QAC3BgL,IAAA,CAAIoI,QAAA,GAAW;UAAEvR,KAAA,EAAOmJ,IAAA,CAAIhL;QAAiB,CAAC;MAChD;MACAqT,aAAarI,IAAA,EAAK;QAChB,IAAIA,IAAA,CAAI7I,SAAA,IAAa6I,IAAA,CAAIpI,WAAA,IAAe,CAACoI,IAAA,CAAIH,YAAA,EAAc;QAC3DuG,cAAA,CAAe,MAAM3S,GAAA,CAAIqB,YAAA,CAAakL,IAAG,GAAGyH,KAAA,CAAM;UAAEC,aAAA,EAAe;QAAK,CAAC,CAAC;MAC5E;MACAY,qBAAqBtI,IAAA,EAAKgD,GAAA,EAAK;QAC7B,MAAMwE,IAAA,GAAO/T,GAAA,CAAIoC,YAAA,CAAamK,IAAA,EAAKgD,GAAA,CAAIlN,GAAG;QAC1C,IAAI,CAAC0R,IAAA,EAAM;QACXR,GAAA,CAAIhP,WAAA,CAAYgI,IAAA,EAAKwH,IAAA,CAAK1T,EAAE;MAC9B;MACAyU,cAAcvI,IAAA,EAAKgD,GAAA,EAAK;QACtBhD,IAAA,CAAIlG,MAAA,GAASmE,GAAA,CAAI+E,GAAA,CAAInM,KAAK;MAC5B;MACA2R,aAAaxI,IAAA,EAAKgD,GAAA,EAAK;QACrBhD,IAAA,CAAIL,QAAA,CAASqD,GAAA,CAAIlP,EAAE,IAAImK,GAAA,CAAI+E,GAAA,CAAInM,KAAK;MACtC;MACAuN,cAAcpE,IAAA,EAAK;QACjBoE,aAAA,CAAcpE,IAAG;MACnB;MACAyI,YAAYzI,IAAA,EAAK;QACf,MAAMxH,IAAA,GAAO/E,GAAA,CAAIsB,oBAAA,CAAqBiL,IAAG;QACzC,MAAMlM,EAAA,GAAK0E,IAAA,EAAM/B,YAAA,CAAa,UAAU;QACxC,MAAMuD,KAAA,GAAQlG,EAAA,GAAKkM,IAAA,CAAIL,QAAA,CAAS7L,EAAE,IAAI;QACtCkG,KAAA,EAAO/C,IAAA,CAAK,gBAAgB;MAC9B;MACAyR,gBAAgB1I,IAAA,EAAK;QACnBA,IAAA,CAAIlG,MAAA,EAAQ7C,IAAA,CAAK,YAAY;MAC/B;MACA0R,uBAAuB3I,IAAA,EAAKgD,GAAA,EAAK;QAC/BhD,IAAA,CAAIN,oBAAA,GAAuBsD,GAAA,CAAIlP,EAAA;MACjC;MACA8U,uBAAuB5I,IAAA,EAAK;QAC1B,IAAI,CAACA,IAAA,CAAIN,oBAAA,EAAsB;QAC/BsH,GAAA,CAAIhP,WAAA,CAAYgI,IAAA,EAAKA,IAAA,CAAIN,oBAAoB;QAC7CM,IAAA,CAAIN,oBAAA,GAAuB;MAC7B;MACAmJ,4BAA4B7I,IAAA,EAAK;QAC/BA,IAAA,CAAIlG,MAAA,EAAQ7C,IAAA,CAAK,qBAAqB;MACxC;MACA6R,aAAa9I,IAAA,EAAK;QAChBA,IAAA,CAAI+I,YAAA,GAAe;UAAExR,IAAA,EAAM;QAAK,CAAC;MACnC;MACAyR,cAAchJ,IAAA,EAAK;QACjBA,IAAA,CAAI+I,YAAA,GAAe;UAAExR,IAAA,EAAM;QAAM,CAAC;MACpC;MACA0R,iBAAiBjJ,IAAA,EAAKgD,GAAA,EAAK;QAAE/L;MAAK,GAAG;QACnCA,IAAA,CAAK;UAAEF,IAAA,EAAMiJ,IAAA,CAAIzI,IAAA,GAAO,oBAAoB;UAAoB+B,aAAA,EAAe0J;QAAI,CAAC;MACtF;IACF;EACF,CACF;AACF;AAEA,SAASoB,cAAczQ,GAAA,EAAqB;EAC1C,IAAImG,MAAA,GAASnG,GAAA,CAAImG,MAAA;EACjB,OAAOA,MAAA,IAAUA,MAAA,CAAO/D,KAAA,CAAMqB,OAAA,CAAQD,SAAA,EAAW;IAC/C2C,MAAA,GAASA,MAAA,CAAO/D,KAAA,CAAMqB,OAAA,CAAQ0C,MAAA;EAChC;EACAA,MAAA,EAAQ7C,IAAA,CAAK,OAAO;AACtB;AAEA,IAAM+P,GAAA,GAAM;EACVhP,YAAYrE,GAAA,EAAqBkD,KAAA,EAAsB;IACrD,IAAIoI,OAAA,CAAQtL,GAAA,CAAIqB,gBAAA,EAAkB6B,KAAK,GAAG;IAC1ClD,GAAA,CAAIqB,gBAAA,GAAmB6B,KAAA;IACvBlD,GAAA,CAAIuV,iBAAA,GAAoB;MAAElU,gBAAA,EAAkB6B;IAAM,CAAC;EACrD;AACF;;;AC/sBA,SAASsS,WAAA,QAAmB;AAC5B,SAASC,gBAAA,QAAwB;AAG1B,IAAMC,KAAA,GAAQF,WAAA,CAAgC,EAAE,CACrD,eACA,cACA,iBACA,OACA,eACA,oBACA,MACA,OACA,aACA,kBACA,qBACA,gBACA,wBACA,mBACA,YACA,qBACA,QACA,mBACA,eACA,aACA,YACD;AAEM,IAAMG,UAAA,GAAaF,gBAAA,CAA8CC,KAAK;AAEtE,IAAME,SAAA,GAAYJ,WAAA,CAAuB,EAAE,CAAC,iBAAiB,YAAY,SAAS,WAAW,CAAC;AAC9F,IAAMK,cAAA,GAAiBJ,gBAAA,CAA4BG,SAAS;AAE5D,IAAME,mBAAA,GAAsBN,WAAA,CAAiC,EAAE,CAAC,SAAS,CAAC;AAC1E,IAAMO,wBAAA,GAA2BN,gBAAA,CAAsCK,mBAAmB;AAE1F,IAAME,cAAA,GAAiBR,WAAA,CAA4B,EAAE,CAAC,IAAI,CAAC;AAC3D,IAAMS,mBAAA,GAAsBR,gBAAA,CAAiCO,cAAc;AAE3E,IAAME,eAAA,GAAkBV,WAAA,CAA6B,EAAE,CAC5D,YACA,aACA,iBACA,QACA,SACA,WACA,kBACD;AAEM,IAAMW,oBAAA,GAAuBV,gBAAA,CAAkCS,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
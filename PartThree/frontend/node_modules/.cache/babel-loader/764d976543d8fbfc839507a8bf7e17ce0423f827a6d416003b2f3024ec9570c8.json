{"ast":null,"code":"// src/index.ts\nimport { getDocument, getWindow } from \"@zag-js/dom-query\";\nfunction copyVisualStyles(fromEl, toEl) {\n  if (!fromEl) return;\n  const win = getWindow(fromEl);\n  const el = win.getComputedStyle(fromEl);\n  const cssText = \"box-sizing:\" + el.boxSizing + \";border-left:\" + el.borderLeftWidth + \" solid red;border-right:\" + el.borderRightWidth + \" solid red;font-family:\" + el.fontFamily + \";font-feature-settings:\" + el.fontFeatureSettings + \";font-kerning:\" + el.fontKerning + \";font-size:\" + el.fontSize + \";font-stretch:\" + el.fontStretch + \";font-style:\" + el.fontStyle + \";font-variant:\" + el.fontVariant + \";font-variant-caps:\" + el.fontVariantCaps + \";font-variant-ligatures:\" + el.fontVariantLigatures + \";font-variant-numeric:\" + el.fontVariantNumeric + \";font-weight:\" + el.fontWeight + \";letter-spacing:\" + el.letterSpacing + \";margin-left:\" + el.marginLeft + \";margin-right:\" + el.marginRight + \";padding-left:\" + el.paddingLeft + \";padding-right:\" + el.paddingRight + \";text-indent:\" + el.textIndent + \";text-transform:\" + el.textTransform;\n  toEl.style.cssText += cssText;\n}\nfunction createGhostElement(doc) {\n  var el = doc.createElement(\"div\");\n  el.id = \"ghost\";\n  el.style.cssText = \"display:inline-block;height:0;overflow:hidden;position:absolute;top:0;visibility:hidden;white-space:nowrap;\";\n  doc.body.appendChild(el);\n  return el;\n}\nfunction autoResizeInput(input) {\n  if (!input) return;\n  const doc = getDocument(input);\n  const win = getWindow(input);\n  const ghost = createGhostElement(doc);\n  copyVisualStyles(input, ghost);\n  function resize() {\n    win.requestAnimationFrame(() => {\n      ghost.innerHTML = input.value;\n      const rect = win.getComputedStyle(ghost);\n      input?.style.setProperty(\"width\", rect.width);\n    });\n  }\n  resize();\n  input?.addEventListener(\"input\", resize);\n  input?.addEventListener(\"change\", resize);\n  return () => {\n    doc.body.removeChild(ghost);\n    input?.removeEventListener(\"input\", resize);\n    input?.removeEventListener(\"change\", resize);\n  };\n}\nexport { autoResizeInput };","map":{"version":3,"names":["getDocument","getWindow","copyVisualStyles","fromEl","toEl","win","el","getComputedStyle","cssText","boxSizing","borderLeftWidth","borderRightWidth","fontFamily","fontFeatureSettings","fontKerning","fontSize","fontStretch","fontStyle","fontVariant","fontVariantCaps","fontVariantLigatures","fontVariantNumeric","fontWeight","letterSpacing","marginLeft","marginRight","paddingLeft","paddingRight","textIndent","textTransform","style","createGhostElement","doc","createElement","id","body","appendChild","autoResizeInput","input","ghost","resize","requestAnimationFrame","innerHTML","value","rect","setProperty","width","addEventListener","removeChild","removeEventListener"],"sources":["C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\auto-resize\\src\\index.ts"],"sourcesContent":["import { getDocument, getWindow } from \"@zag-js/dom-query\"\n\nfunction copyVisualStyles(fromEl: HTMLElement | null, toEl: HTMLElement) {\n  if (!fromEl) return\n\n  const win = getWindow(fromEl)\n  const el = win.getComputedStyle(fromEl)\n\n  // prettier-ignore\n  const cssText = 'box-sizing:' + el.boxSizing +\n                      ';border-left:' + el.borderLeftWidth + ' solid red' +\n                      ';border-right:' + el.borderRightWidth + ' solid red' +\n                      ';font-family:' + el.fontFamily +\n                      ';font-feature-settings:' + el.fontFeatureSettings +\n                      ';font-kerning:' + el.fontKerning +\n                      ';font-size:' + el.fontSize +\n                      ';font-stretch:' + el.fontStretch +\n                      ';font-style:' + el.fontStyle +\n                      ';font-variant:' + el.fontVariant +\n                      ';font-variant-caps:' + el.fontVariantCaps +\n                      ';font-variant-ligatures:' + el.fontVariantLigatures +\n                      ';font-variant-numeric:' + el.fontVariantNumeric +\n                      ';font-weight:' + el.fontWeight +\n                      ';letter-spacing:' + el.letterSpacing +\n                      ';margin-left:' + el.marginLeft +\n                      ';margin-right:' + el.marginRight +\n                      ';padding-left:' + el.paddingLeft +\n                      ';padding-right:' + el.paddingRight +\n                      ';text-indent:' + el.textIndent +\n                      ';text-transform:' + el.textTransform\n\n  toEl.style.cssText += cssText\n}\n\nfunction createGhostElement(doc: Document) {\n  var el = doc.createElement(\"div\")\n  el.id = \"ghost\"\n  el.style.cssText =\n    \"display:inline-block;height:0;overflow:hidden;position:absolute;top:0;visibility:hidden;white-space:nowrap;\"\n  doc.body.appendChild(el)\n  return el\n}\n\nexport function autoResizeInput(input: HTMLInputElement | null) {\n  if (!input) return\n  const doc = getDocument(input)\n  const win = getWindow(input)\n\n  const ghost = createGhostElement(doc)\n\n  copyVisualStyles(input, ghost)\n\n  function resize() {\n    win.requestAnimationFrame(() => {\n      ghost.innerHTML = input!.value\n      const rect = win.getComputedStyle(ghost)\n      input?.style.setProperty(\"width\", rect.width)\n    })\n  }\n\n  resize()\n\n  input?.addEventListener(\"input\", resize)\n  input?.addEventListener(\"change\", resize)\n\n  return () => {\n    doc.body.removeChild(ghost)\n    input?.removeEventListener(\"input\", resize)\n    input?.removeEventListener(\"change\", resize)\n  }\n}\n"],"mappings":";AAAA,SAASA,WAAA,EAAaC,SAAA,QAAiB;AAEvC,SAASC,iBAAiBC,MAAA,EAA4BC,IAAA,EAAmB;EACvE,IAAI,CAACD,MAAA,EAAQ;EAEb,MAAME,GAAA,GAAMJ,SAAA,CAAUE,MAAM;EAC5B,MAAMG,EAAA,GAAKD,GAAA,CAAIE,gBAAA,CAAiBJ,MAAM;EAGtC,MAAMK,OAAA,GAAU,gBAAgBF,EAAA,CAAGG,SAAA,GACf,kBAAkBH,EAAA,CAAGI,eAAA,GAAkB,6BACpBJ,EAAA,CAAGK,gBAAA,GAAmB,4BACvBL,EAAA,CAAGM,UAAA,GACrB,4BAA4BN,EAAA,CAAGO,mBAAA,GAC/B,mBAAmBP,EAAA,CAAGQ,WAAA,GACtB,gBAAgBR,EAAA,CAAGS,QAAA,GACnB,mBAAmBT,EAAA,CAAGU,WAAA,GACtB,iBAAiBV,EAAA,CAAGW,SAAA,GACpB,mBAAmBX,EAAA,CAAGY,WAAA,GACtB,wBAAwBZ,EAAA,CAAGa,eAAA,GAC3B,6BAA6Bb,EAAA,CAAGc,oBAAA,GAChC,2BAA2Bd,EAAA,CAAGe,kBAAA,GAC9B,kBAAkBf,EAAA,CAAGgB,UAAA,GACrB,qBAAqBhB,EAAA,CAAGiB,aAAA,GACxB,kBAAkBjB,EAAA,CAAGkB,UAAA,GACrB,mBAAmBlB,EAAA,CAAGmB,WAAA,GACtB,mBAAmBnB,EAAA,CAAGoB,WAAA,GACtB,oBAAoBpB,EAAA,CAAGqB,YAAA,GACvB,kBAAkBrB,EAAA,CAAGsB,UAAA,GACrB,qBAAqBtB,EAAA,CAAGuB,aAAA;EAE5CzB,IAAA,CAAK0B,KAAA,CAAMtB,OAAA,IAAWA,OAAA;AACxB;AAEA,SAASuB,mBAAmBC,GAAA,EAAe;EACzC,IAAI1B,EAAA,GAAK0B,GAAA,CAAIC,aAAA,CAAc,KAAK;EAChC3B,EAAA,CAAG4B,EAAA,GAAK;EACR5B,EAAA,CAAGwB,KAAA,CAAMtB,OAAA,GACP;EACFwB,GAAA,CAAIG,IAAA,CAAKC,WAAA,CAAY9B,EAAE;EACvB,OAAOA,EAAA;AACT;AAEO,SAAS+B,gBAAgBC,KAAA,EAAgC;EAC9D,IAAI,CAACA,KAAA,EAAO;EACZ,MAAMN,GAAA,GAAMhC,WAAA,CAAYsC,KAAK;EAC7B,MAAMjC,GAAA,GAAMJ,SAAA,CAAUqC,KAAK;EAE3B,MAAMC,KAAA,GAAQR,kBAAA,CAAmBC,GAAG;EAEpC9B,gBAAA,CAAiBoC,KAAA,EAAOC,KAAK;EAE7B,SAASC,OAAA,EAAS;IAChBnC,GAAA,CAAIoC,qBAAA,CAAsB,MAAM;MAC9BF,KAAA,CAAMG,SAAA,GAAYJ,KAAA,CAAOK,KAAA;MACzB,MAAMC,IAAA,GAAOvC,GAAA,CAAIE,gBAAA,CAAiBgC,KAAK;MACvCD,KAAA,EAAOR,KAAA,CAAMe,WAAA,CAAY,SAASD,IAAA,CAAKE,KAAK;IAC9C,CAAC;EACH;EAEAN,MAAA,CAAO;EAEPF,KAAA,EAAOS,gBAAA,CAAiB,SAASP,MAAM;EACvCF,KAAA,EAAOS,gBAAA,CAAiB,UAAUP,MAAM;EAExC,OAAO,MAAM;IACXR,GAAA,CAAIG,IAAA,CAAKa,WAAA,CAAYT,KAAK;IAC1BD,KAAA,EAAOW,mBAAA,CAAoB,SAAST,MAAM;IAC1CF,KAAA,EAAOW,mBAAA,CAAoB,UAAUT,MAAM;EAC7C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/editable.anatomy.ts\nimport { createAnatomy } from \"@zag-js/anatomy\";\nvar anatomy = createAnatomy(\"editable\").parts(\"root\", \"area\", \"label\", \"preview\", \"input\", \"editTrigger\", \"submitTrigger\", \"cancelTrigger\", \"control\");\nvar parts = anatomy.build();\n\n// src/editable.connect.ts\nimport \"@zag-js/dom-event\";\nimport { ariaAttr, dataAttr, isComposingEvent, isModKey } from \"@zag-js/dom-query\";\n\n// src/editable.dom.ts\nimport { createScope } from \"@zag-js/dom-query\";\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `editable:${ctx.id}`,\n  getAreaId: ctx => ctx.ids?.area ?? `editable:${ctx.id}:area`,\n  getLabelId: ctx => ctx.ids?.label ?? `editable:${ctx.id}:label`,\n  getPreviewId: ctx => ctx.ids?.preview ?? `editable:${ctx.id}:preview`,\n  getInputId: ctx => ctx.ids?.input ?? `editable:${ctx.id}:input`,\n  getControlId: ctx => ctx.ids?.control ?? `editable:${ctx.id}:control`,\n  getSubmitTriggerId: ctx => ctx.ids?.submitTrigger ?? `editable:${ctx.id}:submit`,\n  getCancelTriggerId: ctx => ctx.ids?.cancelTrigger ?? `editable:${ctx.id}:cancel`,\n  getEditTriggerId: ctx => ctx.ids?.editTrigger ?? `editable:${ctx.id}:edit`,\n  getInputEl: ctx => dom.getById(ctx, dom.getInputId(ctx)),\n  getPreviewEl: ctx => dom.getById(ctx, dom.getPreviewId(ctx)),\n  getSubmitTriggerEl: ctx => dom.getById(ctx, dom.getSubmitTriggerId(ctx)),\n  getCancelTriggerEl: ctx => dom.getById(ctx, dom.getCancelTriggerId(ctx)),\n  getEditTriggerEl: ctx => dom.getById(ctx, dom.getEditTriggerId(ctx))\n});\n\n// src/editable.connect.ts\nfunction connect(state, send, normalize) {\n  const disabled = state.context.disabled;\n  const interactive = state.context.isInteractive;\n  const readOnly = state.context.readOnly;\n  const empty = state.context.isValueEmpty;\n  const invalid = state.context.invalid;\n  const autoResize = state.context.autoResize;\n  const translations = state.context.translations;\n  const editing = state.matches(\"edit\");\n  const placeholderProp = state.context.placeholder;\n  const placeholder = typeof placeholderProp === \"string\" ? {\n    edit: placeholderProp,\n    preview: placeholderProp\n  } : placeholderProp;\n  const value = state.context.value;\n  const valueText = empty ? placeholder?.preview ?? \"\" : value;\n  return {\n    editing,\n    empty,\n    value,\n    valueText,\n    setValue(value2) {\n      send({\n        type: \"SET_VALUE\",\n        value: value2\n      });\n    },\n    clearValue() {\n      send({\n        type: \"SET_VALUE\",\n        value: \"\"\n      });\n    },\n    edit() {\n      if (!interactive) return;\n      send(\"EDIT\");\n    },\n    cancel() {\n      if (!interactive) return;\n      send(\"CANCEL\");\n    },\n    submit() {\n      if (!interactive) return;\n      send(\"SUBMIT\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        dir: state.context.dir\n      });\n    },\n    getAreaProps() {\n      return normalize.element({\n        ...parts.area.attrs,\n        id: dom.getAreaId(state.context),\n        dir: state.context.dir,\n        style: autoResize ? {\n          display: \"inline-grid\"\n        } : void 0,\n        \"data-focus\": dataAttr(editing),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-placeholder-shown\": dataAttr(empty)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        id: dom.getLabelId(state.context),\n        dir: state.context.dir,\n        htmlFor: dom.getInputId(state.context),\n        \"data-focus\": dataAttr(editing),\n        \"data-invalid\": dataAttr(invalid),\n        onClick() {\n          if (editing) return;\n          const previewEl = dom.getPreviewEl(state.context);\n          previewEl?.focus({\n            preventScroll: true\n          });\n        }\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        \"aria-label\": translations.input,\n        name: state.context.name,\n        form: state.context.form,\n        id: dom.getInputId(state.context),\n        hidden: autoResize ? void 0 : !editing,\n        placeholder: placeholder?.edit,\n        maxLength: state.context.maxLength,\n        required: state.context.required,\n        disabled,\n        \"data-disabled\": dataAttr(disabled),\n        readOnly,\n        \"data-readonly\": dataAttr(readOnly),\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        defaultValue: value,\n        size: autoResize ? 1 : void 0,\n        onChange(event) {\n          send({\n            type: \"TYPE\",\n            value: event.currentTarget.value\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (isComposingEvent(event)) return;\n          const keyMap = {\n            Escape() {\n              send(\"CANCEL\");\n              event.preventDefault();\n            },\n            Enter(event2) {\n              if (!state.context.submitOnEnter) return;\n              const {\n                localName\n              } = event2.currentTarget;\n              if (localName === \"textarea\") {\n                if (!isModKey(event2)) return;\n                send({\n                  type: \"SUBMIT\",\n                  src: \"keydown.enter\"\n                });\n                return;\n              }\n              if (localName === \"input\" && !event2.shiftKey && !event2.metaKey) {\n                send({\n                  type: \"SUBMIT\",\n                  src: \"keydown.enter\"\n                });\n                event2.preventDefault();\n              }\n            }\n          };\n          const exec = keyMap[event.key];\n          if (exec) {\n            exec(event);\n          }\n        },\n        style: autoResize ? {\n          all: \"unset\",\n          gridArea: \"1 / 1 / auto / auto\",\n          visibility: !editing ? \"hidden\" : void 0\n        } : void 0\n      });\n    },\n    getPreviewProps() {\n      return normalize.element({\n        id: dom.getPreviewId(state.context),\n        ...parts.preview.attrs,\n        dir: state.context.dir,\n        \"data-placeholder-shown\": dataAttr(empty),\n        \"aria-readonly\": ariaAttr(readOnly),\n        \"data-readonly\": dataAttr(disabled),\n        \"data-disabled\": dataAttr(disabled),\n        \"aria-disabled\": ariaAttr(disabled),\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        children: valueText,\n        hidden: autoResize ? void 0 : editing,\n        tabIndex: interactive && state.context.isPreviewFocusable ? 0 : void 0,\n        onFocus() {\n          if (!interactive) return;\n          if (state.context.activationMode !== \"focus\") return;\n          send({\n            type: \"EDIT\",\n            src: \"focus\"\n          });\n        },\n        onDoubleClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          if (state.context.activationMode !== \"dblclick\") return;\n          send({\n            type: \"EDIT\",\n            src: \"dblclick\"\n          });\n        },\n        style: autoResize ? {\n          whiteSpace: \"pre\",\n          userSelect: \"none\",\n          gridArea: \"1 / 1 / auto / auto\",\n          visibility: editing ? \"hidden\" : void 0,\n          // in event the preview overflow's the parent element\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        } : void 0\n      });\n    },\n    getEditTriggerProps() {\n      return normalize.button({\n        ...parts.editTrigger.attrs,\n        id: dom.getEditTriggerId(state.context),\n        dir: state.context.dir,\n        \"aria-label\": translations.edit,\n        hidden: editing,\n        type: \"button\",\n        disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({\n            type: \"EDIT\",\n            src: \"edit.click\"\n          });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: dom.getControlId(state.context),\n        ...parts.control.attrs,\n        dir: state.context.dir\n      });\n    },\n    getSubmitTriggerProps() {\n      return normalize.button({\n        ...parts.submitTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getSubmitTriggerId(state.context),\n        \"aria-label\": translations.submit,\n        hidden: !editing,\n        disabled,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({\n            type: \"SUBMIT\",\n            src: \"submit.click\"\n          });\n        }\n      });\n    },\n    getCancelTriggerProps() {\n      return normalize.button({\n        ...parts.cancelTrigger.attrs,\n        dir: state.context.dir,\n        \"aria-label\": translations.cancel,\n        id: dom.getCancelTriggerId(state.context),\n        hidden: !editing,\n        type: \"button\",\n        disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({\n            type: \"CANCEL\",\n            src: \"cancel.click\"\n          });\n        }\n      });\n    }\n  };\n}\n\n// src/editable.machine.ts\nimport { createMachine } from \"@zag-js/core\";\nimport { contains, raf } from \"@zag-js/dom-query\";\nimport { trackInteractOutside } from \"@zag-js/interact-outside\";\nimport { compact, isEqual } from \"@zag-js/utils\";\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"editable\",\n    initial: ctx.startWithEditView ? \"edit\" : \"preview\",\n    entry: ctx.startWithEditView ? [\"focusInput\"] : void 0,\n    context: {\n      activationMode: \"focus\",\n      submitMode: \"both\",\n      value: \"\",\n      previousValue: \"\",\n      selectOnFocus: true,\n      disabled: false,\n      readOnly: false,\n      ...ctx,\n      translations: {\n        input: \"editable input\",\n        edit: \"edit\",\n        submit: \"submit\",\n        cancel: \"cancel\",\n        ...ctx.translations\n      }\n    },\n    watch: {\n      value: [\"syncInputValue\"]\n    },\n    computed: {\n      submitOnEnter: ctx2 => [\"both\", \"enter\"].includes(ctx2.submitMode),\n      submitOnBlur: ctx2 => [\"both\", \"blur\"].includes(ctx2.submitMode),\n      isInteractive: ctx2 => !(ctx2.disabled || ctx2.readOnly),\n      isValueEmpty: ctx2 => ctx2.value === \"\",\n      isPreviewFocusable: ctx2 => ctx2.activationMode === \"focus\"\n    },\n    on: {\n      SET_VALUE: {\n        actions: \"setValue\"\n      }\n    },\n    states: {\n      preview: {\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=559561\n        entry: [\"blurInputIfNeeded\"],\n        on: {\n          EDIT: {\n            target: \"edit\",\n            actions: [\"setPreviousValue\", \"focusInput\", \"invokeOnEdit\"]\n          }\n        }\n      },\n      edit: {\n        activities: [\"trackInteractOutside\"],\n        on: {\n          TYPE: {\n            actions: \"setValue\"\n          },\n          BLUR: [{\n            guard: \"submitOnBlur\",\n            target: \"preview\",\n            actions: [\"restoreFocus\", \"invokeOnSubmit\"]\n          }, {\n            target: \"preview\",\n            actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\"]\n          }],\n          CANCEL: {\n            target: \"preview\",\n            actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\"]\n          },\n          SUBMIT: {\n            target: \"preview\",\n            actions: [\"setPreviousValue\", \"restoreFocus\", \"invokeOnSubmit\"]\n          }\n        }\n      }\n    }\n  }, {\n    guards: {\n      submitOnBlur: ctx2 => ctx2.submitOnBlur\n    },\n    activities: {\n      trackInteractOutside(ctx2, _evt, {\n        send\n      }) {\n        return trackInteractOutside(dom.getInputEl(ctx2), {\n          exclude(target) {\n            const ignore = [dom.getCancelTriggerEl(ctx2), dom.getSubmitTriggerEl(ctx2)];\n            return ignore.some(el => contains(el, target));\n          },\n          onFocusOutside: ctx2.onFocusOutside,\n          onPointerDownOutside: ctx2.onPointerDownOutside,\n          onInteractOutside(event) {\n            ctx2.onInteractOutside?.(event);\n            if (event.defaultPrevented) return;\n            const {\n              focusable\n            } = event.detail;\n            send({\n              type: \"BLUR\",\n              src: \"interact-outside\",\n              focusable\n            });\n          }\n        });\n      }\n    },\n    actions: {\n      restoreFocus(ctx2, evt) {\n        if (evt.focusable) return;\n        raf(() => {\n          const finalEl = ctx2.finalFocusEl?.() ?? dom.getEditTriggerEl(ctx2);\n          finalEl?.focus({\n            preventScroll: true\n          });\n        });\n      },\n      focusInput(ctx2) {\n        raf(() => {\n          const inputEl = dom.getInputEl(ctx2);\n          if (!inputEl) return;\n          if (ctx2.selectOnFocus) {\n            inputEl.select();\n          } else {\n            inputEl.focus({\n              preventScroll: true\n            });\n          }\n        });\n      },\n      invokeOnCancel(ctx2) {\n        ctx2.onValueRevert?.({\n          value: ctx2.previousValue\n        });\n      },\n      invokeOnSubmit(ctx2) {\n        ctx2.onValueCommit?.({\n          value: ctx2.value\n        });\n      },\n      invokeOnEdit(ctx2) {\n        ctx2.onEdit?.();\n      },\n      syncInputValue(ctx2) {\n        sync.value(ctx2);\n      },\n      setValue(ctx2, evt) {\n        const value = ctx2.maxLength != null ? evt.value.slice(0, ctx2.maxLength) : evt.value;\n        set.value(ctx2, value);\n      },\n      setPreviousValue(ctx2) {\n        ctx2.previousValue = ctx2.value;\n      },\n      revertValue(ctx2) {\n        set.value(ctx2, ctx2.previousValue);\n      },\n      blurInputIfNeeded(ctx2) {\n        dom.getInputEl(ctx2)?.blur();\n      }\n    }\n  });\n}\nvar sync = {\n  value: ctx => {\n    const inputEl = dom.getInputEl(ctx);\n    dom.setValue(inputEl, ctx.value);\n  }\n};\nvar invoke = {\n  change(ctx) {\n    ctx.onValueChange?.({\n      value: ctx.value\n    });\n    sync.value(ctx);\n  }\n};\nvar set = {\n  value(ctx, value) {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  }\n};\n\n// src/editable.props.ts\nimport { createProps } from \"@zag-js/types\";\nimport { createSplitProps } from \"@zag-js/utils\";\nvar props = createProps()([\"activationMode\", \"autoResize\", \"dir\", \"disabled\", \"finalFocusEl\", \"form\", \"getRootNode\", \"id\", \"ids\", \"invalid\", \"maxLength\", \"name\", \"onEdit\", \"onFocusOutside\", \"onInteractOutside\", \"onPointerDownOutside\", \"onValueChange\", \"onValueCommit\", \"onValueRevert\", \"placeholder\", \"readOnly\", \"required\", \"selectOnFocus\", \"startWithEditView\", \"submitMode\", \"translations\", \"value\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","anatomy","parts","build","ariaAttr","dataAttr","isComposingEvent","isModKey","createScope","dom","getRootId","ctx","ids","root","id","getAreaId","area","getLabelId","label","getPreviewId","preview","getInputId","input","getControlId","control","getSubmitTriggerId","submitTrigger","getCancelTriggerId","cancelTrigger","getEditTriggerId","editTrigger","getInputEl","getById","getPreviewEl","getSubmitTriggerEl","getCancelTriggerEl","getEditTriggerEl","connect","state","send","normalize","disabled","context","interactive","isInteractive","readOnly","empty","isValueEmpty","invalid","autoResize","translations","editing","matches","placeholderProp","placeholder","edit","value","valueText","setValue","value2","type","clearValue","cancel","submit","getRootProps","element","attrs","dir","getAreaProps","style","display","getLabelProps","htmlFor","onClick","previewEl","focus","preventScroll","getInputProps","name","form","hidden","maxLength","required","defaultValue","size","onChange","event","currentTarget","onKeyDown","defaultPrevented","keyMap","Escape","preventDefault","Enter","event2","submitOnEnter","localName","src","shiftKey","metaKey","exec","key","all","gridArea","visibility","getPreviewProps","children","tabIndex","isPreviewFocusable","onFocus","activationMode","onDoubleClick","whiteSpace","userSelect","overflow","textOverflow","getEditTriggerProps","button","getControlProps","getSubmitTriggerProps","getCancelTriggerProps","createMachine","contains","raf","trackInteractOutside","compact","isEqual","machine","userContext","initial","startWithEditView","entry","submitMode","previousValue","selectOnFocus","watch","computed","ctx2","includes","submitOnBlur","on","SET_VALUE","actions","states","EDIT","target","activities","TYPE","BLUR","guard","CANCEL","SUBMIT","guards","_evt","exclude","ignore","some","el","onFocusOutside","onPointerDownOutside","onInteractOutside","focusable","detail","restoreFocus","evt","finalEl","finalFocusEl","focusInput","inputEl","select","invokeOnCancel","onValueRevert","invokeOnSubmit","onValueCommit","invokeOnEdit","onEdit","syncInputValue","sync","slice","set","setPreviousValue","revertValue","blurInputIfNeeded","blur","invoke","change","onValueChange","createProps","createSplitProps","props","splitProps"],"sources":["C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\editable\\src\\editable.anatomy.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\editable\\src\\editable.connect.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\editable\\src\\editable.dom.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\editable\\src\\editable.machine.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\editable\\src\\editable.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"editable\").parts(\n  \"root\",\n  \"area\",\n  \"label\",\n  \"preview\",\n  \"input\",\n  \"editTrigger\",\n  \"submitTrigger\",\n  \"cancelTrigger\",\n  \"control\",\n)\nexport const parts = anatomy.build()\n","import { type EventKeyMap } from \"@zag-js/dom-event\"\nimport { ariaAttr, dataAttr, isComposingEvent, isModKey } from \"@zag-js/dom-query\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./editable.anatomy\"\nimport { dom } from \"./editable.dom\"\nimport type { MachineApi, Send, State } from \"./editable.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const disabled = state.context.disabled\n  const interactive = state.context.isInteractive\n  const readOnly = state.context.readOnly\n  const empty = state.context.isValueEmpty\n  const invalid = state.context.invalid\n\n  const autoResize = state.context.autoResize\n  const translations = state.context.translations\n\n  const editing = state.matches(\"edit\")\n\n  const placeholderProp = state.context.placeholder\n  const placeholder =\n    typeof placeholderProp === \"string\" ? { edit: placeholderProp, preview: placeholderProp } : placeholderProp\n\n  const value = state.context.value\n  const valueText = empty ? placeholder?.preview ?? \"\" : value\n\n  return {\n    editing,\n    empty,\n    value,\n    valueText,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value })\n    },\n    clearValue() {\n      send({ type: \"SET_VALUE\", value: \"\" })\n    },\n    edit() {\n      if (!interactive) return\n      send(\"EDIT\")\n    },\n    cancel() {\n      if (!interactive) return\n      send(\"CANCEL\")\n    },\n    submit() {\n      if (!interactive) return\n      send(\"SUBMIT\")\n    },\n\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        dir: state.context.dir,\n      })\n    },\n\n    getAreaProps() {\n      return normalize.element({\n        ...parts.area.attrs,\n        id: dom.getAreaId(state.context),\n        dir: state.context.dir,\n        style: autoResize ? { display: \"inline-grid\" } : undefined,\n        \"data-focus\": dataAttr(editing),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-placeholder-shown\": dataAttr(empty),\n      })\n    },\n\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        id: dom.getLabelId(state.context),\n        dir: state.context.dir,\n        htmlFor: dom.getInputId(state.context),\n        \"data-focus\": dataAttr(editing),\n        \"data-invalid\": dataAttr(invalid),\n        onClick() {\n          if (editing) return\n          const previewEl = dom.getPreviewEl(state.context)\n          previewEl?.focus({ preventScroll: true })\n        },\n      })\n    },\n\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        \"aria-label\": translations.input,\n        name: state.context.name,\n        form: state.context.form,\n        id: dom.getInputId(state.context),\n        hidden: autoResize ? undefined : !editing,\n        placeholder: placeholder?.edit,\n        maxLength: state.context.maxLength,\n        required: state.context.required,\n        disabled: disabled,\n        \"data-disabled\": dataAttr(disabled),\n        readOnly: readOnly,\n        \"data-readonly\": dataAttr(readOnly),\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        defaultValue: value,\n        size: autoResize ? 1 : undefined,\n        onChange(event) {\n          send({ type: \"TYPE\", value: event.currentTarget.value })\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return\n          if (isComposingEvent(event)) return\n\n          const keyMap: EventKeyMap = {\n            Escape() {\n              send(\"CANCEL\")\n              event.preventDefault()\n            },\n            Enter(event) {\n              if (!state.context.submitOnEnter) return\n              const { localName } = event.currentTarget\n\n              // when used as a textarea, we want to allow the user to enter a newline\n              if (localName === \"textarea\") {\n                if (!isModKey(event)) return\n                send({ type: \"SUBMIT\", src: \"keydown.enter\" })\n                return\n              }\n\n              // when used as an input, we want to submit the form\n              if (localName === \"input\" && !event.shiftKey && !event.metaKey) {\n                send({ type: \"SUBMIT\", src: \"keydown.enter\" })\n                event.preventDefault()\n              }\n            },\n          }\n\n          const exec = keyMap[event.key]\n\n          if (exec) {\n            exec(event)\n          }\n        },\n        style: autoResize\n          ? {\n              all: \"unset\",\n              gridArea: \"1 / 1 / auto / auto\",\n              visibility: !editing ? \"hidden\" : undefined,\n            }\n          : undefined,\n      })\n    },\n\n    getPreviewProps() {\n      return normalize.element({\n        id: dom.getPreviewId(state.context),\n        ...parts.preview.attrs,\n        dir: state.context.dir,\n        \"data-placeholder-shown\": dataAttr(empty),\n        \"aria-readonly\": ariaAttr(readOnly),\n        \"data-readonly\": dataAttr(disabled),\n        \"data-disabled\": dataAttr(disabled),\n        \"aria-disabled\": ariaAttr(disabled),\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        children: valueText,\n        hidden: autoResize ? undefined : editing,\n        tabIndex: interactive && state.context.isPreviewFocusable ? 0 : undefined,\n        onFocus() {\n          if (!interactive) return\n          if (state.context.activationMode !== \"focus\") return\n          send({ type: \"EDIT\", src: \"focus\" })\n        },\n        onDoubleClick(event) {\n          if (event.defaultPrevented) return\n          if (!interactive) return\n          if (state.context.activationMode !== \"dblclick\") return\n          send({ type: \"EDIT\", src: \"dblclick\" })\n        },\n        style: autoResize\n          ? {\n              whiteSpace: \"pre\",\n              userSelect: \"none\",\n              gridArea: \"1 / 1 / auto / auto\",\n              visibility: editing ? \"hidden\" : undefined,\n              // in event the preview overflow's the parent element\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n            }\n          : undefined,\n      })\n    },\n\n    getEditTriggerProps() {\n      return normalize.button({\n        ...parts.editTrigger.attrs,\n        id: dom.getEditTriggerId(state.context),\n        dir: state.context.dir,\n        \"aria-label\": translations.edit,\n        hidden: editing,\n        type: \"button\",\n        disabled: disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return\n          if (!interactive) return\n          send({ type: \"EDIT\", src: \"edit.click\" })\n        },\n      })\n    },\n\n    getControlProps() {\n      return normalize.element({\n        id: dom.getControlId(state.context),\n        ...parts.control.attrs,\n        dir: state.context.dir,\n      })\n    },\n\n    getSubmitTriggerProps() {\n      return normalize.button({\n        ...parts.submitTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getSubmitTriggerId(state.context),\n        \"aria-label\": translations.submit,\n        hidden: !editing,\n        disabled: disabled,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return\n          if (!interactive) return\n          send({ type: \"SUBMIT\", src: \"submit.click\" })\n        },\n      })\n    },\n\n    getCancelTriggerProps() {\n      return normalize.button({\n        ...parts.cancelTrigger.attrs,\n        dir: state.context.dir,\n        \"aria-label\": translations.cancel,\n        id: dom.getCancelTriggerId(state.context),\n        hidden: !editing,\n        type: \"button\",\n        disabled: disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return\n          if (!interactive) return\n          send({ type: \"CANCEL\", src: \"cancel.click\" })\n        },\n      })\n    },\n  }\n}\n","import { createScope } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./editable.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `editable:${ctx.id}`,\n  getAreaId: (ctx: Ctx) => ctx.ids?.area ?? `editable:${ctx.id}:area`,\n  getLabelId: (ctx: Ctx) => ctx.ids?.label ?? `editable:${ctx.id}:label`,\n  getPreviewId: (ctx: Ctx) => ctx.ids?.preview ?? `editable:${ctx.id}:preview`,\n  getInputId: (ctx: Ctx) => ctx.ids?.input ?? `editable:${ctx.id}:input`,\n  getControlId: (ctx: Ctx) => ctx.ids?.control ?? `editable:${ctx.id}:control`,\n  getSubmitTriggerId: (ctx: Ctx) => ctx.ids?.submitTrigger ?? `editable:${ctx.id}:submit`,\n  getCancelTriggerId: (ctx: Ctx) => ctx.ids?.cancelTrigger ?? `editable:${ctx.id}:cancel`,\n  getEditTriggerId: (ctx: Ctx) => ctx.ids?.editTrigger ?? `editable:${ctx.id}:edit`,\n\n  getInputEl: (ctx: Ctx) => dom.getById<HTMLInputElement>(ctx, dom.getInputId(ctx)),\n  getPreviewEl: (ctx: Ctx) => dom.getById<HTMLInputElement>(ctx, dom.getPreviewId(ctx)),\n  getSubmitTriggerEl: (ctx: Ctx) => dom.getById<HTMLButtonElement>(ctx, dom.getSubmitTriggerId(ctx)),\n  getCancelTriggerEl: (ctx: Ctx) => dom.getById<HTMLButtonElement>(ctx, dom.getCancelTriggerId(ctx)),\n  getEditTriggerEl: (ctx: Ctx) => dom.getById<HTMLButtonElement>(ctx, dom.getEditTriggerId(ctx)),\n})\n","import { createMachine } from \"@zag-js/core\"\nimport { contains, raf } from \"@zag-js/dom-query\"\nimport { trackInteractOutside } from \"@zag-js/interact-outside\"\nimport { compact, isEqual } from \"@zag-js/utils\"\nimport { dom } from \"./editable.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./editable.types\"\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"editable\",\n\n      initial: ctx.startWithEditView ? \"edit\" : \"preview\",\n      entry: ctx.startWithEditView ? [\"focusInput\"] : undefined,\n\n      context: {\n        activationMode: \"focus\",\n        submitMode: \"both\",\n        value: \"\",\n        previousValue: \"\",\n        selectOnFocus: true,\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        translations: {\n          input: \"editable input\",\n          edit: \"edit\",\n          submit: \"submit\",\n          cancel: \"cancel\",\n          ...ctx.translations,\n        },\n      },\n\n      watch: {\n        value: [\"syncInputValue\"],\n      },\n\n      computed: {\n        submitOnEnter: (ctx) => [\"both\", \"enter\"].includes(ctx.submitMode),\n        submitOnBlur: (ctx) => [\"both\", \"blur\"].includes(ctx.submitMode),\n        isInteractive: (ctx) => !(ctx.disabled || ctx.readOnly),\n        isValueEmpty: (ctx) => ctx.value === \"\",\n        isPreviewFocusable: (ctx) => ctx.activationMode === \"focus\",\n      },\n\n      on: {\n        SET_VALUE: {\n          actions: \"setValue\",\n        },\n      },\n\n      states: {\n        preview: {\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=559561\n          entry: [\"blurInputIfNeeded\"],\n          on: {\n            EDIT: {\n              target: \"edit\",\n              actions: [\"setPreviousValue\", \"focusInput\", \"invokeOnEdit\"],\n            },\n          },\n        },\n\n        edit: {\n          activities: [\"trackInteractOutside\"],\n          on: {\n            TYPE: {\n              actions: \"setValue\",\n            },\n            BLUR: [\n              {\n                guard: \"submitOnBlur\",\n                target: \"preview\",\n                actions: [\"restoreFocus\", \"invokeOnSubmit\"],\n              },\n              {\n                target: \"preview\",\n                actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\"],\n              },\n            ],\n            CANCEL: {\n              target: \"preview\",\n              actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\"],\n            },\n            SUBMIT: {\n              target: \"preview\",\n              actions: [\"setPreviousValue\", \"restoreFocus\", \"invokeOnSubmit\"],\n            },\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        submitOnBlur: (ctx) => ctx.submitOnBlur,\n      },\n\n      activities: {\n        trackInteractOutside(ctx, _evt, { send }) {\n          return trackInteractOutside(dom.getInputEl(ctx), {\n            exclude(target) {\n              const ignore = [dom.getCancelTriggerEl(ctx), dom.getSubmitTriggerEl(ctx)]\n              return ignore.some((el) => contains(el, target))\n            },\n            onFocusOutside: ctx.onFocusOutside,\n            onPointerDownOutside: ctx.onPointerDownOutside,\n            onInteractOutside(event) {\n              ctx.onInteractOutside?.(event)\n              if (event.defaultPrevented) return\n              const { focusable } = event.detail\n              send({ type: \"BLUR\", src: \"interact-outside\", focusable })\n            },\n          })\n        },\n      },\n\n      actions: {\n        restoreFocus(ctx, evt) {\n          if (evt.focusable) return\n          raf(() => {\n            const finalEl = ctx.finalFocusEl?.() ?? dom.getEditTriggerEl(ctx)\n            finalEl?.focus({ preventScroll: true })\n          })\n        },\n        focusInput(ctx) {\n          raf(() => {\n            const inputEl = dom.getInputEl(ctx)\n            if (!inputEl) return\n            if (ctx.selectOnFocus) {\n              inputEl.select()\n            } else {\n              inputEl.focus({ preventScroll: true })\n            }\n          })\n        },\n        invokeOnCancel(ctx) {\n          ctx.onValueRevert?.({ value: ctx.previousValue })\n        },\n        invokeOnSubmit(ctx) {\n          ctx.onValueCommit?.({ value: ctx.value })\n        },\n        invokeOnEdit(ctx) {\n          ctx.onEdit?.()\n        },\n        syncInputValue(ctx) {\n          sync.value(ctx)\n        },\n        setValue(ctx, evt) {\n          const value = ctx.maxLength != null ? evt.value.slice(0, ctx.maxLength) : evt.value\n          set.value(ctx, value)\n        },\n        setPreviousValue(ctx) {\n          ctx.previousValue = ctx.value\n        },\n        revertValue(ctx) {\n          set.value(ctx, ctx.previousValue)\n        },\n        blurInputIfNeeded(ctx) {\n          dom.getInputEl(ctx)?.blur()\n        },\n      },\n    },\n  )\n}\n\nconst sync = {\n  value: (ctx: MachineContext) => {\n    const inputEl = dom.getInputEl(ctx)\n    dom.setValue(inputEl, ctx.value)\n  },\n}\n\nconst invoke = {\n  change(ctx: MachineContext) {\n    ctx.onValueChange?.({ value: ctx.value })\n    sync.value(ctx)\n  },\n}\n\nconst set = {\n  value(ctx: MachineContext, value: string) {\n    if (isEqual(ctx.value, value)) return\n    ctx.value = value\n    invoke.change(ctx)\n  },\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { UserDefinedContext } from \"./editable.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"activationMode\",\n  \"autoResize\",\n  \"dir\",\n  \"disabled\",\n  \"finalFocusEl\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"maxLength\",\n  \"name\",\n  \"onEdit\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"onValueCommit\",\n  \"onValueRevert\",\n  \"placeholder\",\n  \"readOnly\",\n  \"required\",\n  \"selectOnFocus\",\n  \"startWithEditView\",\n  \"submitMode\",\n  \"translations\",\n  \"value\",\n])\n\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
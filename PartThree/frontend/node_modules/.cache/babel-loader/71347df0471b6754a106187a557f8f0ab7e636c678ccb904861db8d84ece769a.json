{"ast":null,"code":"// src/slider.anatomy.ts\nimport { createAnatomy } from \"@zag-js/anatomy\";\nvar anatomy = createAnatomy(\"slider\").parts(\"root\", \"label\", \"thumb\", \"valueText\", \"track\", \"range\", \"control\", \"markerGroup\", \"marker\");\nvar parts = anatomy.build();\n\n// src/slider.connect.ts\nimport { getEventKey, getEventPoint, getEventStep, isLeftClick, isModifierKey } from \"@zag-js/dom-event\";\nimport { ariaAttr, dataAttr } from \"@zag-js/dom-query\";\nimport { getPercentValue as getPercentValue2, getValuePercent as getValuePercent2 } from \"@zag-js/numeric-range\";\n\n// src/slider.dom.ts\nimport { getRelativePoint } from \"@zag-js/dom-event\";\nimport { createScope, queryAll } from \"@zag-js/dom-query\";\nimport { dispatchInputValueEvent } from \"@zag-js/form-utils\";\nimport { getPercentValue } from \"@zag-js/numeric-range\";\n\n// src/slider.style.ts\nimport { getValuePercent, getValueTransformer } from \"@zag-js/numeric-range\";\nfunction getBounds(value) {\n  const firstValue = value[0];\n  const lastThumb = value[value.length - 1];\n  return [firstValue, lastThumb];\n}\nfunction getRangeOffsets(ctx) {\n  const [firstPercent, lastPercent] = getBounds(ctx.valuePercent);\n  if (ctx.valuePercent.length === 1) {\n    if (ctx.origin === \"center\") {\n      const isNegative = ctx.valuePercent[0] < 50;\n      const start = isNegative ? `${ctx.valuePercent[0]}%` : \"50%\";\n      const end = isNegative ? \"50%\" : `${100 - ctx.valuePercent[0]}%`;\n      return {\n        start,\n        end\n      };\n    }\n    return {\n      start: \"0%\",\n      end: `${100 - lastPercent}%`\n    };\n  }\n  return {\n    start: `${firstPercent}%`,\n    end: `${100 - lastPercent}%`\n  };\n}\nfunction getRangeStyle(ctx) {\n  if (ctx.isVertical) {\n    return {\n      position: \"absolute\",\n      bottom: \"var(--slider-range-start)\",\n      top: \"var(--slider-range-end)\"\n    };\n  }\n  return {\n    position: \"absolute\",\n    [ctx.isRtl ? \"right\" : \"left\"]: \"var(--slider-range-start)\",\n    [ctx.isRtl ? \"left\" : \"right\"]: \"var(--slider-range-end)\"\n  };\n}\nfunction getVerticalThumbOffset(ctx) {\n  const {\n    height = 0\n  } = ctx.thumbSize ?? {};\n  const getValue = getValueTransformer([ctx.min, ctx.max], [-height / 2, height / 2]);\n  return parseFloat(getValue(ctx.value).toFixed(2));\n}\nfunction getHorizontalThumbOffset(ctx) {\n  const {\n    width = 0\n  } = ctx.thumbSize ?? {};\n  if (ctx.isRtl) {\n    const getValue2 = getValueTransformer([ctx.max, ctx.min], [-width / 2, width / 2]);\n    return -1 * parseFloat(getValue2(ctx.value).toFixed(2));\n  }\n  const getValue = getValueTransformer([ctx.min, ctx.max], [-width / 2, width / 2]);\n  return parseFloat(getValue(ctx.value).toFixed(2));\n}\nfunction getOffset(ctx, percent) {\n  if (ctx.thumbAlignment === \"center\") return `${percent}%`;\n  const offset = ctx.isVertical ? getVerticalThumbOffset(ctx) : getHorizontalThumbOffset(ctx);\n  return `calc(${percent}% - ${offset}px)`;\n}\nfunction getThumbOffset(ctx) {\n  let percent = getValuePercent(ctx.value, ctx.min, ctx.max) * 100;\n  return getOffset(ctx, percent);\n}\nfunction getVisibility(ctx) {\n  let visibility = \"visible\";\n  if (ctx.thumbAlignment === \"contain\" && !ctx.hasMeasuredThumbSize) {\n    visibility = \"hidden\";\n  }\n  return visibility;\n}\nfunction getThumbStyle(ctx, index) {\n  const placementProp = ctx.isVertical ? \"bottom\" : \"insetInlineStart\";\n  return {\n    visibility: getVisibility(ctx),\n    position: \"absolute\",\n    transform: \"var(--slider-thumb-transform)\",\n    [placementProp]: `var(--slider-thumb-offset-${index})`\n  };\n}\nfunction getControlStyle() {\n  return {\n    touchAction: \"none\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    position: \"relative\"\n  };\n}\nfunction getRootStyle(ctx) {\n  const range = getRangeOffsets(ctx);\n  const offsetStyles = ctx.value.reduce((styles, value, index) => {\n    const offset = getThumbOffset({\n      ...ctx,\n      value\n    });\n    return {\n      ...styles,\n      [`--slider-thumb-offset-${index}`]: offset\n    };\n  }, {});\n  return {\n    ...offsetStyles,\n    \"--slider-thumb-transform\": ctx.isVertical ? \"translateY(50%)\" : ctx.isRtl ? \"translateX(50%)\" : \"translateX(-50%)\",\n    \"--slider-range-start\": range.start,\n    \"--slider-range-end\": range.end\n  };\n}\nfunction getMarkerStyle(ctx, value) {\n  return {\n    // @ts-expect-error\n    visibility: getVisibility(ctx),\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    // @ts-expect-error\n    [ctx.isHorizontal ? \"insetInlineStart\" : \"bottom\"]: getThumbOffset({\n      ...ctx,\n      value\n    }),\n    translate: \"var(--tx) var(--ty)\",\n    \"--tx\": ctx.isHorizontal ? ctx.isRtl ? \"50%\" : \"-50%\" : \"0%\",\n    \"--ty\": !ctx.isHorizontal ? \"50%\" : \"0%\"\n  };\n}\nfunction getMarkerGroupStyle() {\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    pointerEvents: \"none\",\n    position: \"relative\"\n  };\n}\nvar styleGetterFns = {\n  getRootStyle,\n  getControlStyle,\n  getThumbStyle,\n  getRangeStyle,\n  getMarkerStyle,\n  getMarkerGroupStyle\n};\n\n// src/slider.dom.ts\nvar dom = createScope({\n  ...styleGetterFns,\n  getRootId: ctx => ctx.ids?.root ?? `slider:${ctx.id}`,\n  getThumbId: (ctx, index) => ctx.ids?.thumb?.(index) ?? `slider:${ctx.id}:thumb:${index}`,\n  getHiddenInputId: (ctx, index) => ctx.ids?.hiddenInput?.(index) ?? `slider:${ctx.id}:input:${index}`,\n  getControlId: ctx => ctx.ids?.control ?? `slider:${ctx.id}:control`,\n  getTrackId: ctx => ctx.ids?.track ?? `slider:${ctx.id}:track`,\n  getRangeId: ctx => ctx.ids?.range ?? `slider:${ctx.id}:range`,\n  getLabelId: ctx => ctx.ids?.label ?? `slider:${ctx.id}:label`,\n  getValueTextId: ctx => ctx.ids?.valueText ?? `slider:${ctx.id}:value-text`,\n  getMarkerId: (ctx, value) => ctx.ids?.marker?.(value) ?? `slider:${ctx.id}:marker:${value}`,\n  getRootEl: ctx => dom.getById(ctx, dom.getRootId(ctx)),\n  getThumbEl: (ctx, index) => dom.getById(ctx, dom.getThumbId(ctx, index)),\n  getHiddenInputEl: (ctx, index) => dom.getById(ctx, dom.getHiddenInputId(ctx, index)),\n  getControlEl: ctx => dom.getById(ctx, dom.getControlId(ctx)),\n  getElements: ctx => queryAll(dom.getControlEl(ctx), \"[role=slider]\"),\n  getFirstEl: ctx => dom.getElements(ctx)[0],\n  getRangeEl: ctx => dom.getById(ctx, dom.getRangeId(ctx)),\n  getValueFromPoint(ctx, point) {\n    const controlEl = dom.getControlEl(ctx);\n    if (!controlEl) return;\n    const relativePoint = getRelativePoint(point, controlEl);\n    const percent = relativePoint.getPercentValue({\n      orientation: ctx.orientation,\n      dir: ctx.dir,\n      inverted: {\n        y: true\n      }\n    });\n    return getPercentValue(percent, ctx.min, ctx.max, ctx.step);\n  },\n  dispatchChangeEvent(ctx) {\n    const valueArray = Array.from(ctx.value);\n    valueArray.forEach((value, index) => {\n      const inputEl = dom.getHiddenInputEl(ctx, index);\n      if (!inputEl) return;\n      dispatchInputValueEvent(inputEl, {\n        value\n      });\n    });\n  }\n});\n\n// src/slider.utils.ts\nimport { clampValue, getClosestValueIndex, getNextStepValue, getPreviousStepValue, getValueRanges, snapValueToStep } from \"@zag-js/numeric-range\";\nfunction normalizeValues(ctx, nextValues) {\n  return nextValues.map((value, index, values) => {\n    return constrainValue({\n      ...ctx,\n      value: values\n    }, value, index);\n  });\n}\nfunction getRangeAtIndex(ctx, index) {\n  return getValueRanges(ctx.value, ctx.min, ctx.max, ctx.minStepsBetweenThumbs)[index];\n}\nfunction constrainValue(ctx, value, index) {\n  const range = getRangeAtIndex(ctx, index);\n  const snapValue = snapValueToStep(value, ctx.min, ctx.max, ctx.step);\n  return clampValue(snapValue, range.min, range.max);\n}\nfunction decrement(ctx, index, step) {\n  const idx = index ?? ctx.focusedIndex;\n  const range = getRangeAtIndex(ctx, idx);\n  const nextValues = getPreviousStepValue(idx, {\n    ...range,\n    step: step ?? ctx.step,\n    values: ctx.value\n  });\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction increment(ctx, index, step) {\n  const idx = index ?? ctx.focusedIndex;\n  const range = getRangeAtIndex(ctx, idx);\n  const nextValues = getNextStepValue(idx, {\n    ...range,\n    step: step ?? ctx.step,\n    values: ctx.value\n  });\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction getClosestIndex(ctx, pointValue) {\n  return getClosestValueIndex(ctx.value, pointValue);\n}\nfunction assignArray(current, next) {\n  for (let i = 0; i < next.length; i++) {\n    const value = next[i];\n    current[i] = value;\n  }\n}\n\n// src/slider.connect.ts\nfunction connect(state, send, normalize) {\n  const ariaLabel = state.context[\"aria-label\"];\n  const ariaLabelledBy = state.context[\"aria-labelledby\"];\n  const sliderValue = state.context.value;\n  const focused = state.matches(\"focus\");\n  const dragging = state.matches(\"dragging\");\n  const disabled = state.context.isDisabled;\n  const invalid = state.context.invalid;\n  const interactive = state.context.isInteractive;\n  const isHorizontal = state.context.orientation === \"horizontal\";\n  const isVertical = state.context.orientation === \"vertical\";\n  function getValuePercentFn(value) {\n    return getValuePercent2(value, state.context.min, state.context.max);\n  }\n  function getPercentValueFn(percent) {\n    return getPercentValue2(percent, state.context.min, state.context.max, state.context.step);\n  }\n  return {\n    value: state.context.value,\n    dragging,\n    focused,\n    setValue(value) {\n      send({\n        type: \"SET_VALUE\",\n        value\n      });\n    },\n    getThumbValue(index) {\n      return sliderValue[index];\n    },\n    setThumbValue(index, value) {\n      send({\n        type: \"SET_VALUE\",\n        index,\n        value\n      });\n    },\n    getValuePercent: getValuePercentFn,\n    getPercentValue: getPercentValueFn,\n    getThumbPercent(index) {\n      return getValuePercentFn(sliderValue[index]);\n    },\n    setThumbPercent(index, percent) {\n      const value = getPercentValueFn(percent);\n      send({\n        type: \"SET_VALUE\",\n        index,\n        value\n      });\n    },\n    getThumbMin(index) {\n      return getRangeAtIndex(state.context, index).min;\n    },\n    getThumbMax(index) {\n      return getRangeAtIndex(state.context, index).max;\n    },\n    increment(index) {\n      send({\n        type: \"INCREMENT\",\n        index\n      });\n    },\n    decrement(index) {\n      send({\n        type: \"DECREMENT\",\n        index\n      });\n    },\n    focus() {\n      if (!interactive) return;\n      send({\n        type: \"FOCUS\",\n        index: 0\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context, 0),\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          dom.getFirstEl(state.context)?.focus();\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-dragging\": dataAttr(dragging),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: dom.getRootId(state.context),\n        dir: state.context.dir,\n        style: dom.getRootStyle(state.context)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: dom.getValueTextId(state.context)\n      });\n    },\n    getTrackProps() {\n      return normalize.element({\n        ...parts.track.attrs,\n        dir: state.context.dir,\n        id: dom.getTrackId(state.context),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": dataAttr(focused),\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getThumbProps(props2) {\n      const {\n        index = 0,\n        name\n      } = props2;\n      const value = sliderValue[index];\n      const range = getRangeAtIndex(state.context, index);\n      const valueText = state.context.getAriaValueText?.({\n        value,\n        index\n      });\n      const _ariaLabel = Array.isArray(ariaLabel) ? ariaLabel[index] : ariaLabel;\n      const _ariaLabelledBy = Array.isArray(ariaLabelledBy) ? ariaLabelledBy[index] : ariaLabelledBy;\n      return normalize.element({\n        ...parts.thumb.attrs,\n        dir: state.context.dir,\n        \"data-index\": index,\n        \"data-name\": name,\n        id: dom.getThumbId(state.context, index),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": dataAttr(focused && state.context.focusedIndex === index),\n        \"data-dragging\": dataAttr(dragging && state.context.focusedIndex === index),\n        draggable: false,\n        \"aria-disabled\": ariaAttr(disabled),\n        \"aria-label\": _ariaLabel,\n        \"aria-labelledby\": _ariaLabelledBy ?? dom.getLabelId(state.context),\n        \"aria-orientation\": state.context.orientation,\n        \"aria-valuemax\": range.max,\n        \"aria-valuemin\": range.min,\n        \"aria-valuenow\": sliderValue[index],\n        \"aria-valuetext\": valueText,\n        role: \"slider\",\n        tabIndex: disabled ? void 0 : 0,\n        style: dom.getThumbStyle(state.context, index),\n        onPointerDown(event) {\n          if (!interactive) return;\n          send({\n            type: \"THUMB_POINTER_DOWN\",\n            index\n          });\n          event.stopPropagation();\n        },\n        onBlur() {\n          if (!interactive) return;\n          send(\"BLUR\");\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({\n            type: \"FOCUS\",\n            index\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = getEventStep(event) * state.context.step;\n          const keyMap = {\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({\n                type: \"ARROW_INC\",\n                step,\n                src: \"ArrowUp\"\n              });\n            },\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({\n                type: \"ARROW_DEC\",\n                step,\n                src: \"ArrowDown\"\n              });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({\n                type: \"ARROW_DEC\",\n                step,\n                src: \"ArrowLeft\"\n              });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({\n                type: \"ARROW_INC\",\n                step,\n                src: \"ArrowRight\"\n              });\n            },\n            PageUp() {\n              send({\n                type: \"ARROW_INC\",\n                step,\n                src: \"PageUp\"\n              });\n            },\n            PageDown() {\n              send({\n                type: \"ARROW_DEC\",\n                step,\n                src: \"PageDown\"\n              });\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            }\n          };\n          const key = getEventKey(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      const {\n        index = 0,\n        name\n      } = props2;\n      return normalize.input({\n        name: name ?? (state.context.name ? state.context.name + (state.context.value.length > 1 ? \"[]\" : \"\") : void 0),\n        form: state.context.form,\n        type: \"text\",\n        hidden: true,\n        defaultValue: state.context.value[index],\n        id: dom.getHiddenInputId(state.context, index)\n      });\n    },\n    getRangeProps() {\n      return normalize.element({\n        id: dom.getRangeId(state.context),\n        ...parts.range.attrs,\n        dir: state.context.dir,\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        style: dom.getRangeStyle(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        style: dom.getControlStyle(),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!isLeftClick(event)) return;\n          if (isModifierKey(event)) return;\n          const point = getEventPoint(event);\n          send({\n            type: \"POINTER_DOWN\",\n            point\n          });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      });\n    },\n    getMarkerGroupProps() {\n      return normalize.element({\n        ...parts.markerGroup.attrs,\n        role: \"presentation\",\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-orientation\": state.context.orientation,\n        style: dom.getMarkerGroupStyle()\n      });\n    },\n    getMarkerProps(props2) {\n      const style = dom.getMarkerStyle(state.context, props2.value);\n      let markerState;\n      const first = state.context.value[0];\n      const last = state.context.value[state.context.value.length - 1];\n      if (props2.value < first) {\n        markerState = \"under-value\";\n      } else if (props2.value > last) {\n        markerState = \"over-value\";\n      } else {\n        markerState = \"at-value\";\n      }\n      return normalize.element({\n        ...parts.marker.attrs,\n        id: dom.getMarkerId(state.context, props2.value),\n        role: \"presentation\",\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-value\": props2.value,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-state\": markerState,\n        style\n      });\n    }\n  };\n}\n\n// src/slider.machine.ts\nimport { createMachine } from \"@zag-js/core\";\nimport { trackPointerMove } from \"@zag-js/dom-event\";\nimport { raf } from \"@zag-js/dom-query\";\nimport { trackElementsSize } from \"@zag-js/element-size\";\nimport { trackFormControl } from \"@zag-js/form-utils\";\nimport { getValuePercent as getValuePercent3 } from \"@zag-js/numeric-range\";\nimport { compact, isEqual } from \"@zag-js/utils\";\nvar isEqualSize = (a, b) => {\n  return a?.width === b?.width && a?.height === b?.height;\n};\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"slider\",\n    initial: \"idle\",\n    context: {\n      thumbSize: null,\n      thumbAlignment: \"contain\",\n      min: 0,\n      max: 100,\n      step: 1,\n      value: [0],\n      origin: \"start\",\n      orientation: \"horizontal\",\n      dir: \"ltr\",\n      minStepsBetweenThumbs: 0,\n      disabled: false,\n      readOnly: false,\n      ...ctx,\n      focusedIndex: -1,\n      fieldsetDisabled: false\n    },\n    computed: {\n      isHorizontal: ctx2 => ctx2.orientation === \"horizontal\",\n      isVertical: ctx2 => ctx2.orientation === \"vertical\",\n      isRtl: ctx2 => ctx2.orientation === \"horizontal\" && ctx2.dir === \"rtl\",\n      isDisabled: ctx2 => !!ctx2.disabled || ctx2.fieldsetDisabled,\n      isInteractive: ctx2 => !(ctx2.readOnly || ctx2.isDisabled),\n      hasMeasuredThumbSize: ctx2 => ctx2.thumbSize != null,\n      valuePercent(ctx2) {\n        return ctx2.value.map(value => 100 * getValuePercent3(value, ctx2.min, ctx2.max));\n      }\n    },\n    watch: {\n      value: [\"syncInputElements\"]\n    },\n    entry: [\"coarseValue\"],\n    activities: [\"trackFormControlState\", \"trackThumbsSize\"],\n    on: {\n      SET_VALUE: [{\n        guard: \"hasIndex\",\n        actions: \"setValueAtIndex\"\n      }, {\n        actions: \"setValue\"\n      }],\n      INCREMENT: {\n        actions: \"incrementThumbAtIndex\"\n      },\n      DECREMENT: {\n        actions: \"decrementThumbAtIndex\"\n      }\n    },\n    states: {\n      idle: {\n        on: {\n          POINTER_DOWN: {\n            target: \"dragging\",\n            actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n          },\n          FOCUS: {\n            target: \"focus\",\n            actions: \"setFocusedIndex\"\n          },\n          THUMB_POINTER_DOWN: {\n            target: \"dragging\",\n            actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n          }\n        }\n      },\n      focus: {\n        entry: \"focusActiveThumb\",\n        on: {\n          POINTER_DOWN: {\n            target: \"dragging\",\n            actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n          },\n          THUMB_POINTER_DOWN: {\n            target: \"dragging\",\n            actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n          },\n          ARROW_DEC: {\n            actions: [\"decrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n          },\n          ARROW_INC: {\n            actions: [\"incrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n          },\n          HOME: {\n            actions: [\"setFocusedThumbToMin\", \"invokeOnChangeEnd\"]\n          },\n          END: {\n            actions: [\"setFocusedThumbToMax\", \"invokeOnChangeEnd\"]\n          },\n          BLUR: {\n            target: \"idle\",\n            actions: \"clearFocusedIndex\"\n          }\n        }\n      },\n      dragging: {\n        entry: \"focusActiveThumb\",\n        activities: \"trackPointerMove\",\n        on: {\n          POINTER_UP: {\n            target: \"focus\",\n            actions: \"invokeOnChangeEnd\"\n          },\n          POINTER_MOVE: {\n            actions: \"setPointerValue\"\n          }\n        }\n      }\n    }\n  }, {\n    guards: {\n      hasIndex: (_ctx, evt) => evt.index != null\n    },\n    activities: {\n      trackFormControlState(ctx2, _evt, {\n        initialContext\n      }) {\n        return trackFormControl(dom.getRootEl(ctx2), {\n          onFieldsetDisabledChange(disabled) {\n            ctx2.fieldsetDisabled = disabled;\n          },\n          onFormReset() {\n            set.value(ctx2, initialContext.value);\n          }\n        });\n      },\n      trackPointerMove(ctx2, _evt, {\n        send\n      }) {\n        return trackPointerMove(dom.getDoc(ctx2), {\n          onPointerMove(info) {\n            send({\n              type: \"POINTER_MOVE\",\n              point: info.point\n            });\n          },\n          onPointerUp() {\n            send(\"POINTER_UP\");\n          }\n        });\n      },\n      trackThumbsSize(ctx2) {\n        if (ctx2.thumbAlignment !== \"contain\" || ctx2.thumbSize) return;\n        return trackElementsSize({\n          getNodes: () => dom.getElements(ctx2),\n          observeMutation: true,\n          callback(size) {\n            if (!size || isEqualSize(ctx2.thumbSize, size)) return;\n            ctx2.thumbSize = size;\n          }\n        });\n      }\n    },\n    actions: {\n      syncInputElements(ctx2) {\n        ctx2.value.forEach((value, index) => {\n          const inputEl = dom.getHiddenInputEl(ctx2, index);\n          dom.setValue(inputEl, value);\n        });\n      },\n      invokeOnChangeEnd(ctx2) {\n        ctx2.onValueChangeEnd?.({\n          value: ctx2.value\n        });\n      },\n      setClosestThumbIndex(ctx2, evt) {\n        const pointValue = dom.getValueFromPoint(ctx2, evt.point);\n        if (pointValue == null) return;\n        const focusedIndex = getClosestIndex(ctx2, pointValue);\n        set.focusedIndex(ctx2, focusedIndex);\n      },\n      setFocusedIndex(ctx2, evt) {\n        set.focusedIndex(ctx2, evt.index);\n      },\n      clearFocusedIndex(ctx2) {\n        set.focusedIndex(ctx2, -1);\n      },\n      setPointerValue(ctx2, evt) {\n        const pointerValue = dom.getValueFromPoint(ctx2, evt.point);\n        if (pointerValue == null) return;\n        const value = constrainValue(ctx2, pointerValue, ctx2.focusedIndex);\n        set.valueAtIndex(ctx2, ctx2.focusedIndex, value);\n      },\n      focusActiveThumb(ctx2) {\n        raf(() => {\n          const thumbEl = dom.getThumbEl(ctx2, ctx2.focusedIndex);\n          thumbEl?.focus({\n            preventScroll: true\n          });\n        });\n      },\n      decrementThumbAtIndex(ctx2, evt) {\n        const value = decrement(ctx2, evt.index, evt.step);\n        set.value(ctx2, value);\n      },\n      incrementThumbAtIndex(ctx2, evt) {\n        const value = increment(ctx2, evt.index, evt.step);\n        set.value(ctx2, value);\n      },\n      setFocusedThumbToMin(ctx2) {\n        const {\n          min\n        } = getRangeAtIndex(ctx2, ctx2.focusedIndex);\n        set.valueAtIndex(ctx2, ctx2.focusedIndex, min);\n      },\n      setFocusedThumbToMax(ctx2) {\n        const {\n          max\n        } = getRangeAtIndex(ctx2, ctx2.focusedIndex);\n        set.valueAtIndex(ctx2, ctx2.focusedIndex, max);\n      },\n      coarseValue(ctx2) {\n        const value = normalizeValues(ctx2, ctx2.value);\n        set.value(ctx2, value);\n      },\n      setValueAtIndex(ctx2, evt) {\n        const value = constrainValue(ctx2, evt.value, evt.index);\n        set.valueAtIndex(ctx2, evt.index, value);\n      },\n      setValue(ctx2, evt) {\n        const value = normalizeValues(ctx2, evt.value);\n        set.value(ctx2, value);\n      }\n    }\n  });\n}\nvar invoke = {\n  change: ctx => {\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value)\n    });\n    dom.dispatchChangeEvent(ctx);\n  },\n  focusChange: ctx => {\n    ctx.onFocusChange?.({\n      value: Array.from(ctx.value),\n      focusedIndex: ctx.focusedIndex\n    });\n  }\n};\nvar set = {\n  valueAtIndex: (ctx, index, value) => {\n    if (isEqual(ctx.value[index], value)) return;\n    ctx.value[index] = value;\n    invoke.change(ctx);\n  },\n  value: (ctx, value) => {\n    if (isEqual(ctx.value, value)) return;\n    assignArray(ctx.value, value);\n    invoke.change(ctx);\n  },\n  focusedIndex: (ctx, index) => {\n    if (isEqual(ctx.focusedIndex, index)) return;\n    ctx.focusedIndex = index;\n    invoke.focusChange(ctx);\n  }\n};\n\n// src/slider.props.ts\nimport { createProps } from \"@zag-js/types\";\nimport { createSplitProps } from \"@zag-js/utils\";\nvar props = createProps()([\"aria-label\", \"aria-labelledby\", \"dir\", \"disabled\", \"form\", \"getAriaValueText\", \"getRootNode\", \"id\", \"ids\", \"invalid\", \"max\", \"min\", \"minStepsBetweenThumbs\", \"name\", \"onFocusChange\", \"onValueChange\", \"onValueChangeEnd\", \"orientation\", \"origin\", \"readOnly\", \"step\", \"thumbAlignment\", \"thumbAlignment\", \"thumbSize\", \"value\"]);\nvar splitProps = createSplitProps(props);\nvar thumbProps = createProps()([\"index\", \"name\"]);\nvar splitThumbProps = createSplitProps(thumbProps);\nexport { anatomy, connect, machine, props, splitProps, splitThumbProps, thumbProps };","map":{"version":3,"names":["createAnatomy","anatomy","parts","build","getEventKey","getEventPoint","getEventStep","isLeftClick","isModifierKey","ariaAttr","dataAttr","getPercentValue","getPercentValue2","getValuePercent","getValuePercent2","getRelativePoint","createScope","queryAll","dispatchInputValueEvent","getValueTransformer","getBounds","value","firstValue","lastThumb","length","getRangeOffsets","ctx","firstPercent","lastPercent","valuePercent","origin","isNegative","start","end","getRangeStyle","isVertical","position","bottom","top","isRtl","getVerticalThumbOffset","height","thumbSize","getValue","min","max","parseFloat","toFixed","getHorizontalThumbOffset","width","getValue2","getOffset","percent","thumbAlignment","offset","getThumbOffset","getVisibility","visibility","hasMeasuredThumbSize","getThumbStyle","index","placementProp","transform","getControlStyle","touchAction","userSelect","WebkitUserSelect","getRootStyle","range","offsetStyles","reduce","styles","getMarkerStyle","pointerEvents","isHorizontal","translate","getMarkerGroupStyle","styleGetterFns","dom","getRootId","ids","root","id","getThumbId","thumb","getHiddenInputId","hiddenInput","getControlId","control","getTrackId","track","getRangeId","getLabelId","label","getValueTextId","valueText","getMarkerId","marker","getRootEl","getById","getThumbEl","getHiddenInputEl","getControlEl","getElements","getFirstEl","getRangeEl","getValueFromPoint","point","controlEl","relativePoint","orientation","dir","inverted","y","step","dispatchChangeEvent","valueArray","Array","from","forEach","inputEl","clampValue","getClosestValueIndex","getNextStepValue","getPreviousStepValue","getValueRanges","snapValueToStep","normalizeValues","nextValues","map","values","constrainValue","getRangeAtIndex","minStepsBetweenThumbs","snapValue","decrement","idx","focusedIndex","increment","getClosestIndex","pointValue","assignArray","current","next","i","connect","state","send","normalize","ariaLabel","context","ariaLabelledBy","sliderValue","focused","matches","dragging","disabled","isDisabled","invalid","interactive","isInteractive","getValuePercentFn","getPercentValueFn","setValue","type","getThumbValue","setThumbValue","getThumbPercent","setThumbPercent","getThumbMin","getThumbMax","focus","getLabelProps","attrs","htmlFor","onClick","event","preventDefault","style","getRootProps","element","getValueTextProps","getTrackProps","getThumbProps","props2","name","getAriaValueText","_ariaLabel","isArray","_ariaLabelledBy","draggable","role","tabIndex","onPointerDown","stopPropagation","onBlur","onFocus","onKeyDown","defaultPrevented","keyMap","ArrowUp","src","ArrowDown","ArrowLeft","ArrowRight","PageUp","PageDown","Home","End","key","exec","getHiddenInputProps","input","form","hidden","defaultValue","getRangeProps","getControlProps","getMarkerGroupProps","markerGroup","getMarkerProps","markerState","first","last","createMachine","trackPointerMove","raf","trackElementsSize","trackFormControl","getValuePercent3","compact","isEqual","isEqualSize","a","b","machine","userContext","initial","readOnly","fieldsetDisabled","computed","ctx2","watch","entry","activities","on","SET_VALUE","guard","actions","INCREMENT","DECREMENT","states","idle","POINTER_DOWN","target","FOCUS","THUMB_POINTER_DOWN","ARROW_DEC","ARROW_INC","HOME","END","BLUR","POINTER_UP","POINTER_MOVE","guards","hasIndex","_ctx","evt","trackFormControlState","_evt","initialContext","onFieldsetDisabledChange","onFormReset","set","getDoc","onPointerMove","info","onPointerUp","trackThumbsSize","getNodes","observeMutation","callback","size","syncInputElements","invokeOnChangeEnd","onValueChangeEnd","setClosestThumbIndex","setFocusedIndex","clearFocusedIndex","setPointerValue","pointerValue","valueAtIndex","focusActiveThumb","thumbEl","preventScroll","decrementThumbAtIndex","incrementThumbAtIndex","setFocusedThumbToMin","setFocusedThumbToMax","coarseValue","setValueAtIndex","invoke","change","onValueChange","focusChange","onFocusChange","createProps","createSplitProps","props","splitProps","thumbProps","splitThumbProps"],"sources":["C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\slider\\src\\slider.anatomy.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\slider\\src\\slider.connect.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\slider\\src\\slider.dom.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\slider\\src\\slider.style.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\slider\\src\\slider.utils.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\slider\\src\\slider.machine.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\slider\\src\\slider.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"slider\").parts(\n  \"root\",\n  \"label\",\n  \"thumb\",\n  \"valueText\",\n  \"track\",\n  \"range\",\n  \"control\",\n  \"markerGroup\",\n  \"marker\",\n)\n\nexport const parts = anatomy.build()\n","import {\n  getEventKey,\n  getEventPoint,\n  getEventStep,\n  isLeftClick,\n  isModifierKey,\n  type EventKeyMap,\n} from \"@zag-js/dom-event\"\nimport { ariaAttr, dataAttr } from \"@zag-js/dom-query\"\nimport { getPercentValue, getValuePercent } from \"@zag-js/numeric-range\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./slider.anatomy\"\nimport { dom } from \"./slider.dom\"\nimport type { MachineApi, Send, State } from \"./slider.types\"\nimport { getRangeAtIndex } from \"./slider.utils\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const ariaLabel = state.context[\"aria-label\"]\n  const ariaLabelledBy = state.context[\"aria-labelledby\"]\n  const sliderValue = state.context.value\n\n  const focused = state.matches(\"focus\")\n  const dragging = state.matches(\"dragging\")\n\n  const disabled = state.context.isDisabled\n  const invalid = state.context.invalid\n  const interactive = state.context.isInteractive\n\n  const isHorizontal = state.context.orientation === \"horizontal\"\n  const isVertical = state.context.orientation === \"vertical\"\n\n  function getValuePercentFn(value: number) {\n    return getValuePercent(value, state.context.min, state.context.max)\n  }\n\n  function getPercentValueFn(percent: number) {\n    return getPercentValue(percent, state.context.min, state.context.max, state.context.step)\n  }\n\n  return {\n    value: state.context.value,\n    dragging,\n    focused,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value: value })\n    },\n    getThumbValue(index) {\n      return sliderValue[index]\n    },\n    setThumbValue(index, value) {\n      send({ type: \"SET_VALUE\", index, value })\n    },\n    getValuePercent: getValuePercentFn,\n    getPercentValue: getPercentValueFn,\n    getThumbPercent(index) {\n      return getValuePercentFn(sliderValue[index])\n    },\n    setThumbPercent(index, percent) {\n      const value = getPercentValueFn(percent)\n      send({ type: \"SET_VALUE\", index, value })\n    },\n    getThumbMin(index) {\n      return getRangeAtIndex(state.context, index).min\n    },\n    getThumbMax(index) {\n      return getRangeAtIndex(state.context, index).max\n    },\n    increment(index) {\n      send({ type: \"INCREMENT\", index })\n    },\n    decrement(index) {\n      send({ type: \"DECREMENT\", index })\n    },\n    focus() {\n      if (!interactive) return\n      send({ type: \"FOCUS\", index: 0 })\n    },\n\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context, 0),\n        onClick(event) {\n          if (!interactive) return\n          event.preventDefault()\n          dom.getFirstEl(state.context)?.focus()\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\",\n        },\n      })\n    },\n\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-dragging\": dataAttr(dragging),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: dom.getRootId(state.context),\n        dir: state.context.dir,\n        style: dom.getRootStyle(state.context),\n      })\n    },\n\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: dom.getValueTextId(state.context),\n      })\n    },\n\n    getTrackProps() {\n      return normalize.element({\n        ...parts.track.attrs,\n        dir: state.context.dir,\n        id: dom.getTrackId(state.context),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": dataAttr(focused),\n        style: { position: \"relative\" },\n      })\n    },\n\n    getThumbProps(props) {\n      const { index = 0, name } = props\n\n      const value = sliderValue[index]\n      const range = getRangeAtIndex(state.context, index)\n      const valueText = state.context.getAriaValueText?.({ value, index })\n      const _ariaLabel = Array.isArray(ariaLabel) ? ariaLabel[index] : ariaLabel\n      const _ariaLabelledBy = Array.isArray(ariaLabelledBy) ? ariaLabelledBy[index] : ariaLabelledBy\n\n      return normalize.element({\n        ...parts.thumb.attrs,\n        dir: state.context.dir,\n        \"data-index\": index,\n        \"data-name\": name,\n        id: dom.getThumbId(state.context, index),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": dataAttr(focused && state.context.focusedIndex === index),\n        \"data-dragging\": dataAttr(dragging && state.context.focusedIndex === index),\n        draggable: false,\n        \"aria-disabled\": ariaAttr(disabled),\n        \"aria-label\": _ariaLabel,\n        \"aria-labelledby\": _ariaLabelledBy ?? dom.getLabelId(state.context),\n        \"aria-orientation\": state.context.orientation,\n        \"aria-valuemax\": range.max,\n        \"aria-valuemin\": range.min,\n        \"aria-valuenow\": sliderValue[index],\n        \"aria-valuetext\": valueText,\n        role: \"slider\",\n        tabIndex: disabled ? undefined : 0,\n        style: dom.getThumbStyle(state.context, index),\n        onPointerDown(event) {\n          if (!interactive) return\n          send({ type: \"THUMB_POINTER_DOWN\", index })\n          event.stopPropagation()\n        },\n        onBlur() {\n          if (!interactive) return\n          send(\"BLUR\")\n        },\n        onFocus() {\n          if (!interactive) return\n          send({ type: \"FOCUS\", index })\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return\n          if (!interactive) return\n\n          const step = getEventStep(event) * state.context.step\n\n          const keyMap: EventKeyMap = {\n            ArrowUp() {\n              if (isHorizontal) return\n              send({ type: \"ARROW_INC\", step, src: \"ArrowUp\" })\n            },\n            ArrowDown() {\n              if (isHorizontal) return\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowDown\" })\n            },\n            ArrowLeft() {\n              if (isVertical) return\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowLeft\" })\n            },\n            ArrowRight() {\n              if (isVertical) return\n              send({ type: \"ARROW_INC\", step, src: \"ArrowRight\" })\n            },\n            PageUp() {\n              send({ type: \"ARROW_INC\", step, src: \"PageUp\" })\n            },\n            PageDown() {\n              send({ type: \"ARROW_DEC\", step, src: \"PageDown\" })\n            },\n            Home() {\n              send(\"HOME\")\n            },\n            End() {\n              send(\"END\")\n            },\n          }\n\n          const key = getEventKey(event, state.context)\n          const exec = keyMap[key]\n\n          if (exec) {\n            exec(event)\n            event.preventDefault()\n            event.stopPropagation()\n          }\n        },\n      })\n    },\n\n    getHiddenInputProps(props) {\n      const { index = 0, name } = props\n      return normalize.input({\n        name:\n          name ?? (state.context.name ? state.context.name + (state.context.value.length > 1 ? \"[]\" : \"\") : undefined),\n        form: state.context.form,\n        type: \"text\",\n        hidden: true,\n        defaultValue: state.context.value[index],\n        id: dom.getHiddenInputId(state.context, index),\n      })\n    },\n\n    getRangeProps() {\n      return normalize.element({\n        id: dom.getRangeId(state.context),\n        ...parts.range.attrs,\n        dir: state.context.dir,\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        style: dom.getRangeStyle(state.context),\n      })\n    },\n\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        style: dom.getControlStyle(),\n        onPointerDown(event) {\n          if (!interactive) return\n          if (!isLeftClick(event)) return\n          if (isModifierKey(event)) return\n\n          const point = getEventPoint(event)\n          send({ type: \"POINTER_DOWN\", point })\n\n          event.preventDefault()\n          event.stopPropagation()\n        },\n      })\n    },\n\n    getMarkerGroupProps() {\n      return normalize.element({\n        ...parts.markerGroup.attrs,\n        role: \"presentation\",\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-orientation\": state.context.orientation,\n        style: dom.getMarkerGroupStyle(),\n      })\n    },\n\n    getMarkerProps(props) {\n      const style = dom.getMarkerStyle(state.context, props.value)\n      let markerState: \"over-value\" | \"under-value\" | \"at-value\"\n\n      const first = state.context.value[0]\n      const last = state.context.value[state.context.value.length - 1]\n\n      if (props.value < first) {\n        markerState = \"under-value\"\n      } else if (props.value > last) {\n        markerState = \"over-value\"\n      } else {\n        markerState = \"at-value\"\n      }\n\n      return normalize.element({\n        ...parts.marker.attrs,\n        id: dom.getMarkerId(state.context, props.value),\n        role: \"presentation\",\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-value\": props.value,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-state\": markerState,\n        style,\n      })\n    },\n  }\n}\n","import { getRelativePoint, type Point } from \"@zag-js/dom-event\"\nimport { createScope, queryAll } from \"@zag-js/dom-query\"\nimport { dispatchInputValueEvent } from \"@zag-js/form-utils\"\nimport { getPercentValue } from \"@zag-js/numeric-range\"\nimport { styleGetterFns } from \"./slider.style\"\nimport type { MachineContext as Ctx } from \"./slider.types\"\n\nexport const dom = createScope({\n  ...styleGetterFns,\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `slider:${ctx.id}`,\n  getThumbId: (ctx: Ctx, index: number) => ctx.ids?.thumb?.(index) ?? `slider:${ctx.id}:thumb:${index}`,\n  getHiddenInputId: (ctx: Ctx, index: number) => ctx.ids?.hiddenInput?.(index) ?? `slider:${ctx.id}:input:${index}`,\n  getControlId: (ctx: Ctx) => ctx.ids?.control ?? `slider:${ctx.id}:control`,\n  getTrackId: (ctx: Ctx) => ctx.ids?.track ?? `slider:${ctx.id}:track`,\n  getRangeId: (ctx: Ctx) => ctx.ids?.range ?? `slider:${ctx.id}:range`,\n  getLabelId: (ctx: Ctx) => ctx.ids?.label ?? `slider:${ctx.id}:label`,\n  getValueTextId: (ctx: Ctx) => ctx.ids?.valueText ?? `slider:${ctx.id}:value-text`,\n  getMarkerId: (ctx: Ctx, value: number) => ctx.ids?.marker?.(value) ?? `slider:${ctx.id}:marker:${value}`,\n\n  getRootEl: (ctx: Ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getThumbEl: (ctx: Ctx, index: number) => dom.getById(ctx, dom.getThumbId(ctx, index)),\n  getHiddenInputEl: (ctx: Ctx, index: number) => dom.getById<HTMLInputElement>(ctx, dom.getHiddenInputId(ctx, index)),\n  getControlEl: (ctx: Ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getElements: (ctx: Ctx) => queryAll(dom.getControlEl(ctx), \"[role=slider]\"),\n  getFirstEl: (ctx: Ctx) => dom.getElements(ctx)[0],\n  getRangeEl: (ctx: Ctx) => dom.getById(ctx, dom.getRangeId(ctx)),\n\n  getValueFromPoint(ctx: Ctx, point: Point) {\n    const controlEl = dom.getControlEl(ctx)\n    if (!controlEl) return\n    const relativePoint = getRelativePoint(point, controlEl)\n    const percent = relativePoint.getPercentValue({\n      orientation: ctx.orientation,\n      dir: ctx.dir,\n      inverted: { y: true },\n    })\n    return getPercentValue(percent, ctx.min, ctx.max, ctx.step)\n  },\n  dispatchChangeEvent(ctx: Ctx) {\n    const valueArray = Array.from(ctx.value)\n    valueArray.forEach((value, index) => {\n      const inputEl = dom.getHiddenInputEl(ctx, index)\n      if (!inputEl) return\n      dispatchInputValueEvent(inputEl, { value })\n    })\n  },\n})\n","import { getValuePercent, getValueTransformer } from \"@zag-js/numeric-range\"\nimport type { Style } from \"@zag-js/types\"\nimport type { MachineContext as Ctx, SharedContext } from \"./slider.types\"\n\n/* -----------------------------------------------------------------------------\n * Range style calculations\n * -----------------------------------------------------------------------------*/\n\nfunction getBounds<T>(value: T[]): [T, T] {\n  const firstValue = value[0]\n  const lastThumb = value[value.length - 1]\n  return [firstValue, lastThumb]\n}\n\nexport function getRangeOffsets(ctx: Ctx) {\n  const [firstPercent, lastPercent] = getBounds(ctx.valuePercent)\n\n  if (ctx.valuePercent.length === 1) {\n    if (ctx.origin === \"center\") {\n      const isNegative = ctx.valuePercent[0] < 50\n      const start = isNegative ? `${ctx.valuePercent[0]}%` : \"50%\"\n      const end = isNegative ? \"50%\" : `${100 - ctx.valuePercent[0]}%`\n\n      return { start, end }\n    }\n\n    return { start: \"0%\", end: `${100 - lastPercent}%` }\n  }\n\n  return { start: `${firstPercent}%`, end: `${100 - lastPercent}%` }\n}\n\nfunction getRangeStyle(ctx: Pick<SharedContext, \"isVertical\" | \"isRtl\">): Style {\n  if (ctx.isVertical) {\n    return {\n      position: \"absolute\",\n      bottom: \"var(--slider-range-start)\",\n      top: \"var(--slider-range-end)\",\n    }\n  }\n\n  return {\n    position: \"absolute\",\n    [ctx.isRtl ? \"right\" : \"left\"]: \"var(--slider-range-start)\",\n    [ctx.isRtl ? \"left\" : \"right\"]: \"var(--slider-range-end)\",\n  }\n}\n\n/* -----------------------------------------------------------------------------\n * Thumb style calculations\n * -----------------------------------------------------------------------------*/\n\nfunction getVerticalThumbOffset(ctx: SharedContext) {\n  const { height = 0 } = ctx.thumbSize ?? {}\n  const getValue = getValueTransformer([ctx.min, ctx.max], [-height / 2, height / 2])\n  return parseFloat(getValue(ctx.value).toFixed(2))\n}\n\nfunction getHorizontalThumbOffset(ctx: SharedContext) {\n  const { width = 0 } = ctx.thumbSize ?? {}\n\n  if (ctx.isRtl) {\n    const getValue = getValueTransformer([ctx.max, ctx.min], [-width / 2, width / 2])\n    return -1 * parseFloat(getValue(ctx.value).toFixed(2))\n  }\n\n  const getValue = getValueTransformer([ctx.min, ctx.max], [-width / 2, width / 2])\n  return parseFloat(getValue(ctx.value).toFixed(2))\n}\n\nfunction getOffset(ctx: SharedContext, percent: number) {\n  if (ctx.thumbAlignment === \"center\") return `${percent}%`\n  const offset = ctx.isVertical ? getVerticalThumbOffset(ctx) : getHorizontalThumbOffset(ctx)\n  return `calc(${percent}% - ${offset}px)`\n}\n\nfunction getThumbOffset(ctx: SharedContext) {\n  let percent = getValuePercent(ctx.value, ctx.min, ctx.max) * 100\n  return getOffset(ctx, percent)\n}\n\nfunction getVisibility(ctx: Ctx) {\n  let visibility: \"visible\" | \"hidden\" = \"visible\"\n  if (ctx.thumbAlignment === \"contain\" && !ctx.hasMeasuredThumbSize) {\n    visibility = \"hidden\"\n  }\n  return visibility\n}\n\nfunction getThumbStyle(ctx: Ctx, index: number): Style {\n  const placementProp = ctx.isVertical ? \"bottom\" : \"insetInlineStart\"\n  return {\n    visibility: getVisibility(ctx),\n    position: \"absolute\",\n    transform: \"var(--slider-thumb-transform)\",\n    [placementProp]: `var(--slider-thumb-offset-${index})`,\n  }\n}\n\n/* -----------------------------------------------------------------------------\n * Control style calculations\n * -----------------------------------------------------------------------------*/\n\nfunction getControlStyle(): Style {\n  return {\n    touchAction: \"none\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    position: \"relative\",\n  }\n}\n\n/* -----------------------------------------------------------------------------\n * Root style calculations\n * -----------------------------------------------------------------------------*/\n\nfunction getRootStyle(ctx: Ctx): Style {\n  const range = getRangeOffsets(ctx)\n\n  const offsetStyles = ctx.value.reduce<Style>((styles, value, index) => {\n    const offset = getThumbOffset({ ...ctx, value })\n    return { ...styles, [`--slider-thumb-offset-${index}`]: offset }\n  }, {})\n\n  return {\n    ...offsetStyles,\n    \"--slider-thumb-transform\": ctx.isVertical ? \"translateY(50%)\" : ctx.isRtl ? \"translateX(50%)\" : \"translateX(-50%)\",\n    \"--slider-range-start\": range.start,\n    \"--slider-range-end\": range.end,\n  }\n}\n\n/* -----------------------------------------------------------------------------\n * Marker style calculations\n * -----------------------------------------------------------------------------*/\n\nfunction getMarkerStyle(\n  ctx: Pick<SharedContext, \"isHorizontal\" | \"isRtl\" | \"thumbAlignment\" | \"hasMeasuredThumbSize\">,\n  value: number,\n): Style {\n  return {\n    // @ts-expect-error\n    visibility: getVisibility(ctx),\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    // @ts-expect-error\n    [ctx.isHorizontal ? \"insetInlineStart\" : \"bottom\"]: getThumbOffset({ ...ctx, value }),\n    translate: \"var(--tx) var(--ty)\",\n    \"--tx\": ctx.isHorizontal ? (ctx.isRtl ? \"50%\" : \"-50%\") : \"0%\",\n    \"--ty\": !ctx.isHorizontal ? \"50%\" : \"0%\",\n  }\n}\n\n/* -----------------------------------------------------------------------------\n * Label style calculations\n * -----------------------------------------------------------------------------*/\n\nfunction getMarkerGroupStyle(): Style {\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    pointerEvents: \"none\",\n    position: \"relative\",\n  }\n}\n\nexport const styleGetterFns = {\n  getRootStyle,\n  getControlStyle,\n  getThumbStyle,\n  getRangeStyle,\n  getMarkerStyle,\n  getMarkerGroupStyle,\n}\n","import {\n  clampValue,\n  getClosestValueIndex,\n  getNextStepValue,\n  getPreviousStepValue,\n  getValueRanges,\n  snapValueToStep,\n} from \"@zag-js/numeric-range\"\nimport type { MachineContext as Ctx } from \"./slider.types\"\n\nexport function normalizeValues(ctx: Ctx, nextValues: number[]) {\n  return nextValues.map((value, index, values) => {\n    return constrainValue({ ...ctx, value: values }, value, index)\n  })\n}\n\nexport function clampPercent(percent: number) {\n  return clampValue(percent, 0, 1)\n}\n\nexport function getRangeAtIndex(ctx: Ctx, index: number) {\n  return getValueRanges(ctx.value, ctx.min, ctx.max, ctx.minStepsBetweenThumbs)[index]\n}\n\nexport function constrainValue(ctx: Ctx, value: number, index: number) {\n  const range = getRangeAtIndex(ctx, index)\n  const snapValue = snapValueToStep(value, ctx.min, ctx.max, ctx.step)\n  return clampValue(snapValue, range.min, range.max)\n}\n\nexport function decrement(ctx: Ctx, index?: number, step?: number) {\n  const idx = index ?? ctx.focusedIndex\n  const range = getRangeAtIndex(ctx, idx)\n  const nextValues = getPreviousStepValue(idx, {\n    ...range,\n    step: step ?? ctx.step,\n    values: ctx.value,\n  })\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max)\n  return nextValues\n}\n\nexport function increment(ctx: Ctx, index?: number, step?: number) {\n  const idx = index ?? ctx.focusedIndex\n  const range = getRangeAtIndex(ctx, idx)\n  const nextValues = getNextStepValue(idx, {\n    ...range,\n    step: step ?? ctx.step,\n    values: ctx.value,\n  })\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max)\n  return nextValues\n}\n\nexport function getClosestIndex(ctx: Ctx, pointValue: number) {\n  return getClosestValueIndex(ctx.value, pointValue)\n}\n\nexport function assignArray(current: number[], next: number[]) {\n  for (let i = 0; i < next.length; i++) {\n    const value = next[i]\n    current[i] = value\n  }\n}\n","import { createMachine } from \"@zag-js/core\"\nimport { trackPointerMove } from \"@zag-js/dom-event\"\nimport { raf } from \"@zag-js/dom-query\"\nimport { trackElementsSize, type ElementSize } from \"@zag-js/element-size\"\nimport { trackFormControl } from \"@zag-js/form-utils\"\nimport { getValuePercent } from \"@zag-js/numeric-range\"\nimport { compact, isEqual } from \"@zag-js/utils\"\nimport { dom } from \"./slider.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./slider.types\"\nimport {\n  assignArray,\n  constrainValue,\n  decrement,\n  getClosestIndex,\n  getRangeAtIndex,\n  increment,\n  normalizeValues,\n} from \"./slider.utils\"\n\nconst isEqualSize = (a: ElementSize | null, b: ElementSize | null) => {\n  return a?.width === b?.width && a?.height === b?.height\n}\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"slider\",\n      initial: \"idle\",\n\n      context: {\n        thumbSize: null,\n        thumbAlignment: \"contain\",\n        min: 0,\n        max: 100,\n        step: 1,\n        value: [0],\n        origin: \"start\",\n        orientation: \"horizontal\",\n        dir: \"ltr\",\n        minStepsBetweenThumbs: 0,\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        focusedIndex: -1,\n        fieldsetDisabled: false,\n      },\n\n      computed: {\n        isHorizontal: (ctx) => ctx.orientation === \"horizontal\",\n        isVertical: (ctx) => ctx.orientation === \"vertical\",\n        isRtl: (ctx) => ctx.orientation === \"horizontal\" && ctx.dir === \"rtl\",\n        isDisabled: (ctx) => !!ctx.disabled || ctx.fieldsetDisabled,\n        isInteractive: (ctx) => !(ctx.readOnly || ctx.isDisabled),\n        hasMeasuredThumbSize: (ctx) => ctx.thumbSize != null,\n        valuePercent(ctx) {\n          return ctx.value.map((value) => 100 * getValuePercent(value, ctx.min, ctx.max))\n        },\n      },\n\n      watch: {\n        value: [\"syncInputElements\"],\n      },\n\n      entry: [\"coarseValue\"],\n\n      activities: [\"trackFormControlState\", \"trackThumbsSize\"],\n\n      on: {\n        SET_VALUE: [\n          {\n            guard: \"hasIndex\",\n            actions: \"setValueAtIndex\",\n          },\n          { actions: \"setValue\" },\n        ],\n        INCREMENT: {\n          actions: \"incrementThumbAtIndex\",\n        },\n        DECREMENT: {\n          actions: \"decrementThumbAtIndex\",\n        },\n      },\n\n      states: {\n        idle: {\n          on: {\n            POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"],\n            },\n            FOCUS: {\n              target: \"focus\",\n              actions: \"setFocusedIndex\",\n            },\n            THUMB_POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setFocusedIndex\", \"focusActiveThumb\"],\n            },\n          },\n        },\n        focus: {\n          entry: \"focusActiveThumb\",\n          on: {\n            POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"],\n            },\n            THUMB_POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setFocusedIndex\", \"focusActiveThumb\"],\n            },\n            ARROW_DEC: {\n              actions: [\"decrementThumbAtIndex\", \"invokeOnChangeEnd\"],\n            },\n            ARROW_INC: {\n              actions: [\"incrementThumbAtIndex\", \"invokeOnChangeEnd\"],\n            },\n            HOME: {\n              actions: [\"setFocusedThumbToMin\", \"invokeOnChangeEnd\"],\n            },\n            END: {\n              actions: [\"setFocusedThumbToMax\", \"invokeOnChangeEnd\"],\n            },\n            BLUR: {\n              target: \"idle\",\n              actions: \"clearFocusedIndex\",\n            },\n          },\n        },\n        dragging: {\n          entry: \"focusActiveThumb\",\n          activities: \"trackPointerMove\",\n          on: {\n            POINTER_UP: {\n              target: \"focus\",\n              actions: \"invokeOnChangeEnd\",\n            },\n            POINTER_MOVE: {\n              actions: \"setPointerValue\",\n            },\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        hasIndex: (_ctx, evt) => evt.index != null,\n      },\n      activities: {\n        trackFormControlState(ctx, _evt, { initialContext }) {\n          return trackFormControl(dom.getRootEl(ctx), {\n            onFieldsetDisabledChange(disabled) {\n              ctx.fieldsetDisabled = disabled\n            },\n            onFormReset() {\n              set.value(ctx, initialContext.value)\n            },\n          })\n        },\n\n        trackPointerMove(ctx, _evt, { send }) {\n          return trackPointerMove(dom.getDoc(ctx), {\n            onPointerMove(info) {\n              send({ type: \"POINTER_MOVE\", point: info.point })\n            },\n            onPointerUp() {\n              send(\"POINTER_UP\")\n            },\n          })\n        },\n        trackThumbsSize(ctx) {\n          if (ctx.thumbAlignment !== \"contain\" || ctx.thumbSize) return\n\n          return trackElementsSize({\n            getNodes: () => dom.getElements(ctx),\n            observeMutation: true,\n            callback(size) {\n              if (!size || isEqualSize(ctx.thumbSize, size)) return\n              ctx.thumbSize = size\n            },\n          })\n        },\n      },\n      actions: {\n        syncInputElements(ctx) {\n          ctx.value.forEach((value, index) => {\n            const inputEl = dom.getHiddenInputEl(ctx, index)\n            dom.setValue(inputEl, value)\n          })\n        },\n        invokeOnChangeEnd(ctx) {\n          ctx.onValueChangeEnd?.({ value: ctx.value })\n        },\n        setClosestThumbIndex(ctx, evt) {\n          const pointValue = dom.getValueFromPoint(ctx, evt.point)\n          if (pointValue == null) return\n\n          const focusedIndex = getClosestIndex(ctx, pointValue)\n          set.focusedIndex(ctx, focusedIndex)\n        },\n        setFocusedIndex(ctx, evt) {\n          set.focusedIndex(ctx, evt.index)\n        },\n        clearFocusedIndex(ctx) {\n          set.focusedIndex(ctx, -1)\n        },\n        setPointerValue(ctx, evt) {\n          const pointerValue = dom.getValueFromPoint(ctx, evt.point)\n          if (pointerValue == null) return\n\n          const value = constrainValue(ctx, pointerValue, ctx.focusedIndex)\n          set.valueAtIndex(ctx, ctx.focusedIndex, value)\n        },\n        focusActiveThumb(ctx) {\n          raf(() => {\n            const thumbEl = dom.getThumbEl(ctx, ctx.focusedIndex)\n            thumbEl?.focus({ preventScroll: true })\n          })\n        },\n        decrementThumbAtIndex(ctx, evt) {\n          const value = decrement(ctx, evt.index, evt.step)\n          set.value(ctx, value)\n        },\n        incrementThumbAtIndex(ctx, evt) {\n          const value = increment(ctx, evt.index, evt.step)\n          set.value(ctx, value)\n        },\n        setFocusedThumbToMin(ctx) {\n          const { min } = getRangeAtIndex(ctx, ctx.focusedIndex)\n          set.valueAtIndex(ctx, ctx.focusedIndex, min)\n        },\n        setFocusedThumbToMax(ctx) {\n          const { max } = getRangeAtIndex(ctx, ctx.focusedIndex)\n          set.valueAtIndex(ctx, ctx.focusedIndex, max)\n        },\n        coarseValue(ctx) {\n          const value = normalizeValues(ctx, ctx.value)\n          set.value(ctx, value)\n        },\n        setValueAtIndex(ctx, evt) {\n          const value = constrainValue(ctx, evt.value, evt.index)\n          set.valueAtIndex(ctx, evt.index, value)\n        },\n        setValue(ctx, evt) {\n          const value = normalizeValues(ctx, evt.value)\n          set.value(ctx, value)\n        },\n      },\n    },\n  )\n}\n\nconst invoke = {\n  change: (ctx: MachineContext) => {\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value),\n    })\n    dom.dispatchChangeEvent(ctx)\n  },\n  focusChange: (ctx: MachineContext) => {\n    ctx.onFocusChange?.({\n      value: Array.from(ctx.value),\n      focusedIndex: ctx.focusedIndex,\n    })\n  },\n}\n\nconst set = {\n  valueAtIndex: (ctx: MachineContext, index: number, value: number) => {\n    if (isEqual(ctx.value[index], value)) return\n    ctx.value[index] = value\n    invoke.change(ctx)\n  },\n  value: (ctx: MachineContext, value: number[]) => {\n    if (isEqual(ctx.value, value)) return\n    assignArray(ctx.value, value)\n    invoke.change(ctx)\n  },\n  focusedIndex: (ctx: MachineContext, index: number) => {\n    if (isEqual(ctx.focusedIndex, index)) return\n    ctx.focusedIndex = index\n    invoke.focusChange(ctx)\n  },\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { ThumbProps, UserDefinedContext } from \"./slider.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"aria-label\",\n  \"aria-labelledby\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getAriaValueText\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"max\",\n  \"min\",\n  \"minStepsBetweenThumbs\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueChangeEnd\",\n  \"orientation\",\n  \"origin\",\n  \"readOnly\",\n  \"step\",\n  \"thumbAlignment\",\n  \"thumbAlignment\",\n  \"thumbSize\",\n  \"value\",\n])\n\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n\nexport const thumbProps = createProps<ThumbProps>()([\"index\", \"name\"])\nexport const splitThumbProps = createSplitProps<ThumbProps>(thumbProps)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
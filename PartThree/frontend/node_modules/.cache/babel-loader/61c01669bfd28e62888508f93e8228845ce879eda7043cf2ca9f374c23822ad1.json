{"ast":null,"code":"// src/tabs.anatomy.ts\nimport { createAnatomy } from \"@zag-js/anatomy\";\nvar anatomy = createAnatomy(\"tabs\").parts(\"root\", \"list\", \"trigger\", \"content\", \"indicator\");\nvar parts = anatomy.build();\n\n// src/tabs.connect.ts\nimport { getEventKey } from \"@zag-js/dom-event\";\nimport { dataAttr, isComposingEvent, isSafari, isSelfTarget } from \"@zag-js/dom-query\";\n\n// src/tabs.dom.ts\nimport { createScope, itemById, nextById, prevById, queryAll } from \"@zag-js/dom-query\";\nimport { first, last } from \"@zag-js/utils\";\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `tabs:${ctx.id}`,\n  getListId: ctx => ctx.ids?.list ?? `tabs:${ctx.id}:list`,\n  getContentId: (ctx, id) => ctx.ids?.content ?? `tabs:${ctx.id}:content-${id}`,\n  getTriggerId: (ctx, id) => ctx.ids?.trigger ?? `tabs:${ctx.id}:trigger-${id}`,\n  getIndicatorId: ctx => ctx.ids?.indicator ?? `tabs:${ctx.id}:indicator`,\n  getListEl: ctx => dom.getById(ctx, dom.getListId(ctx)),\n  getContentEl: (ctx, id) => dom.getById(ctx, dom.getContentId(ctx, id)),\n  getTriggerEl: (ctx, id) => dom.getById(ctx, dom.getTriggerId(ctx, id)),\n  getIndicatorEl: ctx => dom.getById(ctx, dom.getIndicatorId(ctx)),\n  getElements: ctx => {\n    const ownerId = CSS.escape(dom.getListId(ctx));\n    const selector = `[role=tab][data-ownedby='${ownerId}']:not([disabled])`;\n    return queryAll(dom.getListEl(ctx), selector);\n  },\n  getFirstTriggerEl: ctx => first(dom.getElements(ctx)),\n  getLastTriggerEl: ctx => last(dom.getElements(ctx)),\n  getNextTriggerEl: (ctx, id) => nextById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loopFocus),\n  getPrevTriggerEl: (ctx, id) => prevById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loopFocus),\n  getSelectedContentEl: ctx => {\n    if (!ctx.value) return;\n    return dom.getContentEl(ctx, ctx.value);\n  },\n  getSelectedTriggerEl: ctx => {\n    if (!ctx.value) return;\n    return dom.getTriggerEl(ctx, ctx.value);\n  },\n  getOffsetRect: el => {\n    return {\n      left: el?.offsetLeft ?? 0,\n      top: el?.offsetTop ?? 0,\n      width: el?.offsetWidth ?? 0,\n      height: el?.offsetHeight ?? 0\n    };\n  },\n  getRectById: (ctx, id) => {\n    const tab = itemById(dom.getElements(ctx), dom.getTriggerId(ctx, id));\n    return dom.resolveRect(dom.getOffsetRect(tab));\n  },\n  resolveRect: rect => ({\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    left: `${rect.left}px`,\n    top: `${rect.top}px`\n  })\n});\n\n// src/tabs.connect.ts\nfunction connect(state, send, normalize) {\n  const translations = state.context.translations;\n  const focused = state.matches(\"focused\");\n  const isVertical = state.context.orientation === \"vertical\";\n  const isHorizontal = state.context.orientation === \"horizontal\";\n  const composite = state.context.composite;\n  const indicator = state.context.indicatorState;\n  function getTriggerState(props2) {\n    return {\n      selected: state.context.value === props2.value,\n      focused: state.context.focusedValue === props2.value,\n      disabled: !!props2.disabled\n    };\n  }\n  return {\n    value: state.context.value,\n    focusedValue: state.context.focusedValue,\n    setValue(value) {\n      send({\n        type: \"SET_VALUE\",\n        value\n      });\n    },\n    clearValue() {\n      send({\n        type: \"CLEAR_VALUE\"\n      });\n    },\n    setIndicatorRect(value) {\n      const id = dom.getTriggerId(state.context, value);\n      send({\n        type: \"SET_INDICATOR_RECT\",\n        id\n      });\n    },\n    syncTabIndex() {\n      send(\"SYNC_TAB_INDEX\");\n    },\n    selectNext(fromValue) {\n      send({\n        type: \"TAB_FOCUS\",\n        value: fromValue,\n        src: \"selectNext\"\n      });\n      send({\n        type: \"ARROW_NEXT\",\n        src: \"selectNext\"\n      });\n    },\n    selectPrev(fromValue) {\n      send({\n        type: \"TAB_FOCUS\",\n        value: fromValue,\n        src: \"selectPrev\"\n      });\n      send({\n        type: \"ARROW_PREV\",\n        src: \"selectPrev\"\n      });\n    },\n    focus() {\n      dom.getSelectedTriggerEl(state.context)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": dataAttr(focused),\n        dir: state.context.dir\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        id: dom.getListId(state.context),\n        role: \"tablist\",\n        dir: state.context.dir,\n        \"data-focus\": dataAttr(focused),\n        \"aria-orientation\": state.context.orientation,\n        \"data-orientation\": state.context.orientation,\n        \"aria-label\": translations?.listLabel,\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!isSelfTarget(event)) return;\n          if (isComposingEvent(event)) return;\n          const keyMap = {\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({\n                type: \"ARROW_NEXT\",\n                key: \"ArrowDown\"\n              });\n            },\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({\n                type: \"ARROW_PREV\",\n                key: \"ArrowUp\"\n              });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({\n                type: \"ARROW_PREV\",\n                key: \"ArrowLeft\"\n              });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({\n                type: \"ARROW_NEXT\",\n                key: \"ArrowRight\"\n              });\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            },\n            Enter() {\n              send({\n                type: \"ENTER\"\n              });\n            }\n          };\n          let key = getEventKey(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        }\n      });\n    },\n    getTriggerState,\n    getTriggerProps(props2) {\n      const {\n        value,\n        disabled\n      } = props2;\n      const triggerState = getTriggerState(props2);\n      return normalize.button({\n        ...parts.trigger.attrs,\n        role: \"tab\",\n        type: \"button\",\n        disabled,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": dataAttr(disabled),\n        \"aria-disabled\": disabled,\n        \"data-value\": value,\n        \"aria-selected\": triggerState.selected,\n        \"data-selected\": dataAttr(triggerState.selected),\n        \"data-focus\": dataAttr(triggerState.focused),\n        \"aria-controls\": triggerState.selected ? dom.getContentId(state.context, value) : void 0,\n        \"data-ownedby\": dom.getListId(state.context),\n        \"data-ssr\": dataAttr(state.context.ssr),\n        id: dom.getTriggerId(state.context, value),\n        tabIndex: triggerState.selected && composite ? 0 : -1,\n        onFocus() {\n          send({\n            type: \"TAB_FOCUS\",\n            value\n          });\n        },\n        onBlur(event) {\n          const target = event.relatedTarget;\n          if (target?.getAttribute(\"role\") !== \"tab\") {\n            send({\n              type: \"TAB_BLUR\"\n            });\n          }\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (isSafari()) {\n            event.currentTarget.focus();\n          }\n          send({\n            type: \"TAB_CLICK\",\n            value\n          });\n        }\n      });\n    },\n    getContentProps(props2) {\n      const {\n        value\n      } = props2;\n      const selected = state.context.value === value;\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context, value),\n        tabIndex: composite ? 0 : -1,\n        \"aria-labelledby\": dom.getTriggerId(state.context, value),\n        role: \"tabpanel\",\n        \"data-ownedby\": dom.getListId(state.context),\n        \"data-selected\": dataAttr(selected),\n        \"data-orientation\": state.context.orientation,\n        hidden: !selected\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        id: dom.getIndicatorId(state.context),\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        style: {\n          \"--transition-property\": \"left, right, top, bottom, width, height\",\n          \"--left\": indicator.rect?.left,\n          \"--top\": indicator.rect?.top,\n          \"--width\": indicator.rect?.width,\n          \"--height\": indicator.rect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: indicator.transition ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [isHorizontal ? \"left\" : \"top\"]: isHorizontal ? \"var(--left)\" : \"var(--top)\"\n        }\n      });\n    }\n  };\n}\n\n// src/tabs.machine.ts\nimport { createMachine, guards } from \"@zag-js/core\";\nimport { clickIfLink } from \"@zag-js/dom-event\";\nimport { nextTick, raf, getFocusables } from \"@zag-js/dom-query\";\nimport { trackElementRect } from \"@zag-js/element-rect\";\nimport { compact, isEqual } from \"@zag-js/utils\";\nvar {\n  not\n} = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    initial: \"idle\",\n    context: {\n      dir: \"ltr\",\n      orientation: \"horizontal\",\n      activationMode: \"automatic\",\n      value: null,\n      loopFocus: true,\n      composite: true,\n      ...ctx,\n      focusedValue: ctx.value ?? null,\n      ssr: true,\n      indicatorState: {\n        rendered: false,\n        transition: false,\n        rect: {\n          left: \"0px\",\n          top: \"0px\",\n          width: \"0px\",\n          height: \"0px\"\n        }\n      }\n    },\n    watch: {\n      value: [\"allowIndicatorTransition\", \"syncIndicatorRect\", \"syncTabIndex\", \"clickIfLink\"],\n      dir: [\"syncIndicatorRect\"],\n      orientation: [\"syncIndicatorRect\"]\n    },\n    on: {\n      SET_VALUE: {\n        actions: \"setValue\"\n      },\n      CLEAR_VALUE: {\n        actions: \"clearValue\"\n      },\n      SET_INDICATOR_RECT: {\n        actions: \"setIndicatorRect\"\n      },\n      SYNC_TAB_INDEX: {\n        actions: \"syncTabIndex\"\n      }\n    },\n    created: [\"syncFocusedValue\"],\n    entry: [\"checkRenderedElements\", \"syncIndicatorRect\", \"syncTabIndex\", \"syncSsr\"],\n    exit: [\"cleanupObserver\"],\n    states: {\n      idle: {\n        on: {\n          TAB_FOCUS: {\n            target: \"focused\",\n            actions: \"setFocusedValue\"\n          },\n          TAB_CLICK: {\n            target: \"focused\",\n            actions: [\"setFocusedValue\", \"setValue\"]\n          }\n        }\n      },\n      focused: {\n        on: {\n          TAB_CLICK: {\n            target: \"focused\",\n            actions: [\"setFocusedValue\", \"setValue\"]\n          },\n          ARROW_PREV: [{\n            guard: \"selectOnFocus\",\n            actions: [\"focusPrevTab\", \"selectFocusedTab\"]\n          }, {\n            actions: \"focusPrevTab\"\n          }],\n          ARROW_NEXT: [{\n            guard: \"selectOnFocus\",\n            actions: [\"focusNextTab\", \"selectFocusedTab\"]\n          }, {\n            actions: \"focusNextTab\"\n          }],\n          HOME: [{\n            guard: \"selectOnFocus\",\n            actions: [\"focusFirstTab\", \"selectFocusedTab\"]\n          }, {\n            actions: \"focusFirstTab\"\n          }],\n          END: [{\n            guard: \"selectOnFocus\",\n            actions: [\"focusLastTab\", \"selectFocusedTab\"]\n          }, {\n            actions: \"focusLastTab\"\n          }],\n          ENTER: {\n            guard: not(\"selectOnFocus\"),\n            actions: \"selectFocusedTab\"\n          },\n          TAB_FOCUS: {\n            actions: [\"setFocusedValue\"]\n          },\n          TAB_BLUR: {\n            target: \"idle\",\n            actions: \"clearFocusedValue\"\n          }\n        }\n      }\n    }\n  }, {\n    guards: {\n      selectOnFocus: ctx2 => ctx2.activationMode === \"automatic\"\n    },\n    actions: {\n      syncFocusedValue(ctx2) {\n        if (ctx2.value != null && ctx2.focusedValue == null) {\n          ctx2.focusedValue = ctx2.value;\n        }\n      },\n      selectFocusedTab(ctx2) {\n        raf(() => {\n          set.value(ctx2, ctx2.focusedValue);\n        });\n      },\n      setFocusedValue(ctx2, evt) {\n        if (evt.value == null) return;\n        set.focusedValue(ctx2, evt.value);\n      },\n      clearFocusedValue(ctx2) {\n        set.focusedValue(ctx2, null);\n      },\n      setValue(ctx2, evt) {\n        set.value(ctx2, evt.value);\n      },\n      clearValue(ctx2) {\n        set.value(ctx2, null);\n      },\n      focusFirstTab(ctx2) {\n        raf(() => {\n          dom.getFirstTriggerEl(ctx2)?.focus();\n        });\n      },\n      focusLastTab(ctx2) {\n        raf(() => {\n          dom.getLastTriggerEl(ctx2)?.focus();\n        });\n      },\n      focusNextTab(ctx2) {\n        if (!ctx2.focusedValue) return;\n        const triggerEl = dom.getNextTriggerEl(ctx2, ctx2.focusedValue);\n        raf(() => {\n          if (ctx2.composite) {\n            triggerEl?.focus();\n          } else if (triggerEl?.dataset.value != null) {\n            set.focusedValue(ctx2, triggerEl.dataset.value);\n          }\n        });\n      },\n      focusPrevTab(ctx2) {\n        if (!ctx2.focusedValue) return;\n        const triggerEl = dom.getPrevTriggerEl(ctx2, ctx2.focusedValue);\n        raf(() => {\n          if (ctx2.composite) {\n            triggerEl?.focus();\n          } else if (triggerEl?.dataset.value != null) {\n            set.focusedValue(ctx2, triggerEl.dataset.value);\n          }\n        });\n      },\n      checkRenderedElements(ctx2) {\n        ctx2.indicatorState.rendered = !!dom.getIndicatorEl(ctx2);\n      },\n      syncTabIndex(ctx2) {\n        raf(() => {\n          const contentEl = dom.getSelectedContentEl(ctx2);\n          if (!contentEl) return;\n          const focusables = getFocusables(contentEl);\n          if (focusables.length > 0) {\n            contentEl.removeAttribute(\"tabindex\");\n          } else {\n            contentEl.setAttribute(\"tabindex\", \"0\");\n          }\n        });\n      },\n      cleanupObserver(ctx2) {\n        ctx2.indicatorCleanup?.();\n      },\n      allowIndicatorTransition(ctx2) {\n        ctx2.indicatorState.transition = true;\n      },\n      setIndicatorRect(ctx2, evt) {\n        const value = evt.id ?? ctx2.value;\n        if (!ctx2.indicatorState.rendered || !value) return;\n        const triggerEl = dom.getTriggerEl(ctx2, value);\n        if (!triggerEl) return;\n        ctx2.indicatorState.rect = dom.getRectById(ctx2, value);\n        nextTick(() => {\n          ctx2.indicatorState.transition = false;\n        });\n      },\n      syncSsr(ctx2) {\n        ctx2.ssr = false;\n      },\n      syncIndicatorRect(ctx2) {\n        ctx2.indicatorCleanup?.();\n        const value = ctx2.value;\n        if (!ctx2.indicatorState.rendered || !value) return;\n        const triggerEl = dom.getSelectedTriggerEl(ctx2);\n        if (!triggerEl) return;\n        ctx2.indicatorCleanup = trackElementRect(triggerEl, {\n          getRect(el) {\n            return dom.getOffsetRect(el);\n          },\n          onChange(rect) {\n            ctx2.indicatorState.rect = dom.resolveRect(rect);\n            nextTick(() => {\n              ctx2.indicatorState.transition = false;\n            });\n          }\n        });\n      },\n      clickIfLink(ctx2) {\n        clickIfLink(dom.getSelectedTriggerEl(ctx2));\n      }\n    }\n  });\n}\nvar invoke = {\n  change: ctx => {\n    if (ctx.value == null) return;\n    ctx.onValueChange?.({\n      value: ctx.value\n    });\n  },\n  focusChange: ctx => {\n    if (ctx.focusedValue == null) return;\n    ctx.onFocusChange?.({\n      focusedValue: ctx.focusedValue\n    });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(value, ctx.value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  focusedValue: (ctx, value) => {\n    if (isEqual(value, ctx.focusedValue)) return;\n    ctx.focusedValue = value;\n    invoke.focusChange(ctx);\n  }\n};\n\n// src/tabs.props.ts\nimport { createProps } from \"@zag-js/types\";\nimport { createSplitProps } from \"@zag-js/utils\";\nvar props = createProps()([\"activationMode\", \"composite\", \"dir\", \"getRootNode\", \"id\", \"ids\", \"loopFocus\", \"onFocusChange\", \"onValueChange\", \"orientation\", \"translations\", \"value\"]);\nvar splitProps = createSplitProps(props);\nvar triggerProps = createProps()([\"disabled\", \"value\"]);\nvar splitTriggerProps = createSplitProps(triggerProps);\nvar contentProps = createProps()([\"value\"]);\nvar splitContentProps = createSplitProps(contentProps);\nexport { anatomy, connect, contentProps, machine, props, splitContentProps, splitProps, splitTriggerProps, triggerProps };","map":{"version":3,"names":["createAnatomy","anatomy","parts","build","getEventKey","dataAttr","isComposingEvent","isSafari","isSelfTarget","createScope","itemById","nextById","prevById","queryAll","first","last","dom","getRootId","ctx","ids","root","id","getListId","list","getContentId","content","getTriggerId","trigger","getIndicatorId","indicator","getListEl","getById","getContentEl","getTriggerEl","getIndicatorEl","getElements","ownerId","CSS","escape","selector","getFirstTriggerEl","getLastTriggerEl","getNextTriggerEl","loopFocus","getPrevTriggerEl","getSelectedContentEl","value","getSelectedTriggerEl","getOffsetRect","el","left","offsetLeft","top","offsetTop","width","offsetWidth","height","offsetHeight","getRectById","tab","resolveRect","rect","connect","state","send","normalize","translations","context","focused","matches","isVertical","orientation","isHorizontal","composite","indicatorState","getTriggerState","props2","selected","focusedValue","disabled","setValue","type","clearValue","setIndicatorRect","syncTabIndex","selectNext","fromValue","src","selectPrev","focus","getRootProps","element","attrs","dir","getListProps","role","listLabel","onKeyDown","event","defaultPrevented","keyMap","ArrowDown","key","ArrowUp","ArrowLeft","ArrowRight","Home","End","Enter","exec","preventDefault","getTriggerProps","triggerState","button","ssr","tabIndex","onFocus","onBlur","target","relatedTarget","getAttribute","onClick","currentTarget","getContentProps","hidden","getIndicatorProps","style","position","willChange","transitionProperty","transitionDuration","transition","transitionTimingFunction","createMachine","guards","clickIfLink","nextTick","raf","getFocusables","trackElementRect","compact","isEqual","not","machine","userContext","initial","activationMode","rendered","watch","on","SET_VALUE","actions","CLEAR_VALUE","SET_INDICATOR_RECT","SYNC_TAB_INDEX","created","entry","exit","states","idle","TAB_FOCUS","TAB_CLICK","ARROW_PREV","guard","ARROW_NEXT","HOME","END","ENTER","TAB_BLUR","selectOnFocus","ctx2","syncFocusedValue","selectFocusedTab","set","setFocusedValue","evt","clearFocusedValue","focusFirstTab","focusLastTab","focusNextTab","triggerEl","dataset","focusPrevTab","checkRenderedElements","contentEl","focusables","length","removeAttribute","setAttribute","cleanupObserver","indicatorCleanup","allowIndicatorTransition","syncSsr","syncIndicatorRect","getRect","onChange","invoke","change","onValueChange","focusChange","onFocusChange","createProps","createSplitProps","props","splitProps","triggerProps","splitTriggerProps","contentProps","splitContentProps"],"sources":["C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\tabs\\src\\tabs.anatomy.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\tabs\\src\\tabs.connect.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\tabs\\src\\tabs.dom.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\tabs\\src\\tabs.machine.ts","C:\\Users\\lab_services_student\\Desktop\\PartThree\\frontend\\node_modules\\@zag-js\\tabs\\src\\tabs.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"tabs\").parts(\"root\", \"list\", \"trigger\", \"content\", \"indicator\")\nexport const parts = anatomy.build()\n","import { getEventKey, type EventKeyMap } from \"@zag-js/dom-event\"\nimport { dataAttr, isComposingEvent, isSafari, isSelfTarget } from \"@zag-js/dom-query\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./tabs.anatomy\"\nimport { dom } from \"./tabs.dom\"\nimport type { MachineApi, Send, State, TriggerProps, TriggerState } from \"./tabs.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const translations = state.context.translations\n  const focused = state.matches(\"focused\")\n\n  const isVertical = state.context.orientation === \"vertical\"\n  const isHorizontal = state.context.orientation === \"horizontal\"\n  const composite = state.context.composite\n  const indicator = state.context.indicatorState\n\n  function getTriggerState(props: TriggerProps): TriggerState {\n    return {\n      selected: state.context.value === props.value,\n      focused: state.context.focusedValue === props.value,\n      disabled: !!props.disabled,\n    }\n  }\n\n  return {\n    value: state.context.value,\n    focusedValue: state.context.focusedValue,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value })\n    },\n    clearValue() {\n      send({ type: \"CLEAR_VALUE\" })\n    },\n    setIndicatorRect(value) {\n      const id = dom.getTriggerId(state.context, value)\n      send({ type: \"SET_INDICATOR_RECT\", id })\n    },\n    syncTabIndex() {\n      send(\"SYNC_TAB_INDEX\")\n    },\n    selectNext(fromValue) {\n      send({ type: \"TAB_FOCUS\", value: fromValue, src: \"selectNext\" })\n      send({ type: \"ARROW_NEXT\", src: \"selectNext\" })\n    },\n    selectPrev(fromValue) {\n      send({ type: \"TAB_FOCUS\", value: fromValue, src: \"selectPrev\" })\n      send({ type: \"ARROW_PREV\", src: \"selectPrev\" })\n    },\n    focus() {\n      dom.getSelectedTriggerEl(state.context)?.focus()\n    },\n\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": dataAttr(focused),\n        dir: state.context.dir,\n      })\n    },\n\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        id: dom.getListId(state.context),\n        role: \"tablist\",\n        dir: state.context.dir,\n        \"data-focus\": dataAttr(focused),\n        \"aria-orientation\": state.context.orientation,\n        \"data-orientation\": state.context.orientation,\n        \"aria-label\": translations?.listLabel,\n        onKeyDown(event) {\n          if (event.defaultPrevented) return\n\n          if (!isSelfTarget(event)) return\n          if (isComposingEvent(event)) return\n\n          const keyMap: EventKeyMap = {\n            ArrowDown() {\n              if (isHorizontal) return\n              send({ type: \"ARROW_NEXT\", key: \"ArrowDown\" })\n            },\n            ArrowUp() {\n              if (isHorizontal) return\n              send({ type: \"ARROW_PREV\", key: \"ArrowUp\" })\n            },\n            ArrowLeft() {\n              if (isVertical) return\n              send({ type: \"ARROW_PREV\", key: \"ArrowLeft\" })\n            },\n            ArrowRight() {\n              if (isVertical) return\n              send({ type: \"ARROW_NEXT\", key: \"ArrowRight\" })\n            },\n            Home() {\n              send(\"HOME\")\n            },\n            End() {\n              send(\"END\")\n            },\n            Enter() {\n              send({ type: \"ENTER\" })\n            },\n          }\n\n          let key = getEventKey(event, state.context)\n          const exec = keyMap[key]\n\n          if (exec) {\n            event.preventDefault()\n            exec(event)\n          }\n        },\n      })\n    },\n\n    getTriggerState,\n\n    getTriggerProps(props) {\n      const { value, disabled } = props\n      const triggerState = getTriggerState(props)\n\n      return normalize.button({\n        ...parts.trigger.attrs,\n        role: \"tab\",\n        type: \"button\",\n        disabled,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": dataAttr(disabled),\n        \"aria-disabled\": disabled,\n        \"data-value\": value,\n        \"aria-selected\": triggerState.selected,\n        \"data-selected\": dataAttr(triggerState.selected),\n        \"data-focus\": dataAttr(triggerState.focused),\n        \"aria-controls\": triggerState.selected ? dom.getContentId(state.context, value) : undefined,\n        \"data-ownedby\": dom.getListId(state.context),\n        \"data-ssr\": dataAttr(state.context.ssr),\n        id: dom.getTriggerId(state.context, value),\n        tabIndex: triggerState.selected && composite ? 0 : -1,\n        onFocus() {\n          send({ type: \"TAB_FOCUS\", value })\n        },\n        onBlur(event) {\n          const target = event.relatedTarget as HTMLElement | null\n          if (target?.getAttribute(\"role\") !== \"tab\") {\n            send({ type: \"TAB_BLUR\" })\n          }\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return\n          if (disabled) return\n          if (isSafari()) {\n            event.currentTarget.focus()\n          }\n          send({ type: \"TAB_CLICK\", value })\n        },\n      })\n    },\n\n    getContentProps(props) {\n      const { value } = props\n      const selected = state.context.value === value\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context, value),\n        tabIndex: composite ? 0 : -1,\n        \"aria-labelledby\": dom.getTriggerId(state.context, value),\n        role: \"tabpanel\",\n        \"data-ownedby\": dom.getListId(state.context),\n        \"data-selected\": dataAttr(selected),\n        \"data-orientation\": state.context.orientation,\n        hidden: !selected,\n      })\n    },\n\n    getIndicatorProps() {\n      return normalize.element({\n        id: dom.getIndicatorId(state.context),\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        style: {\n          \"--transition-property\": \"left, right, top, bottom, width, height\",\n          \"--left\": indicator.rect?.left,\n          \"--top\": indicator.rect?.top,\n          \"--width\": indicator.rect?.width,\n          \"--height\": indicator.rect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: indicator.transition ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [isHorizontal ? \"left\" : \"top\"]: isHorizontal ? \"var(--left)\" : \"var(--top)\",\n        },\n      })\n    },\n  }\n}\n","import { createScope, itemById, nextById, prevById, queryAll } from \"@zag-js/dom-query\"\nimport { first, last } from \"@zag-js/utils\"\nimport type { MachineContext as Ctx } from \"./tabs.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `tabs:${ctx.id}`,\n  getListId: (ctx: Ctx) => ctx.ids?.list ?? `tabs:${ctx.id}:list`,\n  getContentId: (ctx: Ctx, id: string) => ctx.ids?.content ?? `tabs:${ctx.id}:content-${id}`,\n  getTriggerId: (ctx: Ctx, id: string) => ctx.ids?.trigger ?? `tabs:${ctx.id}:trigger-${id}`,\n  getIndicatorId: (ctx: Ctx) => ctx.ids?.indicator ?? `tabs:${ctx.id}:indicator`,\n\n  getListEl: (ctx: Ctx) => dom.getById(ctx, dom.getListId(ctx)),\n  getContentEl: (ctx: Ctx, id: string) => dom.getById(ctx, dom.getContentId(ctx, id)),\n  getTriggerEl: (ctx: Ctx, id: string) => dom.getById(ctx, dom.getTriggerId(ctx, id)),\n  getIndicatorEl: (ctx: Ctx) => dom.getById(ctx, dom.getIndicatorId(ctx)),\n\n  getElements: (ctx: Ctx) => {\n    const ownerId = CSS.escape(dom.getListId(ctx))\n    const selector = `[role=tab][data-ownedby='${ownerId}']:not([disabled])`\n    return queryAll(dom.getListEl(ctx), selector)\n  },\n\n  getFirstTriggerEl: (ctx: Ctx) => first(dom.getElements(ctx)),\n  getLastTriggerEl: (ctx: Ctx) => last(dom.getElements(ctx)),\n  getNextTriggerEl: (ctx: Ctx, id: string) => nextById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loopFocus),\n  getPrevTriggerEl: (ctx: Ctx, id: string) => prevById(dom.getElements(ctx), dom.getTriggerId(ctx, id), ctx.loopFocus),\n  getSelectedContentEl: (ctx: Ctx) => {\n    if (!ctx.value) return\n    return dom.getContentEl(ctx, ctx.value)\n  },\n  getSelectedTriggerEl: (ctx: Ctx) => {\n    if (!ctx.value) return\n    return dom.getTriggerEl(ctx, ctx.value)\n  },\n\n  getOffsetRect: (el: HTMLElement | undefined) => {\n    return {\n      left: el?.offsetLeft ?? 0,\n      top: el?.offsetTop ?? 0,\n      width: el?.offsetWidth ?? 0,\n      height: el?.offsetHeight ?? 0,\n    }\n  },\n\n  getRectById: (ctx: Ctx, id: string) => {\n    const tab = itemById(dom.getElements(ctx), dom.getTriggerId(ctx, id))\n    return dom.resolveRect(dom.getOffsetRect(tab))\n  },\n\n  resolveRect: (rect: Record<\"width\" | \"height\" | \"left\" | \"top\", number>) => ({\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    left: `${rect.left}px`,\n    top: `${rect.top}px`,\n  }),\n})\n","import { createMachine, guards } from \"@zag-js/core\"\nimport { clickIfLink } from \"@zag-js/dom-event\"\nimport { nextTick, raf, getFocusables } from \"@zag-js/dom-query\"\nimport { trackElementRect } from \"@zag-js/element-rect\"\nimport { compact, isEqual } from \"@zag-js/utils\"\nimport { dom } from \"./tabs.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./tabs.types\"\n\nconst { not } = guards\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      initial: \"idle\",\n\n      context: {\n        dir: \"ltr\",\n        orientation: \"horizontal\",\n        activationMode: \"automatic\",\n        value: null,\n        loopFocus: true,\n        composite: true,\n        ...ctx,\n        focusedValue: ctx.value ?? null,\n        ssr: true,\n        indicatorState: {\n          rendered: false,\n          transition: false,\n          rect: { left: \"0px\", top: \"0px\", width: \"0px\", height: \"0px\" },\n        },\n      },\n\n      watch: {\n        value: [\"allowIndicatorTransition\", \"syncIndicatorRect\", \"syncTabIndex\", \"clickIfLink\"],\n        dir: [\"syncIndicatorRect\"],\n        orientation: [\"syncIndicatorRect\"],\n      },\n\n      on: {\n        SET_VALUE: {\n          actions: \"setValue\",\n        },\n        CLEAR_VALUE: {\n          actions: \"clearValue\",\n        },\n        SET_INDICATOR_RECT: {\n          actions: \"setIndicatorRect\",\n        },\n        SYNC_TAB_INDEX: {\n          actions: \"syncTabIndex\",\n        },\n      },\n\n      created: [\"syncFocusedValue\"],\n\n      entry: [\"checkRenderedElements\", \"syncIndicatorRect\", \"syncTabIndex\", \"syncSsr\"],\n\n      exit: [\"cleanupObserver\"],\n\n      states: {\n        idle: {\n          on: {\n            TAB_FOCUS: {\n              target: \"focused\",\n              actions: \"setFocusedValue\",\n            },\n            TAB_CLICK: {\n              target: \"focused\",\n              actions: [\"setFocusedValue\", \"setValue\"],\n            },\n          },\n        },\n        focused: {\n          on: {\n            TAB_CLICK: {\n              target: \"focused\",\n              actions: [\"setFocusedValue\", \"setValue\"],\n            },\n            ARROW_PREV: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusPrevTab\", \"selectFocusedTab\"],\n              },\n              {\n                actions: \"focusPrevTab\",\n              },\n            ],\n            ARROW_NEXT: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusNextTab\", \"selectFocusedTab\"],\n              },\n              {\n                actions: \"focusNextTab\",\n              },\n            ],\n            HOME: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusFirstTab\", \"selectFocusedTab\"],\n              },\n              {\n                actions: \"focusFirstTab\",\n              },\n            ],\n            END: [\n              {\n                guard: \"selectOnFocus\",\n                actions: [\"focusLastTab\", \"selectFocusedTab\"],\n              },\n              {\n                actions: \"focusLastTab\",\n              },\n            ],\n            ENTER: {\n              guard: not(\"selectOnFocus\"),\n              actions: \"selectFocusedTab\",\n            },\n            TAB_FOCUS: {\n              actions: [\"setFocusedValue\"],\n            },\n            TAB_BLUR: {\n              target: \"idle\",\n              actions: \"clearFocusedValue\",\n            },\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        selectOnFocus: (ctx) => ctx.activationMode === \"automatic\",\n      },\n\n      actions: {\n        syncFocusedValue(ctx) {\n          if (ctx.value != null && ctx.focusedValue == null) {\n            ctx.focusedValue = ctx.value\n          }\n        },\n        selectFocusedTab(ctx) {\n          raf(() => {\n            set.value(ctx, ctx.focusedValue)\n          })\n        },\n        setFocusedValue(ctx, evt) {\n          if (evt.value == null) return\n          set.focusedValue(ctx, evt.value)\n        },\n        clearFocusedValue(ctx) {\n          set.focusedValue(ctx, null)\n        },\n        setValue(ctx, evt) {\n          set.value(ctx, evt.value)\n        },\n        clearValue(ctx) {\n          set.value(ctx, null)\n        },\n        focusFirstTab(ctx) {\n          raf(() => {\n            dom.getFirstTriggerEl(ctx)?.focus()\n          })\n        },\n        focusLastTab(ctx) {\n          raf(() => {\n            dom.getLastTriggerEl(ctx)?.focus()\n          })\n        },\n        focusNextTab(ctx) {\n          if (!ctx.focusedValue) return\n          const triggerEl = dom.getNextTriggerEl(ctx, ctx.focusedValue)\n          raf(() => {\n            if (ctx.composite) {\n              triggerEl?.focus()\n            } else if (triggerEl?.dataset.value != null) {\n              set.focusedValue(ctx, triggerEl.dataset.value)\n            }\n          })\n        },\n        focusPrevTab(ctx) {\n          if (!ctx.focusedValue) return\n          const triggerEl = dom.getPrevTriggerEl(ctx, ctx.focusedValue)\n          raf(() => {\n            if (ctx.composite) {\n              triggerEl?.focus()\n            } else if (triggerEl?.dataset.value != null) {\n              set.focusedValue(ctx, triggerEl.dataset.value)\n            }\n          })\n        },\n        checkRenderedElements(ctx) {\n          ctx.indicatorState.rendered = !!dom.getIndicatorEl(ctx)\n        },\n        syncTabIndex(ctx) {\n          raf(() => {\n            const contentEl = dom.getSelectedContentEl(ctx)\n            if (!contentEl) return\n            const focusables = getFocusables(contentEl)\n            if (focusables.length > 0) {\n              contentEl.removeAttribute(\"tabindex\")\n            } else {\n              contentEl.setAttribute(\"tabindex\", \"0\")\n            }\n          })\n        },\n        cleanupObserver(ctx) {\n          ctx.indicatorCleanup?.()\n        },\n        allowIndicatorTransition(ctx) {\n          ctx.indicatorState.transition = true\n        },\n        setIndicatorRect(ctx, evt) {\n          const value = evt.id ?? ctx.value\n          if (!ctx.indicatorState.rendered || !value) return\n\n          const triggerEl = dom.getTriggerEl(ctx, value)\n          if (!triggerEl) return\n\n          ctx.indicatorState.rect = dom.getRectById(ctx, value)\n          nextTick(() => {\n            ctx.indicatorState.transition = false\n          })\n        },\n        syncSsr(ctx) {\n          ctx.ssr = false\n        },\n        syncIndicatorRect(ctx) {\n          ctx.indicatorCleanup?.()\n\n          const value = ctx.value\n          if (!ctx.indicatorState.rendered || !value) return\n\n          const triggerEl = dom.getSelectedTriggerEl(ctx)\n          if (!triggerEl) return\n\n          ctx.indicatorCleanup = trackElementRect(triggerEl, {\n            getRect(el) {\n              return dom.getOffsetRect(el)\n            },\n            onChange(rect) {\n              ctx.indicatorState.rect = dom.resolveRect(rect)\n              nextTick(() => {\n                ctx.indicatorState.transition = false\n              })\n            },\n          })\n        },\n        clickIfLink(ctx) {\n          clickIfLink(dom.getSelectedTriggerEl(ctx))\n        },\n      },\n    },\n  )\n}\n\nconst invoke = {\n  change: (ctx: MachineContext) => {\n    if (ctx.value == null) return\n    ctx.onValueChange?.({ value: ctx.value })\n  },\n  focusChange: (ctx: MachineContext) => {\n    if (ctx.focusedValue == null) return\n    ctx.onFocusChange?.({ focusedValue: ctx.focusedValue })\n  },\n}\n\nconst set = {\n  value: (ctx: MachineContext, value: string | null) => {\n    if (isEqual(value, ctx.value)) return\n    ctx.value = value\n    invoke.change(ctx)\n  },\n  focusedValue: (ctx: MachineContext, value: string | null) => {\n    if (isEqual(value, ctx.focusedValue)) return\n    ctx.focusedValue = value\n    invoke.focusChange(ctx)\n  },\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { ContentProps, TriggerProps, UserDefinedContext } from \"./tabs.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"activationMode\",\n  \"composite\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"loopFocus\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"orientation\",\n  \"translations\",\n  \"value\",\n])\n\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n\nexport const triggerProps = createProps<TriggerProps>()([\"disabled\", \"value\"])\nexport const splitTriggerProps = createSplitProps<TriggerProps>(triggerProps)\n\nexport const contentProps = createProps<ContentProps>()([\"value\"])\nexport const splitContentProps = createSplitProps<ContentProps>(contentProps)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}